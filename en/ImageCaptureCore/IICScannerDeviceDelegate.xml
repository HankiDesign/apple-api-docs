<Type Name="IICScannerDeviceDelegate" FullName="ImageCaptureCore.IICScannerDeviceDelegate">
  <TypeSignature Language="C#" Value="public interface IICScannerDeviceDelegate : IDisposable, ImageCaptureCore.IICDeviceDelegate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IICScannerDeviceDelegate implements class ImageCaptureCore.IICDeviceDelegate, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:ImageCaptureCore.IICScannerDeviceDelegate" />
  <TypeSignature Language="F#" Value="type IICScannerDeviceDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface IICDeviceDelegate" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ImageCaptureCore.IICDeviceDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="ICScannerDeviceDelegate", WrapperType=typeof(ImageCaptureCore.ICScannerDeviceDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidBecomeAvailable", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(ImageCaptureCore.ICScannerDevice) }, Selector="scannerDeviceDidBecomeAvailable:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidSelectFunctionalUnit", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(ImageCaptureCore.ICScannerDevice), typeof(ImageCaptureCore.ICScannerFunctionalUnit), typeof(Foundation.NSError) }, Selector="scannerDevice:didSelectFunctionalUnit:error:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidScanToUrl", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(ImageCaptureCore.ICScannerDevice), typeof(Foundation.NSUrl), typeof(Foundation.NSData) }, Selector="scannerDevice:didScanToURL:data:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidScanToUrl", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(ImageCaptureCore.ICScannerDevice), typeof(Foundation.NSUrl) }, Selector="scannerDevice:didScanToURL:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidScanToBandData", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(ImageCaptureCore.ICScannerDevice), typeof(ImageCaptureCore.ICScannerBandData) }, Selector="scannerDevice:didScanToBandData:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidCompleteOverviewScan", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(ImageCaptureCore.ICScannerDevice), typeof(Foundation.NSError) }, Selector="scannerDevice:didCompleteOverviewScanWithError:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidCompleteScan", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(ImageCaptureCore.ICScannerDevice), typeof(Foundation.NSError) }, Selector="scannerDevice:didCompleteScanWithError:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>
