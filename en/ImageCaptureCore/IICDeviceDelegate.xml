<Type Name="IICDeviceDelegate" FullName="ImageCaptureCore.IICDeviceDelegate">
  <TypeSignature Language="C#" Value="public interface IICDeviceDelegate : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IICDeviceDelegate implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:ImageCaptureCore.IICDeviceDelegate" />
  <TypeSignature Language="F#" Value="type IICDeviceDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="ICDeviceDelegate", WrapperType=typeof(ImageCaptureCore.ICDeviceDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidRemoveDevice", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(ImageCaptureCore.ICDevice) }, Selector="didRemoveDevice:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidOpenSession", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(ImageCaptureCore.ICDevice), typeof(Foundation.NSError) }, Selector="device:didOpenSessionWithError:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidBecomeReady", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(ImageCaptureCore.ICDevice) }, Selector="deviceDidBecomeReady:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidCloseSession", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(ImageCaptureCore.ICDevice), typeof(Foundation.NSError) }, Selector="device:didCloseSessionWithError:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidChangeName", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(ImageCaptureCore.ICDevice) }, Selector="deviceDidChangeName:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidChangeSharingState", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(ImageCaptureCore.ICDevice) }, Selector="deviceDidChangeSharingState:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidReceiveStatusInformation", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(ImageCaptureCore.ICDevice), typeof(Foundation.NSDictionary`2&lt;Foundation.NSString,Foundation.NSObject&gt;) }, Selector="device:didReceiveStatusInformation:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidEncounterError", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(ImageCaptureCore.ICDevice), typeof(Foundation.NSError) }, Selector="device:didEncounterError:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidReceiveButtonPress", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(ImageCaptureCore.ICDevice), typeof(Foundation.NSString) }, Selector="device:didReceiveButtonPress:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidReceiveCustomNotification", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(ImageCaptureCore.ICDevice), typeof(Foundation.NSDictionary`2&lt;Foundation.NSString,Foundation.NSObject&gt;), typeof(Foundation.NSData) }, Selector="device:didReceiveCustomNotification:data:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DidRemoveDevice">
      <MemberSignature Language="C#" Value="public void DidRemoveDevice (ImageCaptureCore.ICDevice device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidRemoveDevice(class ImageCaptureCore.ICDevice device) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageCaptureCore.IICDeviceDelegate.DidRemoveDevice(ImageCaptureCore.ICDevice)" />
      <MemberSignature Language="F#" Value="abstract member DidRemoveDevice : ImageCaptureCore.ICDevice -&gt; unit" Usage="iICDeviceDelegate.DidRemoveDevice device" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("didRemoveDevice:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="ImageCaptureCore.ICDevice" />
      </Parameters>
      <Docs>
        <param name="device">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
