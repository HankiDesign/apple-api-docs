<Type Name="IGKChallengesViewControllerDelegate" FullName="GameKit.IGKChallengesViewControllerDelegate">
  <TypeSignature Language="C#" Value="public interface IGKChallengesViewControllerDelegate : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGKChallengesViewControllerDelegate implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:GameKit.IGKChallengesViewControllerDelegate" />
  <TypeSignature Language="F#" Value="type IGKChallengesViewControllerDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="GKChallengesViewControllerDelegate", WrapperType=typeof(GameKit.GKChallengesViewControllerDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidFinish", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(GameKit.GKChallengesViewController) }, Selector="challengesViewControllerDidFinish:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.iOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DidFinish">
      <MemberSignature Language="C#" Value="public void DidFinish (GameKit.GKChallengesViewController viewController);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFinish(class GameKit.GKChallengesViewController viewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.IGKChallengesViewControllerDelegate.DidFinish(GameKit.GKChallengesViewController)" />
      <MemberSignature Language="F#" Value="abstract member DidFinish : GameKit.GKChallengesViewController -&gt; unit" Usage="iGKChallengesViewControllerDelegate.DidFinish viewController" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("challengesViewControllerDidFinish:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewController" Type="GameKit.GKChallengesViewController" />
      </Parameters>
      <Docs>
        <param name="viewController">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
