<Type Name="QLPreviewPanelDelegate" FullName="QuickLookUI.QLPreviewPanelDelegate">
  <TypeSignature Language="C#" Value="public class QLPreviewPanelDelegate : Foundation.NSObject, IDisposable, QuickLookUI.IQLPreviewPanelDelegate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QLPreviewPanelDelegate extends Foundation.NSObject implements class AppKit.INSWindowDelegate, class ObjCRuntime.INativeObject, class QuickLookUI.IQLPreviewPanelDelegate, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:QuickLookUI.QLPreviewPanelDelegate" />
  <TypeSignature Language="F#" Value="type QLPreviewPanelDelegate = class&#xA;    inherit NSObject&#xA;    interface IQLPreviewPanelDelegate&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSWindowDelegate" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>AppKit.INSWindowDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>QuickLookUI.IQLPreviewPanelDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Register("QLPreviewPanelDelegate", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QLPreviewPanelDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected QLPreviewPanelDelegate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new QuickLookUI.QLPreviewPanelDelegate : Foundation.NSObjectFlag -&gt; QuickLookUI.QLPreviewPanelDelegate" Usage="new QuickLookUI.QLPreviewPanelDelegate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal QLPreviewPanelDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new QuickLookUI.QLPreviewPanelDelegate : nativeint -&gt; QuickLookUI.QLPreviewPanelDelegate" Usage="new QuickLookUI.QLPreviewPanelDelegate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomWindowsToEnterFullScreen">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSWindow[] CustomWindowsToEnterFullScreen (AppKit.NSWindow window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSWindow[] CustomWindowsToEnterFullScreen(class AppKit.NSWindow window) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.CustomWindowsToEnterFullScreen(AppKit.NSWindow)" />
      <MemberSignature Language="F#" Value="abstract member CustomWindowsToEnterFullScreen : AppKit.NSWindow -&gt; AppKit.NSWindow[]&#xA;override this.CustomWindowsToEnterFullScreen : AppKit.NSWindow -&gt; AppKit.NSWindow[]" Usage="qLPreviewPanelDelegate.CustomWindowsToEnterFullScreen window" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("customWindowsToEnterFullScreenForWindow:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSWindow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomWindowsToExitFullScreen">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSWindow[] CustomWindowsToExitFullScreen (AppKit.NSWindow window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSWindow[] CustomWindowsToExitFullScreen(class AppKit.NSWindow window) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.CustomWindowsToExitFullScreen(AppKit.NSWindow)" />
      <MemberSignature Language="F#" Value="abstract member CustomWindowsToExitFullScreen : AppKit.NSWindow -&gt; AppKit.NSWindow[]&#xA;override this.CustomWindowsToExitFullScreen : AppKit.NSWindow -&gt; AppKit.NSWindow[]" Usage="qLPreviewPanelDelegate.CustomWindowsToExitFullScreen window" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("customWindowsToExitFullScreenForWindow:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSWindow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidBecomeKey">
      <MemberSignature Language="C#" Value="public virtual void DidBecomeKey (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidBecomeKey(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidBecomeKey(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidBecomeKey : Foundation.NSNotification -&gt; unit&#xA;override this.DidBecomeKey : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidBecomeKey notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidBecomeKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidBecomeMain">
      <MemberSignature Language="C#" Value="public virtual void DidBecomeMain (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidBecomeMain(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidBecomeMain(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidBecomeMain : Foundation.NSNotification -&gt; unit&#xA;override this.DidBecomeMain : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidBecomeMain notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidBecomeMain:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeBackingProperties">
      <MemberSignature Language="C#" Value="public virtual void DidChangeBackingProperties (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidChangeBackingProperties(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidChangeBackingProperties(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidChangeBackingProperties : Foundation.NSNotification -&gt; unit&#xA;override this.DidChangeBackingProperties : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidChangeBackingProperties notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidChangeBackingProperties:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeScreen">
      <MemberSignature Language="C#" Value="public virtual void DidChangeScreen (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidChangeScreen(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidChangeScreen(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidChangeScreen : Foundation.NSNotification -&gt; unit&#xA;override this.DidChangeScreen : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidChangeScreen notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidChangeScreen:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeScreenProfile">
      <MemberSignature Language="C#" Value="public virtual void DidChangeScreenProfile (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidChangeScreenProfile(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidChangeScreenProfile(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidChangeScreenProfile : Foundation.NSNotification -&gt; unit&#xA;override this.DidChangeScreenProfile : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidChangeScreenProfile notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidChangeScreenProfile:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidDecodeRestorableState">
      <MemberSignature Language="C#" Value="public virtual void DidDecodeRestorableState (AppKit.NSWindow window, Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidDecodeRestorableState(class AppKit.NSWindow window, class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidDecodeRestorableState(AppKit.NSWindow,Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member DidDecodeRestorableState : AppKit.NSWindow * Foundation.NSCoder -&gt; unit&#xA;override this.DidDecodeRestorableState : AppKit.NSWindow * Foundation.NSCoder -&gt; unit" Usage="qLPreviewPanelDelegate.DidDecodeRestorableState (window, coder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("window:didDecodeRestorableState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidDeminiaturize">
      <MemberSignature Language="C#" Value="public virtual void DidDeminiaturize (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidDeminiaturize(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidDeminiaturize(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidDeminiaturize : Foundation.NSNotification -&gt; unit&#xA;override this.DidDeminiaturize : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidDeminiaturize notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidDeminiaturize:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidEndLiveResize">
      <MemberSignature Language="C#" Value="public virtual void DidEndLiveResize (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidEndLiveResize(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidEndLiveResize(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidEndLiveResize : Foundation.NSNotification -&gt; unit&#xA;override this.DidEndLiveResize : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidEndLiveResize notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidEndLiveResize:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidEndSheet">
      <MemberSignature Language="C#" Value="public virtual void DidEndSheet (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidEndSheet(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidEndSheet(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidEndSheet : Foundation.NSNotification -&gt; unit&#xA;override this.DidEndSheet : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidEndSheet notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidEndSheet:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidEnterFullScreen">
      <MemberSignature Language="C#" Value="public virtual void DidEnterFullScreen (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidEnterFullScreen(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidEnterFullScreen(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidEnterFullScreen : Foundation.NSNotification -&gt; unit&#xA;override this.DidEnterFullScreen : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidEnterFullScreen notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidEnterFullScreen:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidEnterVersionBrowser">
      <MemberSignature Language="C#" Value="public virtual void DidEnterVersionBrowser (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidEnterVersionBrowser(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidEnterVersionBrowser(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidEnterVersionBrowser : Foundation.NSNotification -&gt; unit&#xA;override this.DidEnterVersionBrowser : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidEnterVersionBrowser notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidEnterVersionBrowser:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidExitFullScreen">
      <MemberSignature Language="C#" Value="public virtual void DidExitFullScreen (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidExitFullScreen(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidExitFullScreen(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidExitFullScreen : Foundation.NSNotification -&gt; unit&#xA;override this.DidExitFullScreen : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidExitFullScreen notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidExitFullScreen:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidExitVersionBrowser">
      <MemberSignature Language="C#" Value="public virtual void DidExitVersionBrowser (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidExitVersionBrowser(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidExitVersionBrowser(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidExitVersionBrowser : Foundation.NSNotification -&gt; unit&#xA;override this.DidExitVersionBrowser : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidExitVersionBrowser notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidExitVersionBrowser:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidExpose">
      <MemberSignature Language="C#" Value="public virtual void DidExpose (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidExpose(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidExpose(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidExpose : Foundation.NSNotification -&gt; unit&#xA;override this.DidExpose : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidExpose notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidExpose:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFailToEnterFullScreen">
      <MemberSignature Language="C#" Value="public virtual void DidFailToEnterFullScreen (AppKit.NSWindow window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFailToEnterFullScreen(class AppKit.NSWindow window) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidFailToEnterFullScreen(AppKit.NSWindow)" />
      <MemberSignature Language="F#" Value="abstract member DidFailToEnterFullScreen : AppKit.NSWindow -&gt; unit&#xA;override this.DidFailToEnterFullScreen : AppKit.NSWindow -&gt; unit" Usage="qLPreviewPanelDelegate.DidFailToEnterFullScreen window" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidFailToEnterFullScreen:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFailToExitFullScreen">
      <MemberSignature Language="C#" Value="public virtual void DidFailToExitFullScreen (AppKit.NSWindow window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFailToExitFullScreen(class AppKit.NSWindow window) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidFailToExitFullScreen(AppKit.NSWindow)" />
      <MemberSignature Language="F#" Value="abstract member DidFailToExitFullScreen : AppKit.NSWindow -&gt; unit&#xA;override this.DidFailToExitFullScreen : AppKit.NSWindow -&gt; unit" Usage="qLPreviewPanelDelegate.DidFailToExitFullScreen window" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidFailToExitFullScreen:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidMiniaturize">
      <MemberSignature Language="C#" Value="public virtual void DidMiniaturize (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidMiniaturize(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidMiniaturize(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidMiniaturize : Foundation.NSNotification -&gt; unit&#xA;override this.DidMiniaturize : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidMiniaturize notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidMiniaturize:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidMove">
      <MemberSignature Language="C#" Value="public virtual void DidMove (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidMove(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidMove(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidMove : Foundation.NSNotification -&gt; unit&#xA;override this.DidMove : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidMove notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidMove:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidResignKey">
      <MemberSignature Language="C#" Value="public virtual void DidResignKey (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidResignKey(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidResignKey(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidResignKey : Foundation.NSNotification -&gt; unit&#xA;override this.DidResignKey : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidResignKey notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidResignKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidResignMain">
      <MemberSignature Language="C#" Value="public virtual void DidResignMain (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidResignMain(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidResignMain(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidResignMain : Foundation.NSNotification -&gt; unit&#xA;override this.DidResignMain : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidResignMain notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidResignMain:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidResize">
      <MemberSignature Language="C#" Value="public virtual void DidResize (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidResize(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidResize(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidResize : Foundation.NSNotification -&gt; unit&#xA;override this.DidResize : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidResize notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidResize:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdate">
      <MemberSignature Language="C#" Value="public virtual void DidUpdate (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdate(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.DidUpdate(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidUpdate : Foundation.NSNotification -&gt; unit&#xA;override this.DidUpdate : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.DidUpdate notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowDidUpdate:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleEvent">
      <MemberSignature Language="C#" Value="public virtual bool HandleEvent (QuickLookUI.QLPreviewPanel panel, AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleEvent(class QuickLookUI.QLPreviewPanel panel, class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.HandleEvent(QuickLookUI.QLPreviewPanel,AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member HandleEvent : QuickLookUI.QLPreviewPanel * AppKit.NSEvent -&gt; bool&#xA;override this.HandleEvent : QuickLookUI.QLPreviewPanel * AppKit.NSEvent -&gt; bool" Usage="qLPreviewPanelDelegate.HandleEvent (panel, theEvent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("previewPanel:handleEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="QuickLookUI.QLPreviewPanel" />
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="panel">To be added.</param>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldDragDocumentWithEvent">
      <MemberSignature Language="C#" Value="public virtual bool ShouldDragDocumentWithEvent (AppKit.NSWindow window, AppKit.NSEvent theEvent, CoreGraphics.CGPoint dragImageLocation, AppKit.NSPasteboard withPasteboard);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldDragDocumentWithEvent(class AppKit.NSWindow window, class AppKit.NSEvent theEvent, valuetype CoreGraphics.CGPoint dragImageLocation, class AppKit.NSPasteboard withPasteboard) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.ShouldDragDocumentWithEvent(AppKit.NSWindow,AppKit.NSEvent,CoreGraphics.CGPoint,AppKit.NSPasteboard)" />
      <MemberSignature Language="F#" Value="abstract member ShouldDragDocumentWithEvent : AppKit.NSWindow * AppKit.NSEvent * CoreGraphics.CGPoint * AppKit.NSPasteboard -&gt; bool&#xA;override this.ShouldDragDocumentWithEvent : AppKit.NSWindow * AppKit.NSEvent * CoreGraphics.CGPoint * AppKit.NSPasteboard -&gt; bool" Usage="qLPreviewPanelDelegate.ShouldDragDocumentWithEvent (window, theEvent, dragImageLocation, withPasteboard)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("window:shouldDragDocumentWithEvent:from:withPasteboard:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
        <Parameter Name="dragImageLocation" Type="CoreGraphics.CGPoint" />
        <Parameter Name="withPasteboard" Type="AppKit.NSPasteboard" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <param name="theEvent">To be added.</param>
        <param name="dragImageLocation">To be added.</param>
        <param name="withPasteboard">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPopUpDocumentPathMenu">
      <MemberSignature Language="C#" Value="public virtual bool ShouldPopUpDocumentPathMenu (AppKit.NSWindow window, AppKit.NSMenu menu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldPopUpDocumentPathMenu(class AppKit.NSWindow window, class AppKit.NSMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.ShouldPopUpDocumentPathMenu(AppKit.NSWindow,AppKit.NSMenu)" />
      <MemberSignature Language="F#" Value="abstract member ShouldPopUpDocumentPathMenu : AppKit.NSWindow * AppKit.NSMenu -&gt; bool&#xA;override this.ShouldPopUpDocumentPathMenu : AppKit.NSWindow * AppKit.NSMenu -&gt; bool" Usage="qLPreviewPanelDelegate.ShouldPopUpDocumentPathMenu (window, menu)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("window:shouldPopUpDocumentPathMenu:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
        <Parameter Name="menu" Type="AppKit.NSMenu" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <param name="menu">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldZoom">
      <MemberSignature Language="C#" Value="public virtual bool ShouldZoom (AppKit.NSWindow window, CoreGraphics.CGRect newFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldZoom(class AppKit.NSWindow window, valuetype CoreGraphics.CGRect newFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.ShouldZoom(AppKit.NSWindow,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member ShouldZoom : AppKit.NSWindow * CoreGraphics.CGRect -&gt; bool&#xA;override this.ShouldZoom : AppKit.NSWindow * CoreGraphics.CGRect -&gt; bool" Usage="qLPreviewPanelDelegate.ShouldZoom (window, newFrame)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowShouldZoom:toFrame:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
        <Parameter Name="newFrame" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <param name="newFrame">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceFrameOnScreenForPreviewItem">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect SourceFrameOnScreenForPreviewItem (QuickLookUI.QLPreviewPanel panel, QuickLookUI.IQLPreviewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGRect SourceFrameOnScreenForPreviewItem(class QuickLookUI.QLPreviewPanel panel, class QuickLookUI.IQLPreviewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.SourceFrameOnScreenForPreviewItem(QuickLookUI.QLPreviewPanel,QuickLookUI.IQLPreviewItem)" />
      <MemberSignature Language="F#" Value="abstract member SourceFrameOnScreenForPreviewItem : QuickLookUI.QLPreviewPanel * QuickLookUI.IQLPreviewItem -&gt; CoreGraphics.CGRect&#xA;override this.SourceFrameOnScreenForPreviewItem : QuickLookUI.QLPreviewPanel * QuickLookUI.IQLPreviewItem -&gt; CoreGraphics.CGRect" Usage="qLPreviewPanelDelegate.SourceFrameOnScreenForPreviewItem (panel, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("previewPanel:sourceFrameOnScreenForPreviewItem:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="QuickLookUI.QLPreviewPanel" />
        <Parameter Name="item" Type="QuickLookUI.IQLPreviewItem" />
      </Parameters>
      <Docs>
        <param name="panel">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCustomAnimationToEnterFullScreen">
      <MemberSignature Language="C#" Value="public virtual void StartCustomAnimationToEnterFullScreen (AppKit.NSWindow window, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartCustomAnimationToEnterFullScreen(class AppKit.NSWindow window, float64 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.StartCustomAnimationToEnterFullScreen(AppKit.NSWindow,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member StartCustomAnimationToEnterFullScreen : AppKit.NSWindow * double -&gt; unit&#xA;override this.StartCustomAnimationToEnterFullScreen : AppKit.NSWindow * double -&gt; unit" Usage="qLPreviewPanelDelegate.StartCustomAnimationToEnterFullScreen (window, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("window:startCustomAnimationToEnterFullScreenWithDuration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCustomAnimationToExitFullScreen">
      <MemberSignature Language="C#" Value="public virtual void StartCustomAnimationToExitFullScreen (AppKit.NSWindow window, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartCustomAnimationToExitFullScreen(class AppKit.NSWindow window, float64 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.StartCustomAnimationToExitFullScreen(AppKit.NSWindow,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member StartCustomAnimationToExitFullScreen : AppKit.NSWindow * double -&gt; unit&#xA;override this.StartCustomAnimationToExitFullScreen : AppKit.NSWindow * double -&gt; unit" Usage="qLPreviewPanelDelegate.StartCustomAnimationToExitFullScreen (window, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("window:startCustomAnimationToExitFullScreenWithDuration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionImageForPreviewItem">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject TransitionImageForPreviewItem (QuickLookUI.QLPreviewPanel panel, QuickLookUI.IQLPreviewItem item, CoreGraphics.CGRect contentRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject TransitionImageForPreviewItem(class QuickLookUI.QLPreviewPanel panel, class QuickLookUI.IQLPreviewItem item, valuetype CoreGraphics.CGRect contentRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.TransitionImageForPreviewItem(QuickLookUI.QLPreviewPanel,QuickLookUI.IQLPreviewItem,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member TransitionImageForPreviewItem : QuickLookUI.QLPreviewPanel * QuickLookUI.IQLPreviewItem * CoreGraphics.CGRect -&gt; Foundation.NSObject&#xA;override this.TransitionImageForPreviewItem : QuickLookUI.QLPreviewPanel * QuickLookUI.IQLPreviewItem * CoreGraphics.CGRect -&gt; Foundation.NSObject" Usage="qLPreviewPanelDelegate.TransitionImageForPreviewItem (panel, item, contentRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("previewPanel:transitionImageForPreviewItem:contentRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="QuickLookUI.QLPreviewPanel" />
        <Parameter Name="item" Type="QuickLookUI.IQLPreviewItem" />
        <Parameter Name="contentRect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="panel">To be added.</param>
        <param name="item">To be added.</param>
        <param name="contentRect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillBeginSheet">
      <MemberSignature Language="C#" Value="public virtual void WillBeginSheet (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillBeginSheet(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillBeginSheet(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member WillBeginSheet : Foundation.NSNotification -&gt; unit&#xA;override this.WillBeginSheet : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.WillBeginSheet notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowWillBeginSheet:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillClose">
      <MemberSignature Language="C#" Value="public virtual void WillClose (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillClose(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillClose(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member WillClose : Foundation.NSNotification -&gt; unit&#xA;override this.WillClose : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.WillClose notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowWillClose:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillEncodeRestorableState">
      <MemberSignature Language="C#" Value="public virtual void WillEncodeRestorableState (AppKit.NSWindow window, Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillEncodeRestorableState(class AppKit.NSWindow window, class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillEncodeRestorableState(AppKit.NSWindow,Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member WillEncodeRestorableState : AppKit.NSWindow * Foundation.NSCoder -&gt; unit&#xA;override this.WillEncodeRestorableState : AppKit.NSWindow * Foundation.NSCoder -&gt; unit" Usage="qLPreviewPanelDelegate.WillEncodeRestorableState (window, coder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("window:willEncodeRestorableState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillEnterFullScreen">
      <MemberSignature Language="C#" Value="public virtual void WillEnterFullScreen (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillEnterFullScreen(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillEnterFullScreen(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member WillEnterFullScreen : Foundation.NSNotification -&gt; unit&#xA;override this.WillEnterFullScreen : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.WillEnterFullScreen notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowWillEnterFullScreen:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillEnterVersionBrowser">
      <MemberSignature Language="C#" Value="public virtual void WillEnterVersionBrowser (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillEnterVersionBrowser(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillEnterVersionBrowser(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member WillEnterVersionBrowser : Foundation.NSNotification -&gt; unit&#xA;override this.WillEnterVersionBrowser : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.WillEnterVersionBrowser notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowWillEnterVersionBrowser:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillExitFullScreen">
      <MemberSignature Language="C#" Value="public virtual void WillExitFullScreen (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillExitFullScreen(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillExitFullScreen(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member WillExitFullScreen : Foundation.NSNotification -&gt; unit&#xA;override this.WillExitFullScreen : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.WillExitFullScreen notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowWillExitFullScreen:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillExitVersionBrowser">
      <MemberSignature Language="C#" Value="public virtual void WillExitVersionBrowser (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillExitVersionBrowser(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillExitVersionBrowser(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member WillExitVersionBrowser : Foundation.NSNotification -&gt; unit&#xA;override this.WillExitVersionBrowser : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.WillExitVersionBrowser notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowWillExitVersionBrowser:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillMiniaturize">
      <MemberSignature Language="C#" Value="public virtual void WillMiniaturize (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillMiniaturize(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillMiniaturize(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member WillMiniaturize : Foundation.NSNotification -&gt; unit&#xA;override this.WillMiniaturize : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.WillMiniaturize notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowWillMiniaturize:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillMove">
      <MemberSignature Language="C#" Value="public virtual void WillMove (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillMove(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillMove(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member WillMove : Foundation.NSNotification -&gt; unit&#xA;override this.WillMove : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.WillMove notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowWillMove:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillPositionSheet">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect WillPositionSheet (AppKit.NSWindow window, AppKit.NSWindow sheet, CoreGraphics.CGRect usingRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGRect WillPositionSheet(class AppKit.NSWindow window, class AppKit.NSWindow sheet, valuetype CoreGraphics.CGRect usingRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillPositionSheet(AppKit.NSWindow,AppKit.NSWindow,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member WillPositionSheet : AppKit.NSWindow * AppKit.NSWindow * CoreGraphics.CGRect -&gt; CoreGraphics.CGRect&#xA;override this.WillPositionSheet : AppKit.NSWindow * AppKit.NSWindow * CoreGraphics.CGRect -&gt; CoreGraphics.CGRect" Usage="qLPreviewPanelDelegate.WillPositionSheet (window, sheet, usingRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("window:willPositionSheet:usingRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
        <Parameter Name="sheet" Type="AppKit.NSWindow" />
        <Parameter Name="usingRect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <param name="sheet">To be added.</param>
        <param name="usingRect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillResize">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGSize WillResize (AppKit.NSWindow sender, CoreGraphics.CGSize toFrameSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGSize WillResize(class AppKit.NSWindow sender, valuetype CoreGraphics.CGSize toFrameSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillResize(AppKit.NSWindow,CoreGraphics.CGSize)" />
      <MemberSignature Language="F#" Value="abstract member WillResize : AppKit.NSWindow * CoreGraphics.CGSize -&gt; CoreGraphics.CGSize&#xA;override this.WillResize : AppKit.NSWindow * CoreGraphics.CGSize -&gt; CoreGraphics.CGSize" Usage="qLPreviewPanelDelegate.WillResize (sender, toFrameSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowWillResize:toSize:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="AppKit.NSWindow" />
        <Parameter Name="toFrameSize" Type="CoreGraphics.CGSize" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <param name="toFrameSize">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillResizeForVersionBrowser">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGSize WillResizeForVersionBrowser (AppKit.NSWindow window, CoreGraphics.CGSize maxPreferredSize, CoreGraphics.CGSize maxAllowedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGSize WillResizeForVersionBrowser(class AppKit.NSWindow window, valuetype CoreGraphics.CGSize maxPreferredSize, valuetype CoreGraphics.CGSize maxAllowedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillResizeForVersionBrowser(AppKit.NSWindow,CoreGraphics.CGSize,CoreGraphics.CGSize)" />
      <MemberSignature Language="F#" Value="abstract member WillResizeForVersionBrowser : AppKit.NSWindow * CoreGraphics.CGSize * CoreGraphics.CGSize -&gt; CoreGraphics.CGSize&#xA;override this.WillResizeForVersionBrowser : AppKit.NSWindow * CoreGraphics.CGSize * CoreGraphics.CGSize -&gt; CoreGraphics.CGSize" Usage="qLPreviewPanelDelegate.WillResizeForVersionBrowser (window, maxPreferredSize, maxAllowedSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("window:willResizeForVersionBrowserWithMaxPreferredSize:maxAllowedSize:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
        <Parameter Name="maxPreferredSize" Type="CoreGraphics.CGSize" />
        <Parameter Name="maxAllowedSize" Type="CoreGraphics.CGSize" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <param name="maxPreferredSize">To be added.</param>
        <param name="maxAllowedSize">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillReturnFieldEditor">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject WillReturnFieldEditor (AppKit.NSWindow sender, Foundation.NSObject client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject WillReturnFieldEditor(class AppKit.NSWindow sender, class Foundation.NSObject client) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillReturnFieldEditor(AppKit.NSWindow,Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member WillReturnFieldEditor : AppKit.NSWindow * Foundation.NSObject -&gt; Foundation.NSObject&#xA;override this.WillReturnFieldEditor : AppKit.NSWindow * Foundation.NSObject -&gt; Foundation.NSObject" Usage="qLPreviewPanelDelegate.WillReturnFieldEditor (sender, client)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowWillReturnFieldEditor:toObject:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="AppKit.NSWindow" />
        <Parameter Name="client" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <param name="client">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillReturnUndoManager">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSUndoManager WillReturnUndoManager (AppKit.NSWindow window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSUndoManager WillReturnUndoManager(class AppKit.NSWindow window) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillReturnUndoManager(AppKit.NSWindow)" />
      <MemberSignature Language="F#" Value="abstract member WillReturnUndoManager : AppKit.NSWindow -&gt; Foundation.NSUndoManager&#xA;override this.WillReturnUndoManager : AppKit.NSWindow -&gt; Foundation.NSUndoManager" Usage="qLPreviewPanelDelegate.WillReturnUndoManager window" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowWillReturnUndoManager:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSUndoManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillStartLiveResize">
      <MemberSignature Language="C#" Value="public virtual void WillStartLiveResize (Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillStartLiveResize(class Foundation.NSNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillStartLiveResize(Foundation.NSNotification)" />
      <MemberSignature Language="F#" Value="abstract member WillStartLiveResize : Foundation.NSNotification -&gt; unit&#xA;override this.WillStartLiveResize : Foundation.NSNotification -&gt; unit" Usage="qLPreviewPanelDelegate.WillStartLiveResize notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowWillStartLiveResize:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillUseFullScreenContentSize">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGSize WillUseFullScreenContentSize (AppKit.NSWindow window, CoreGraphics.CGSize proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGSize WillUseFullScreenContentSize(class AppKit.NSWindow window, valuetype CoreGraphics.CGSize proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillUseFullScreenContentSize(AppKit.NSWindow,CoreGraphics.CGSize)" />
      <MemberSignature Language="F#" Value="abstract member WillUseFullScreenContentSize : AppKit.NSWindow * CoreGraphics.CGSize -&gt; CoreGraphics.CGSize&#xA;override this.WillUseFullScreenContentSize : AppKit.NSWindow * CoreGraphics.CGSize -&gt; CoreGraphics.CGSize" Usage="qLPreviewPanelDelegate.WillUseFullScreenContentSize (window, proposedSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("window:willUseFullScreenContentSize:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
        <Parameter Name="proposedSize" Type="CoreGraphics.CGSize" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <param name="proposedSize">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillUseFullScreenPresentationOptions">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSApplicationPresentationOptions WillUseFullScreenPresentationOptions (AppKit.NSWindow window, AppKit.NSApplicationPresentationOptions proposedOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AppKit.NSApplicationPresentationOptions WillUseFullScreenPresentationOptions(class AppKit.NSWindow window, valuetype AppKit.NSApplicationPresentationOptions proposedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillUseFullScreenPresentationOptions(AppKit.NSWindow,AppKit.NSApplicationPresentationOptions)" />
      <MemberSignature Language="F#" Value="abstract member WillUseFullScreenPresentationOptions : AppKit.NSWindow * AppKit.NSApplicationPresentationOptions -&gt; AppKit.NSApplicationPresentationOptions&#xA;override this.WillUseFullScreenPresentationOptions : AppKit.NSWindow * AppKit.NSApplicationPresentationOptions -&gt; AppKit.NSApplicationPresentationOptions" Usage="qLPreviewPanelDelegate.WillUseFullScreenPresentationOptions (window, proposedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("window:willUseFullScreenPresentationOptions:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSApplicationPresentationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
        <Parameter Name="proposedOptions" Type="AppKit.NSApplicationPresentationOptions" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <param name="proposedOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillUseStandardFrame">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect WillUseStandardFrame (AppKit.NSWindow window, CoreGraphics.CGRect newFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGRect WillUseStandardFrame(class AppKit.NSWindow window, valuetype CoreGraphics.CGRect newFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WillUseStandardFrame(AppKit.NSWindow,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member WillUseStandardFrame : AppKit.NSWindow * CoreGraphics.CGRect -&gt; CoreGraphics.CGRect&#xA;override this.WillUseStandardFrame : AppKit.NSWindow * CoreGraphics.CGRect -&gt; CoreGraphics.CGRect" Usage="qLPreviewPanelDelegate.WillUseStandardFrame (window, newFrame)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowWillUseStandardFrame:defaultFrame:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
        <Parameter Name="newFrame" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <param name="newFrame">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowShouldClose">
      <MemberSignature Language="C#" Value="public virtual bool WindowShouldClose (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WindowShouldClose(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:QuickLookUI.QLPreviewPanelDelegate.WindowShouldClose(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member WindowShouldClose : Foundation.NSObject -&gt; bool&#xA;override this.WindowShouldClose : Foundation.NSObject -&gt; bool" Usage="qLPreviewPanelDelegate.WindowShouldClose sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowShouldClose:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
