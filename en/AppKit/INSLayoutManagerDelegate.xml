<Type Name="INSLayoutManagerDelegate" FullName="AppKit.INSLayoutManagerDelegate">
  <TypeSignature Language="C#" Value="public interface INSLayoutManagerDelegate : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INSLayoutManagerDelegate implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.INSLayoutManagerDelegate" />
  <TypeSignature Language="F#" Value="type INSLayoutManagerDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="NSLayoutManagerDelegate", WrapperType=typeof(AppKit.NSLayoutManagerDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="LayoutInvalidated", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(AppKit.NSLayoutManager) }, Selector="layoutManagerDidInvalidateLayout:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="LayoutCompleted", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSLayoutManager), typeof(AppKit.NSTextContainer), typeof(System.Boolean) }, Selector="layoutManager:didCompleteLayoutForTextContainer:atEnd:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldUseTemporaryAttributes", ParameterByRef=new System.Boolean[] { false, false, false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSLayoutManager), typeof(Foundation.NSDictionary), typeof(System.Boolean), typeof(System.nint), typeof(System.IntPtr) }, ReturnType=typeof(Foundation.NSDictionary), Selector="layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldGenerateGlyphs", ParameterByRef=new System.Boolean[] { false, false, false, false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSLayoutManager), typeof(System.IntPtr), typeof(System.IntPtr), typeof(System.IntPtr), typeof(AppKit.NSFont), typeof(Foundation.NSRange) }, ReturnType=typeof(System.nuint), Selector="layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetLineSpacingAfterGlyph", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSLayoutManager), typeof(System.nuint), typeof(CoreGraphics.CGRect) }, ReturnType=typeof(System.nfloat), Selector="layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetParagraphSpacingBeforeGlyph", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSLayoutManager), typeof(System.nuint), typeof(CoreGraphics.CGRect) }, ReturnType=typeof(System.nfloat), Selector="layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetParagraphSpacingAfterGlyph", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSLayoutManager), typeof(System.nuint), typeof(CoreGraphics.CGRect) }, ReturnType=typeof(System.nfloat), Selector="layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldUseAction", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSLayoutManager), typeof(AppKit.NSControlCharacterAction), typeof(System.nuint) }, ReturnType=typeof(AppKit.NSControlCharacterAction), Selector="layoutManager:shouldUseAction:forControlCharacterAtIndex:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldBreakLineByWordBeforeCharacter", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSLayoutManager), typeof(System.nuint) }, ReturnType=typeof(System.Boolean), Selector="layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldBreakLineByHyphenatingBeforeCharacter", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSLayoutManager), typeof(System.nuint) }, ReturnType=typeof(System.Boolean), Selector="layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetBoundingBox", ParameterByRef=new System.Boolean[] { false, false, false, false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSLayoutManager), typeof(System.nuint), typeof(AppKit.NSTextContainer), typeof(CoreGraphics.CGRect), typeof(CoreGraphics.CGPoint), typeof(System.nuint) }, ReturnType=typeof(CoreGraphics.CGRect), Selector="layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidChangeGeometry", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSLayoutManager), typeof(AppKit.NSTextContainer), typeof(CoreGraphics.CGSize) }, Selector="layoutManager:textContainer:didChangeGeometryFromSize:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldSetLineFragmentRect", ParameterByRef=new System.Boolean[] { false, true, true, true, false, false }, ParameterType=new System.Type[] { typeof(AppKit.NSLayoutManager), typeof(CoreGraphics.CGRect), typeof(CoreGraphics.CGRect), typeof(System.nfloat), typeof(AppKit.NSTextContainer), typeof(Foundation.NSRange) }, ReturnType=typeof(System.Boolean), Selector="layoutManager:shouldSetLineFragmentRect:lineFragmentUsedRect:baselineOffset:inTextContainer:forGlyphRange:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>
