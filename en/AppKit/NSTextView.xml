<Type Name="NSTextView" FullName="AppKit.NSTextView">
  <TypeSignature Language="C#" Value="public class NSTextView : AppKit.NSText, AppKit.INSAccessibilityNavigableStaticText, AppKit.INSCandidateListTouchBarItemDelegate, AppKit.INSDraggingSource, AppKit.INSMenuItemValidation, AppKit.INSTextFinderClient, AppKit.INSTextInput, AppKit.INSTextInputClient, AppKit.INSTouchBarDelegate, AppKit.INSUserInterfaceValidations, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSTextView extends AppKit.NSText implements class AppKit.INSAccessibilityElementProtocol, class AppKit.INSAccessibilityNavigableStaticText, class AppKit.INSAccessibilityStaticText, class AppKit.INSCandidateListTouchBarItemDelegate, class AppKit.INSDraggingSource, class AppKit.INSMenuItemValidation, class AppKit.INSTextFinderClient, class AppKit.INSTextInput, class AppKit.INSTextInputClient, class AppKit.INSTouchBarDelegate, class AppKit.INSUserInterfaceValidations, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSTextView" />
  <TypeSignature Language="F#" Value="type NSTextView = class&#xA;    inherit NSText&#xA;    interface INSAccessibilityElementProtocol&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSAccessibilityNavigableStaticText&#xA;    interface INSAccessibilityStaticText&#xA;    interface INSCandidateListTouchBarItemDelegate&#xA;    interface INSDraggingSource&#xA;    interface INSMenuItemValidation&#xA;    interface INSTextFinderClient&#xA;    interface INSTextInput&#xA;    interface INSTextInputClient&#xA;    interface INSTouchBarDelegate&#xA;    interface INSUserInterfaceValidations" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AppKit.NSText</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>AppKit.INSAccessibilityElementProtocol</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>AppKit.INSAccessibilityNavigableStaticText</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>AppKit.INSAccessibilityStaticText</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>AppKit.INSCandidateListTouchBarItemDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>AppKit.INSDraggingSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>AppKit.INSMenuItemValidation</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>AppKit.INSTextFinderClient</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>AppKit.INSTextInput</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>AppKit.INSTextInputClient</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>AppKit.INSTouchBarDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>AppKit.INSUserInterfaceValidations</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSTextView", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextView (CoreGraphics.CGRect frameRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype CoreGraphics.CGRect frameRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.#ctor(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextView : CoreGraphics.CGRect -&gt; AppKit.NSTextView" Usage="new AppKit.NSTextView frameRect" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithFrame:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="frameRect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="frameRect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextView (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextView : Foundation.NSCoder -&gt; AppKit.NSTextView" Usage="new AppKit.NSTextView coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSTextView (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextView : Foundation.NSObjectFlag -&gt; AppKit.NSTextView" Usage="new AppKit.NSTextView t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSTextView (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextView : nativeint -&gt; AppKit.NSTextView" Usage="new AppKit.NSTextView handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextView (CoreGraphics.CGRect frameRect, AppKit.NSTextContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype CoreGraphics.CGRect frameRect, class AppKit.NSTextContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.#ctor(CoreGraphics.CGRect,AppKit.NSTextContainer)" />
      <MemberSignature Language="F#" Value="new AppKit.NSTextView : CoreGraphics.CGRect * AppKit.NSTextContainer -&gt; AppKit.NSTextView" Usage="new AppKit.NSTextView (frameRect, container)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithFrame:textContainer:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="frameRect" Type="CoreGraphics.CGRect" />
        <Parameter Name="container" Type="AppKit.NSTextContainer" />
      </Parameters>
      <Docs>
        <param name="frameRect">To be added.</param>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptableDragTypes">
      <MemberSignature Language="C#" Value="public virtual string[] AcceptableDragTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] AcceptableDragTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.AcceptableDragTypes" />
      <MemberSignature Language="F#" Value="abstract member AcceptableDragTypes : unit -&gt; string[]&#xA;override this.AcceptableDragTypes : unit -&gt; string[]" Usage="nSTextView.AcceptableDragTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("acceptableDragTypes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsGlyphInfo">
      <MemberSignature Language="C#" Value="public virtual bool AcceptsGlyphInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsGlyphInfo" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AcceptsGlyphInfo" />
      <MemberSignature Language="F#" Value="member this.AcceptsGlyphInfo : bool with get, set" Usage="AppKit.NSTextView.AcceptsGlyphInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("acceptsGlyphInfo")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAcceptsGlyphInfo:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityFocused">
      <MemberSignature Language="C#" Value="public virtual bool AccessibilityFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AccessibilityFocused" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AccessibilityFocused" />
      <MemberSignature Language="F#" Value="member this.AccessibilityFocused : bool" Usage="AppKit.NSTextView.AccessibilityFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isAccessibilityFocused")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityFrame">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect AccessibilityFrame { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGRect AccessibilityFrame" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AccessibilityFrame" />
      <MemberSignature Language="F#" Value="member this.AccessibilityFrame : CoreGraphics.CGRect" Usage="AppKit.NSTextView.AccessibilityFrame" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:AppKit.INSAccessibilityElementProtocol.AccessibilityFrame</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("accessibilityFrame")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityIdentifier">
      <MemberSignature Language="C#" Value="public virtual string AccessibilityIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibilityIdentifier" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AccessibilityIdentifier" />
      <MemberSignature Language="F#" Value="member this.AccessibilityIdentifier : string" Usage="AppKit.NSTextView.AccessibilityIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("accessibilityIdentifier")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityParent">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject AccessibilityParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject AccessibilityParent" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AccessibilityParent" />
      <MemberSignature Language="F#" Value="member this.AccessibilityParent : Foundation.NSObject" Usage="AppKit.NSTextView.AccessibilityParent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:AppKit.INSAccessibilityElementProtocol.AccessibilityParent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("accessibilityParent")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityValue">
      <MemberSignature Language="C#" Value="public virtual string AccessibilityValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibilityValue" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AccessibilityValue" />
      <MemberSignature Language="F#" Value="member this.AccessibilityValue : string" Usage="AppKit.NSTextView.AccessibilityValue" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:AppKit.INSAccessibilityStaticText.AccessibilityValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("accessibilityValue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityVisibleCharacterRange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange AccessibilityVisibleCharacterRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSRange AccessibilityVisibleCharacterRange" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AccessibilityVisibleCharacterRange" />
      <MemberSignature Language="F#" Value="member this.AccessibilityVisibleCharacterRange : Foundation.NSRange" Usage="AppKit.NSTextView.AccessibilityVisibleCharacterRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("accessibilityVisibleCharacterRange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignJustified">
      <MemberSignature Language="C#" Value="public virtual void AlignJustified (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AlignJustified(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.AlignJustified(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member AlignJustified : Foundation.NSObject -&gt; unit&#xA;override this.AlignJustified : Foundation.NSObject -&gt; unit" Usage="nSTextView.AlignJustified sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("alignJustified:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowedInputSourceLocales">
      <MemberSignature Language="C#" Value="public virtual string[] AllowedInputSourceLocales { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllowedInputSourceLocales" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AllowedInputSourceLocales" />
      <MemberSignature Language="F#" Value="member this.AllowedInputSourceLocales : string[] with get, set" Usage="AppKit.NSTextView.AllowedInputSourceLocales" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("allowedInputSourceLocales")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAllowedInputSourceLocales:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowsCharacterPickerTouchBarItem">
      <MemberSignature Language="C#" Value="public virtual bool AllowsCharacterPickerTouchBarItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsCharacterPickerTouchBarItem" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AllowsCharacterPickerTouchBarItem" />
      <MemberSignature Language="F#" Value="member this.AllowsCharacterPickerTouchBarItem : bool with get, set" Usage="AppKit.NSTextView.AllowsCharacterPickerTouchBarItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("allowsCharacterPickerTouchBarItem")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAllowsCharacterPickerTouchBarItem:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowsDocumentBackgroundColorChange">
      <MemberSignature Language="C#" Value="public virtual bool AllowsDocumentBackgroundColorChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsDocumentBackgroundColorChange" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AllowsDocumentBackgroundColorChange" />
      <MemberSignature Language="F#" Value="member this.AllowsDocumentBackgroundColorChange : bool with get, set" Usage="AppKit.NSTextView.AllowsDocumentBackgroundColorChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("allowsDocumentBackgroundColorChange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAllowsDocumentBackgroundColorChange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowsImageEditing">
      <MemberSignature Language="C#" Value="public virtual bool AllowsImageEditing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsImageEditing" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AllowsImageEditing" />
      <MemberSignature Language="F#" Value="member this.AllowsImageEditing : bool with get, set" Usage="AppKit.NSTextView.AllowsImageEditing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("allowsImageEditing")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAllowsImageEditing:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowsMultipleSelection">
      <MemberSignature Language="C#" Value="public virtual bool AllowsMultipleSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleSelection" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AllowsMultipleSelection" />
      <MemberSignature Language="F#" Value="member this.AllowsMultipleSelection : bool" Usage="AppKit.NSTextView.AllowsMultipleSelection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:AppKit.INSTextFinderClient.AllowsMultipleSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("allowsMultipleSelection")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowsUndo">
      <MemberSignature Language="C#" Value="public virtual bool AllowsUndo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsUndo" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AllowsUndo" />
      <MemberSignature Language="F#" Value="member this.AllowsUndo : bool with get, set" Usage="AppKit.NSTextView.AllowsUndo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("allowsUndo")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAllowsUndo:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributedString">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSAttributedString AttributedString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSAttributedString AttributedString" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AttributedString" />
      <MemberSignature Language="F#" Value="member this.AttributedString : Foundation.NSAttributedString" Usage="AppKit.NSTextView.AttributedString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("attributedString")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSAttributedString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticDashSubstitutionEnabled">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticDashSubstitutionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticDashSubstitutionEnabled" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AutomaticDashSubstitutionEnabled" />
      <MemberSignature Language="F#" Value="member this.AutomaticDashSubstitutionEnabled : bool with get, set" Usage="AppKit.NSTextView.AutomaticDashSubstitutionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isAutomaticDashSubstitutionEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAutomaticDashSubstitutionEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticDataDetectionEnabled">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticDataDetectionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticDataDetectionEnabled" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AutomaticDataDetectionEnabled" />
      <MemberSignature Language="F#" Value="member this.AutomaticDataDetectionEnabled : bool with get, set" Usage="AppKit.NSTextView.AutomaticDataDetectionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isAutomaticDataDetectionEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAutomaticDataDetectionEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticLinkDetectionEnabled">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticLinkDetectionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticLinkDetectionEnabled" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AutomaticLinkDetectionEnabled" />
      <MemberSignature Language="F#" Value="member this.AutomaticLinkDetectionEnabled : bool with get, set" Usage="AppKit.NSTextView.AutomaticLinkDetectionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isAutomaticLinkDetectionEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAutomaticLinkDetectionEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticQuoteSubstitutionEnabled">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticQuoteSubstitutionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticQuoteSubstitutionEnabled" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AutomaticQuoteSubstitutionEnabled" />
      <MemberSignature Language="F#" Value="member this.AutomaticQuoteSubstitutionEnabled : bool with get, set" Usage="AppKit.NSTextView.AutomaticQuoteSubstitutionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isAutomaticQuoteSubstitutionEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAutomaticQuoteSubstitutionEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticSpellingCorrectionEnabled">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticSpellingCorrectionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticSpellingCorrectionEnabled" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AutomaticSpellingCorrectionEnabled" />
      <MemberSignature Language="F#" Value="member this.AutomaticSpellingCorrectionEnabled : bool with get, set" Usage="AppKit.NSTextView.AutomaticSpellingCorrectionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isAutomaticSpellingCorrectionEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAutomaticSpellingCorrectionEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticTextCompletionEnabled">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticTextCompletionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticTextCompletionEnabled" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AutomaticTextCompletionEnabled" />
      <MemberSignature Language="F#" Value="member this.AutomaticTextCompletionEnabled : bool with get, set" Usage="AppKit.NSTextView.AutomaticTextCompletionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 1, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isAutomaticTextCompletionEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 1, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAutomaticTextCompletionEnabled:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 1, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticTextReplacementEnabled">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticTextReplacementEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticTextReplacementEnabled" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.AutomaticTextReplacementEnabled" />
      <MemberSignature Language="F#" Value="member this.AutomaticTextReplacementEnabled : bool with get, set" Usage="AppKit.NSTextView.AutomaticTextReplacementEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isAutomaticTextReplacementEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAutomaticTextReplacementEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSColor BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSColor BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.BackgroundColor" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : AppKit.NSColor with get, set" Usage="AppKit.NSTextView.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("backgroundColor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setBackgroundColor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSelectingCandidate">
      <MemberSignature Language="C#" Value="public virtual void BeginSelectingCandidate (AppKit.NSCandidateListTouchBarItem anItem, nint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginSelectingCandidate(class AppKit.NSCandidateListTouchBarItem anItem, valuetype System.nint index) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.BeginSelectingCandidate(AppKit.NSCandidateListTouchBarItem,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member BeginSelectingCandidate : AppKit.NSCandidateListTouchBarItem * nint -&gt; unit&#xA;override this.BeginSelectingCandidate : AppKit.NSCandidateListTouchBarItem * nint -&gt; unit" Usage="nSTextView.BeginSelectingCandidate (anItem, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("candidateListTouchBarItem:beginSelectingCandidateAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anItem" Type="AppKit.NSCandidateListTouchBarItem" />
        <Parameter Name="index" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="anItem">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakUndoCoalescing">
      <MemberSignature Language="C#" Value="public virtual void BreakUndoCoalescing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BreakUndoCoalescing() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.BreakUndoCoalescing" />
      <MemberSignature Language="F#" Value="abstract member BreakUndoCoalescing : unit -&gt; unit&#xA;override this.BreakUndoCoalescing : unit -&gt; unit" Usage="nSTextView.BreakUndoCoalescing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("breakUndoCoalescing")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CandidateListTouchBarItem">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSCandidateListTouchBarItem CandidateListTouchBarItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSCandidateListTouchBarItem CandidateListTouchBarItem" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.CandidateListTouchBarItem" />
      <MemberSignature Language="F#" Value="member this.CandidateListTouchBarItem : AppKit.NSCandidateListTouchBarItem" Usage="AppKit.NSTextView.CandidateListTouchBarItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("candidateListTouchBarItem", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSCandidateListTouchBarItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellClicked">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;AppKit.NSTextViewClickedEventArgs&gt; CellClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class AppKit.NSTextViewClickedEventArgs&gt; CellClicked" />
      <MemberSignature Language="DocId" Value="E:AppKit.NSTextView.CellClicked" />
      <MemberSignature Language="F#" Value="member this.CellClicked : EventHandler&lt;AppKit.NSTextViewClickedEventArgs&gt; " Usage="member this.CellClicked : System.EventHandler&lt;AppKit.NSTextViewClickedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;AppKit.NSTextViewClickedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellDoubleClicked">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;AppKit.NSTextViewDoubleClickEventArgs&gt; CellDoubleClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class AppKit.NSTextViewDoubleClickEventArgs&gt; CellDoubleClicked" />
      <MemberSignature Language="DocId" Value="E:AppKit.NSTextView.CellDoubleClicked" />
      <MemberSignature Language="F#" Value="member this.CellDoubleClicked : EventHandler&lt;AppKit.NSTextViewDoubleClickEventArgs&gt; " Usage="member this.CellDoubleClicked : System.EventHandler&lt;AppKit.NSTextViewDoubleClickEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;AppKit.NSTextViewDoubleClickEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeAttributes">
      <MemberSignature Language="C#" Value="public virtual void ChangeAttributes (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeAttributes(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ChangeAttributes(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ChangeAttributes : Foundation.NSObject -&gt; unit&#xA;override this.ChangeAttributes : Foundation.NSObject -&gt; unit" Usage="nSTextView.ChangeAttributes sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeAttributes:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeColor">
      <MemberSignature Language="C#" Value="public virtual void ChangeColor (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeColor(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ChangeColor(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ChangeColor : Foundation.NSObject -&gt; unit&#xA;override this.ChangeColor : Foundation.NSObject -&gt; unit" Usage="nSTextView.ChangeColor sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeColor:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangedCandidateListVisibility">
      <MemberSignature Language="C#" Value="public virtual void ChangedCandidateListVisibility (AppKit.NSCandidateListTouchBarItem anItem, bool isVisible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangedCandidateListVisibility(class AppKit.NSCandidateListTouchBarItem anItem, bool isVisible) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ChangedCandidateListVisibility(AppKit.NSCandidateListTouchBarItem,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ChangedCandidateListVisibility : AppKit.NSCandidateListTouchBarItem * bool -&gt; unit&#xA;override this.ChangedCandidateListVisibility : AppKit.NSCandidateListTouchBarItem * bool -&gt; unit" Usage="nSTextView.ChangedCandidateListVisibility (anItem, isVisible)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("candidateListTouchBarItem:changedCandidateListVisibility:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anItem" Type="AppKit.NSCandidateListTouchBarItem" />
        <Parameter Name="isVisible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="anItem">To be added.</param>
        <param name="isVisible">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeDocumentBackgroundColor">
      <MemberSignature Language="C#" Value="public virtual void ChangeDocumentBackgroundColor (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeDocumentBackgroundColor(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ChangeDocumentBackgroundColor(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ChangeDocumentBackgroundColor : Foundation.NSObject -&gt; unit&#xA;override this.ChangeDocumentBackgroundColor : Foundation.NSObject -&gt; unit" Usage="nSTextView.ChangeDocumentBackgroundColor sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeDocumentBackgroundColor:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeLayoutOrientation">
      <MemberSignature Language="C#" Value="public virtual void ChangeLayoutOrientation (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeLayoutOrientation(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ChangeLayoutOrientation(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ChangeLayoutOrientation : Foundation.NSObject -&gt; unit&#xA;override this.ChangeLayoutOrientation : Foundation.NSObject -&gt; unit" Usage="nSTextView.ChangeLayoutOrientation sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeLayoutOrientation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeSelectionFromCandidate">
      <MemberSignature Language="C#" Value="public virtual void ChangeSelectionFromCandidate (AppKit.NSCandidateListTouchBarItem anItem, nint previousIndex, nint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeSelectionFromCandidate(class AppKit.NSCandidateListTouchBarItem anItem, valuetype System.nint previousIndex, valuetype System.nint index) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ChangeSelectionFromCandidate(AppKit.NSCandidateListTouchBarItem,System.nint,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member ChangeSelectionFromCandidate : AppKit.NSCandidateListTouchBarItem * nint * nint -&gt; unit&#xA;override this.ChangeSelectionFromCandidate : AppKit.NSCandidateListTouchBarItem * nint * nint -&gt; unit" Usage="nSTextView.ChangeSelectionFromCandidate (anItem, previousIndex, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("candidateListTouchBarItem:changeSelectionFromCandidateAtIndex:toIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anItem" Type="AppKit.NSCandidateListTouchBarItem" />
        <Parameter Name="previousIndex" Type="System.nint" />
        <Parameter Name="index" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="anItem">To be added.</param>
        <param name="previousIndex">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterIndex">
      <MemberSignature Language="C#" Value="public virtual nuint CharacterIndex (CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nuint CharacterIndex(valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.CharacterIndex(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member CharacterIndex : CoreGraphics.CGPoint -&gt; nuint&#xA;override this.CharacterIndex : CoreGraphics.CGPoint -&gt; nuint" Usage="nSTextView.CharacterIndex point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("characterIndexForInsertionAtPoint:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckText">
      <MemberSignature Language="C#" Value="public virtual void CheckText (Foundation.NSRange range, Foundation.NSTextCheckingTypes checkingTypes, Foundation.NSDictionary options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckText(valuetype Foundation.NSRange range, valuetype Foundation.NSTextCheckingTypes checkingTypes, class Foundation.NSDictionary options) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.CheckText(Foundation.NSRange,Foundation.NSTextCheckingTypes,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="abstract member CheckText : Foundation.NSRange * Foundation.NSTextCheckingTypes * Foundation.NSDictionary -&gt; unit&#xA;override this.CheckText : Foundation.NSRange * Foundation.NSTextCheckingTypes * Foundation.NSDictionary -&gt; unit" Usage="nSTextView.CheckText (range, checkingTypes, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("checkTextInRange:types:options:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="checkingTypes" Type="Foundation.NSTextCheckingTypes" />
        <Parameter Name="options" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="checkingTypes">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckTextInDocument">
      <MemberSignature Language="C#" Value="public virtual void CheckTextInDocument (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckTextInDocument(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.CheckTextInDocument(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member CheckTextInDocument : Foundation.NSObject -&gt; unit&#xA;override this.CheckTextInDocument : Foundation.NSObject -&gt; unit" Usage="nSTextView.CheckTextInDocument sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("checkTextInDocument:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckTextInSelection">
      <MemberSignature Language="C#" Value="public virtual void CheckTextInSelection (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckTextInSelection(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.CheckTextInSelection(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member CheckTextInSelection : Foundation.NSObject -&gt; unit&#xA;override this.CheckTextInSelection : Foundation.NSObject -&gt; unit" Usage="nSTextView.CheckTextInSelection sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("checkTextInSelection:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AppKit.NSTextView.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpAfterDragOperation">
      <MemberSignature Language="C#" Value="public virtual void CleanUpAfterDragOperation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpAfterDragOperation() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.CleanUpAfterDragOperation" />
      <MemberSignature Language="F#" Value="abstract member CleanUpAfterDragOperation : unit -&gt; unit&#xA;override this.CleanUpAfterDragOperation : unit -&gt; unit" Usage="nSTextView.CleanUpAfterDragOperation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("cleanUpAfterDragOperation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickedOnLink">
      <MemberSignature Language="C#" Value="public virtual void ClickedOnLink (Foundation.NSObject link, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClickedOnLink(class Foundation.NSObject link, valuetype System.nuint charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ClickedOnLink(Foundation.NSObject,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member ClickedOnLink : Foundation.NSObject * nuint -&gt; unit&#xA;override this.ClickedOnLink : Foundation.NSObject * nuint -&gt; unit" Usage="nSTextView.ClickedOnLink (link, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("clickedOnLink:atIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="link" Type="Foundation.NSObject" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="link">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public virtual void Complete (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.Complete(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member Complete : Foundation.NSObject -&gt; unit&#xA;override this.Complete : Foundation.NSObject -&gt; unit" Usage="nSTextView.Complete sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("complete:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletionsForPartialWord">
      <MemberSignature Language="C#" Value="public virtual string[] CompletionsForPartialWord (Foundation.NSRange charRange, out nint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] CompletionsForPartialWord(valuetype Foundation.NSRange charRange, [out] valuetype System.nint&amp; index) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.CompletionsForPartialWord(Foundation.NSRange,System.nint@)" />
      <MemberSignature Language="F#" Value="abstract member CompletionsForPartialWord : Foundation.NSRange *  -&gt; string[]&#xA;override this.CompletionsForPartialWord : Foundation.NSRange *  -&gt; string[]" Usage="nSTextView.CompletionsForPartialWord (charRange, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("completionsForPartialWordRange:indexOfSelectedItem:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charRange" Type="Foundation.NSRange" />
        <Parameter Name="index" Type="System.nint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="charRange">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentViewAtIndexeffectiveCharacterRange">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSView ContentViewAtIndexeffectiveCharacterRange (nuint index, ref Foundation.NSRange outRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSView ContentViewAtIndexeffectiveCharacterRange(valuetype System.nuint index, valuetype Foundation.NSRange&amp; outRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ContentViewAtIndexeffectiveCharacterRange(System.nuint,Foundation.NSRange@)" />
      <MemberSignature Language="F#" Value="abstract member ContentViewAtIndexeffectiveCharacterRange : nuint *  -&gt; AppKit.NSView&#xA;override this.ContentViewAtIndexeffectiveCharacterRange : nuint *  -&gt; AppKit.NSView" Usage="nSTextView.ContentViewAtIndexeffectiveCharacterRange (index, outRange)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSTextFinderClient.ContentViewAtIndexeffectiveCharacterRange(System.nuint,Foundation.NSRange@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("contentViewAtIndex:effectiveCharacterRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.nuint" />
        <Parameter Name="outRange" Type="Foundation.NSRange" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="outRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinuousSpellCheckingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool ContinuousSpellCheckingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContinuousSpellCheckingEnabled" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.ContinuousSpellCheckingEnabled" />
      <MemberSignature Language="F#" Value="member this.ContinuousSpellCheckingEnabled : bool with get, set" Usage="AppKit.NSTextView.ContinuousSpellCheckingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isContinuousSpellCheckingEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setContinuousSpellCheckingEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConversationIdentifier">
      <MemberSignature Language="C#" Value="public virtual nint ConversationIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint ConversationIdentifier" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.ConversationIdentifier" />
      <MemberSignature Language="F#" Value="member this.ConversationIdentifier : nint" Usage="AppKit.NSTextView.ConversationIdentifier" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:AppKit.INSTextInput.ConversationIdentifier</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("conversationIdentifier")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFieldEditor">
      <MemberSignature Language="C#" Value="public static AppKit.NSTextView CreateFieldEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSTextView CreateFieldEditor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.CreateFieldEditor" />
      <MemberSignature Language="F#" Value="static member CreateFieldEditor : unit -&gt; AppKit.NSTextView" Usage="AppKit.NSTextView.CreateFieldEditor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fieldEditor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSTextView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScrollableDocumentContentTextView">
      <MemberSignature Language="C#" Value="public static AppKit.NSScrollView CreateScrollableDocumentContentTextView ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSScrollView CreateScrollableDocumentContentTextView() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.CreateScrollableDocumentContentTextView" />
      <MemberSignature Language="F#" Value="static member CreateScrollableDocumentContentTextView : unit -&gt; AppKit.NSScrollView" Usage="AppKit.NSTextView.CreateScrollableDocumentContentTextView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("scrollableDocumentContentTextView")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSScrollView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScrollablePlainDocumentContentTextView">
      <MemberSignature Language="C#" Value="public static AppKit.NSScrollView CreateScrollablePlainDocumentContentTextView ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSScrollView CreateScrollablePlainDocumentContentTextView() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.CreateScrollablePlainDocumentContentTextView" />
      <MemberSignature Language="F#" Value="static member CreateScrollablePlainDocumentContentTextView : unit -&gt; AppKit.NSScrollView" Usage="AppKit.NSTextView.CreateScrollablePlainDocumentContentTextView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("scrollablePlainDocumentContentTextView")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSScrollView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScrollableTextView">
      <MemberSignature Language="C#" Value="public static AppKit.NSScrollView CreateScrollableTextView ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSScrollView CreateScrollableTextView() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.CreateScrollableTextView" />
      <MemberSignature Language="F#" Value="static member CreateScrollableTextView : unit -&gt; AppKit.NSScrollView" Usage="AppKit.NSTextView.CreateScrollableTextView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("scrollableTextView")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSScrollView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultParagraphStyle">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSParagraphStyle DefaultParagraphStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSParagraphStyle DefaultParagraphStyle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.DefaultParagraphStyle" />
      <MemberSignature Language="F#" Value="member this.DefaultParagraphStyle : AppKit.NSParagraphStyle with get, set" Usage="AppKit.NSTextView.DefaultParagraphStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("defaultParagraphStyle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDefaultParagraphStyle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSParagraphStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegate">
      <MemberSignature Language="C#" Value="public AppKit.INSTextViewDelegate Delegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.INSTextViewDelegate Delegate" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.Delegate" />
      <MemberSignature Language="F#" Value="member this.Delegate : AppKit.INSTextViewDelegate with get, set" Usage="AppKit.NSTextView.Delegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.INSTextViewDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeSelection">
      <MemberSignature Language="C#" Value="public event EventHandler DidChangeSelection;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DidChangeSelection" />
      <MemberSignature Language="DocId" Value="E:AppKit.NSTextView.DidChangeSelection" />
      <MemberSignature Language="F#" Value="member this.DidChangeSelection : EventHandler " Usage="member this.DidChangeSelection : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeSelectionNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString DidChangeSelectionNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString DidChangeSelectionNotification" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.DidChangeSelectionNotification" />
      <MemberSignature Language="F#" Value="member this.DidChangeSelectionNotification : Foundation.NSString" Usage="AppKit.NSTextView.DidChangeSelectionNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use NSTextView.Notifications.ObserveDidChangeSelection helper method instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Field("NSTextViewDidChangeSelectionNotification", "AppKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeText">
      <MemberSignature Language="C#" Value="public virtual void DidChangeText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidChangeText() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.DidChangeText" />
      <MemberSignature Language="F#" Value="abstract member DidChangeText : unit -&gt; unit&#xA;override this.DidChangeText : unit -&gt; unit" Usage="nSTextView.DidChangeText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("didChangeText")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeTypingAttributes">
      <MemberSignature Language="C#" Value="public event EventHandler DidChangeTypingAttributes;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DidChangeTypingAttributes" />
      <MemberSignature Language="DocId" Value="E:AppKit.NSTextView.DidChangeTypingAttributes" />
      <MemberSignature Language="F#" Value="member this.DidChangeTypingAttributes : EventHandler " Usage="member this.DidChangeTypingAttributes : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeTypingAttributesNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString DidChangeTypingAttributesNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString DidChangeTypingAttributesNotification" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.DidChangeTypingAttributesNotification" />
      <MemberSignature Language="F#" Value="member this.DidChangeTypingAttributesNotification : Foundation.NSString" Usage="AppKit.NSTextView.DidChangeTypingAttributesNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use NSTextView.Notifications.ObserveDidChangeTypingAttributes helper method instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Field("NSTextViewDidChangeTypingAttributesNotification", "AppKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidCheckText">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewTextChecked DidCheckText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewTextChecked DidCheckText" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.DidCheckText" />
      <MemberSignature Language="F#" Value="member this.DidCheckText : AppKit.NSTextViewTextChecked with get, set" Usage="AppKit.NSTextView.DidCheckText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewTextChecked</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidReplaceCharacters">
      <MemberSignature Language="C#" Value="public virtual void DidReplaceCharacters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidReplaceCharacters() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.DidReplaceCharacters" />
      <MemberSignature Language="F#" Value="abstract member DidReplaceCharacters : unit -&gt; unit&#xA;override this.DidReplaceCharacters : unit -&gt; unit" Usage="nSTextView.DidReplaceCharacters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSTextFinderClient.DidReplaceCharacters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("didReplaceCharacters")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplaysLinkToolTips">
      <MemberSignature Language="C#" Value="public virtual bool DisplaysLinkToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplaysLinkToolTips" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.DisplaysLinkToolTips" />
      <MemberSignature Language="F#" Value="member this.DisplaysLinkToolTips : bool with get, set" Usage="AppKit.NSTextView.DisplaysLinkToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("displaysLinkToolTips")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDisplaysLinkToolTips:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="nSTextView.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoCommandBySelector">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewSelectorCommand DoCommandBySelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewSelectorCommand DoCommandBySelector" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.DoCommandBySelector" />
      <MemberSignature Language="F#" Value="member this.DoCommandBySelector : AppKit.NSTextViewSelectorCommand with get, set" Usage="AppKit.NSTextView.DoCommandBySelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewSelectorCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggedCell">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;AppKit.NSTextViewDraggedCellEventArgs&gt; DraggedCell;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class AppKit.NSTextViewDraggedCellEventArgs&gt; DraggedCell" />
      <MemberSignature Language="DocId" Value="E:AppKit.NSTextView.DraggedCell" />
      <MemberSignature Language="F#" Value="member this.DraggedCell : EventHandler&lt;AppKit.NSTextViewDraggedCellEventArgs&gt; " Usage="member this.DraggedCell : System.EventHandler&lt;AppKit.NSTextViewDraggedCellEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;AppKit.NSTextViewDraggedCellEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggedImageBeganAt">
      <MemberSignature Language="C#" Value="public virtual void DraggedImageBeganAt (AppKit.NSImage image, CoreGraphics.CGPoint screenPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DraggedImageBeganAt(class AppKit.NSImage image, valuetype CoreGraphics.CGPoint screenPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.DraggedImageBeganAt(AppKit.NSImage,CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member DraggedImageBeganAt : AppKit.NSImage * CoreGraphics.CGPoint -&gt; unit&#xA;override this.DraggedImageBeganAt : AppKit.NSImage * CoreGraphics.CGPoint -&gt; unit" Usage="nSTextView.DraggedImageBeganAt (image, screenPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("draggedImage:beganAt:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="AppKit.NSImage" />
        <Parameter Name="screenPoint" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="screenPoint">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggedImageEndedAtDeposited">
      <MemberSignature Language="C#" Value="public virtual void DraggedImageEndedAtDeposited (AppKit.NSImage image, CoreGraphics.CGPoint screenPoint, bool deposited);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DraggedImageEndedAtDeposited(class AppKit.NSImage image, valuetype CoreGraphics.CGPoint screenPoint, bool deposited) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.DraggedImageEndedAtDeposited(AppKit.NSImage,CoreGraphics.CGPoint,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DraggedImageEndedAtDeposited : AppKit.NSImage * CoreGraphics.CGPoint * bool -&gt; unit&#xA;override this.DraggedImageEndedAtDeposited : AppKit.NSImage * CoreGraphics.CGPoint * bool -&gt; unit" Usage="nSTextView.DraggedImageEndedAtDeposited (image, screenPoint, deposited)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("draggedImage:endedAt:deposited:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 1, ObjCRuntime.PlatformArchitecture.All, "Use DraggedImageEndedAtOperation instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="AppKit.NSImage" />
        <Parameter Name="screenPoint" Type="CoreGraphics.CGPoint" />
        <Parameter Name="deposited" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="screenPoint">To be added.</param>
        <param name="deposited">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggedImageEndedAtOperation">
      <MemberSignature Language="C#" Value="public virtual void DraggedImageEndedAtOperation (AppKit.NSImage image, CoreGraphics.CGPoint screenPoint, AppKit.NSDragOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DraggedImageEndedAtOperation(class AppKit.NSImage image, valuetype CoreGraphics.CGPoint screenPoint, valuetype AppKit.NSDragOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.DraggedImageEndedAtOperation(AppKit.NSImage,CoreGraphics.CGPoint,AppKit.NSDragOperation)" />
      <MemberSignature Language="F#" Value="abstract member DraggedImageEndedAtOperation : AppKit.NSImage * CoreGraphics.CGPoint * AppKit.NSDragOperation -&gt; unit&#xA;override this.DraggedImageEndedAtOperation : AppKit.NSImage * CoreGraphics.CGPoint * AppKit.NSDragOperation -&gt; unit" Usage="nSTextView.DraggedImageEndedAtOperation (image, screenPoint, operation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("draggedImage:endedAt:operation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="AppKit.NSImage" />
        <Parameter Name="screenPoint" Type="CoreGraphics.CGPoint" />
        <Parameter Name="operation" Type="AppKit.NSDragOperation" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="screenPoint">To be added.</param>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggedImageMovedTo">
      <MemberSignature Language="C#" Value="public virtual void DraggedImageMovedTo (AppKit.NSImage image, CoreGraphics.CGPoint screenPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DraggedImageMovedTo(class AppKit.NSImage image, valuetype CoreGraphics.CGPoint screenPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.DraggedImageMovedTo(AppKit.NSImage,CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member DraggedImageMovedTo : AppKit.NSImage * CoreGraphics.CGPoint -&gt; unit&#xA;override this.DraggedImageMovedTo : AppKit.NSImage * CoreGraphics.CGPoint -&gt; unit" Usage="nSTextView.DraggedImageMovedTo (image, screenPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("draggedImage:movedTo:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="AppKit.NSImage" />
        <Parameter Name="screenPoint" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="screenPoint">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggingSourceOperationMaskForLocal">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSDragOperation DraggingSourceOperationMaskForLocal (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AppKit.NSDragOperation DraggingSourceOperationMaskForLocal(bool flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.DraggingSourceOperationMaskForLocal(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DraggingSourceOperationMaskForLocal : bool -&gt; AppKit.NSDragOperation&#xA;override this.DraggingSourceOperationMaskForLocal : bool -&gt; AppKit.NSDragOperation" Usage="nSTextView.DraggingSourceOperationMaskForLocal flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("draggingSourceOperationMaskForLocal:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSDragOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOperationForDraggingInfo">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSDragOperation DragOperationForDraggingInfo (AppKit.NSDraggingInfo dragInfo, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AppKit.NSDragOperation DragOperationForDraggingInfo(class AppKit.NSDraggingInfo dragInfo, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.DragOperationForDraggingInfo(AppKit.NSDraggingInfo,System.String)" />
      <MemberSignature Language="F#" Value="abstract member DragOperationForDraggingInfo : AppKit.NSDraggingInfo * string -&gt; AppKit.NSDragOperation&#xA;override this.DragOperationForDraggingInfo : AppKit.NSDraggingInfo * string -&gt; AppKit.NSDragOperation" Usage="nSTextView.DragOperationForDraggingInfo (dragInfo, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("dragOperationForDraggingInfo:type:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSDragOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragInfo" Type="AppKit.NSDraggingInfo" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dragInfo">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawCharactersInRangeforContentView">
      <MemberSignature Language="C#" Value="public virtual void DrawCharactersInRangeforContentView (Foundation.NSRange range, AppKit.NSView view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawCharactersInRangeforContentView(valuetype Foundation.NSRange range, class AppKit.NSView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.DrawCharactersInRangeforContentView(Foundation.NSRange,AppKit.NSView)" />
      <MemberSignature Language="F#" Value="abstract member DrawCharactersInRangeforContentView : Foundation.NSRange * AppKit.NSView -&gt; unit&#xA;override this.DrawCharactersInRangeforContentView : Foundation.NSRange * AppKit.NSView -&gt; unit" Usage="nSTextView.DrawCharactersInRangeforContentView (range, view)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSTextFinderClient.DrawCharactersInRangeforContentView(Foundation.NSRange,AppKit.NSView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawCharactersInRange:forContentView:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="view" Type="AppKit.NSView" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="view">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawInsertionPoint">
      <MemberSignature Language="C#" Value="public virtual void DrawInsertionPoint (CoreGraphics.CGRect rect, AppKit.NSColor color, bool turnedOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawInsertionPoint(valuetype CoreGraphics.CGRect rect, class AppKit.NSColor color, bool turnedOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.DrawInsertionPoint(CoreGraphics.CGRect,AppKit.NSColor,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DrawInsertionPoint : CoreGraphics.CGRect * AppKit.NSColor * bool -&gt; unit&#xA;override this.DrawInsertionPoint : CoreGraphics.CGRect * AppKit.NSColor * bool -&gt; unit" Usage="nSTextView.DrawInsertionPoint (rect, color, turnedOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawInsertionPointInRect:color:turnedOn:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
        <Parameter Name="color" Type="AppKit.NSColor" />
        <Parameter Name="turnedOn" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="color">To be added.</param>
        <param name="turnedOn">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawsBackground">
      <MemberSignature Language="C#" Value="public virtual bool DrawsBackground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawsBackground" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.DrawsBackground" />
      <MemberSignature Language="F#" Value="member this.DrawsBackground : bool with get, set" Usage="AppKit.NSTextView.DrawsBackground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("drawsBackground")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDrawsBackground:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawsVertically">
      <MemberSignature Language="C#" Value="public virtual bool DrawsVertically (nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DrawsVertically(valuetype System.nuint charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.DrawsVertically(System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member DrawsVertically : nuint -&gt; bool&#xA;override this.DrawsVertically : nuint -&gt; bool" Usage="nSTextView.DrawsVertically charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawsVerticallyForCharacterAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawViewBackgroundInRect">
      <MemberSignature Language="C#" Value="public virtual void DrawViewBackgroundInRect (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawViewBackgroundInRect(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.DrawViewBackgroundInRect(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member DrawViewBackgroundInRect : CoreGraphics.CGRect -&gt; unit&#xA;override this.DrawViewBackgroundInRect : CoreGraphics.CGRect -&gt; unit" Usage="nSTextView.DrawViewBackgroundInRect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawViewBackgroundInRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Editable">
      <MemberSignature Language="C#" Value="public virtual bool Editable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Editable" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.Editable" />
      <MemberSignature Language="F#" Value="member this.Editable : bool with get, set" Usage="AppKit.NSTextView.Editable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isEditable")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setEditable:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnabledTextCheckingTypes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSTextCheckingTypes EnabledTextCheckingTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSTextCheckingTypes EnabledTextCheckingTypes" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.EnabledTextCheckingTypes" />
      <MemberSignature Language="F#" Value="member this.EnabledTextCheckingTypes : Foundation.NSTextCheckingTypes with get, set" Usage="AppKit.NSTextView.EnabledTextCheckingTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("enabledTextCheckingTypes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setEnabledTextCheckingTypes:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSelectingCandidate">
      <MemberSignature Language="C#" Value="public virtual void EndSelectingCandidate (AppKit.NSCandidateListTouchBarItem anItem, nint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSelectingCandidate(class AppKit.NSCandidateListTouchBarItem anItem, valuetype System.nint index) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.EndSelectingCandidate(AppKit.NSCandidateListTouchBarItem,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member EndSelectingCandidate : AppKit.NSCandidateListTouchBarItem * nint -&gt; unit&#xA;override this.EndSelectingCandidate : AppKit.NSCandidateListTouchBarItem * nint -&gt; unit" Usage="nSTextView.EndSelectingCandidate (anItem, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("candidateListTouchBarItem:endSelectingCandidateAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anItem" Type="AppKit.NSCandidateListTouchBarItem" />
        <Parameter Name="index" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="anItem">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldEditor">
      <MemberSignature Language="C#" Value="public virtual bool FieldEditor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FieldEditor" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.FieldEditor" />
      <MemberSignature Language="F#" Value="member this.FieldEditor : bool with get, set" Usage="AppKit.NSTextView.FieldEditor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isFieldEditor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setFieldEditor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstSelectedRange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange FirstSelectedRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSRange FirstSelectedRange" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.FirstSelectedRange" />
      <MemberSignature Language="F#" Value="member this.FirstSelectedRange : Foundation.NSRange" Usage="AppKit.NSTextView.FirstSelectedRange" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:AppKit.INSTextFinderClient.FirstSelectedRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("firstSelectedRange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityAttributedString">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSAttributedString GetAccessibilityAttributedString (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSAttributedString GetAccessibilityAttributedString(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.GetAccessibilityAttributedString(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="override this.GetAccessibilityAttributedString : Foundation.NSRange -&gt; Foundation.NSAttributedString" Usage="nSTextView.GetAccessibilityAttributedString range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("accessibilityAttributedStringForRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSAttributedString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityFrame">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect GetAccessibilityFrame (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGRect GetAccessibilityFrame(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.GetAccessibilityFrame(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="override this.GetAccessibilityFrame : Foundation.NSRange -&gt; CoreGraphics.CGRect" Usage="nSTextView.GetAccessibilityFrame range" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSAccessibilityNavigableStaticText.GetAccessibilityFrame(Foundation.NSRange)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("accessibilityFrameForRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityLine">
      <MemberSignature Language="C#" Value="public virtual nint GetAccessibilityLine (nint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nint GetAccessibilityLine(valuetype System.nint index) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.GetAccessibilityLine(System.nint)" />
      <MemberSignature Language="F#" Value="override this.GetAccessibilityLine : nint -&gt; nint" Usage="nSTextView.GetAccessibilityLine index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSAccessibilityNavigableStaticText.GetAccessibilityLine(System.nint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("accessibilityLineForIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityRangeForLine">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange GetAccessibilityRangeForLine (nint lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Foundation.NSRange GetAccessibilityRangeForLine(valuetype System.nint lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.GetAccessibilityRangeForLine(System.nint)" />
      <MemberSignature Language="F#" Value="override this.GetAccessibilityRangeForLine : nint -&gt; Foundation.NSRange" Usage="nSTextView.GetAccessibilityRangeForLine lineNumber" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSAccessibilityNavigableStaticText.GetAccessibilityRangeForLine(System.nint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("accessibilityRangeForLine:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="lineNumber">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityString">
      <MemberSignature Language="C#" Value="public virtual string GetAccessibilityString (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAccessibilityString(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.GetAccessibilityString(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="override this.GetAccessibilityString : Foundation.NSRange -&gt; string" Usage="nSTextView.GetAccessibilityString range" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSAccessibilityNavigableStaticText.GetAccessibilityString(Foundation.NSRange)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("accessibilityStringForRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributedSubstring">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSAttributedString GetAttributedSubstring (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSAttributedString GetAttributedSubstring(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.GetAttributedSubstring(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member GetAttributedSubstring : Foundation.NSRange -&gt; Foundation.NSAttributedString&#xA;override this.GetAttributedSubstring : Foundation.NSRange -&gt; Foundation.NSAttributedString" Usage="nSTextView.GetAttributedSubstring range" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSTextInput.GetAttributedSubstring(Foundation.NSRange)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("attributedSubstringFromRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSAttributedString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributedSubstring">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSAttributedString GetAttributedSubstring (Foundation.NSRange proposedRange, out Foundation.NSRange actualRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSAttributedString GetAttributedSubstring(valuetype Foundation.NSRange proposedRange, [out] valuetype Foundation.NSRange&amp; actualRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.GetAttributedSubstring(Foundation.NSRange,Foundation.NSRange@)" />
      <MemberSignature Language="F#" Value="abstract member GetAttributedSubstring : Foundation.NSRange *  -&gt; Foundation.NSAttributedString&#xA;override this.GetAttributedSubstring : Foundation.NSRange *  -&gt; Foundation.NSAttributedString" Usage="nSTextView.GetAttributedSubstring (proposedRange, actualRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("attributedSubstringForProposedRange:actualRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSAttributedString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proposedRange" Type="Foundation.NSRange" />
        <Parameter Name="actualRange" Type="Foundation.NSRange" RefType="out" />
      </Parameters>
      <Docs>
        <param name="proposedRange">To be added.</param>
        <param name="actualRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBaselineDelta">
      <MemberSignature Language="C#" Value="public virtual nfloat GetBaselineDelta (nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetBaselineDelta(valuetype System.nuint charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.GetBaselineDelta(System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member GetBaselineDelta : nuint -&gt; nfloat&#xA;override this.GetBaselineDelta : nuint -&gt; nfloat" Usage="nSTextView.GetBaselineDelta charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("baselineDeltaForCharacterAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCandidates">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewGetCandidates GetCandidates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewGetCandidates GetCandidates" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.GetCandidates" />
      <MemberSignature Language="F#" Value="member this.GetCandidates : AppKit.NSTextViewGetCandidates with get, set" Usage="AppKit.NSTextView.GetCandidates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewGetCandidates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndex">
      <MemberSignature Language="C#" Value="public virtual nuint GetCharacterIndex (CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nuint GetCharacterIndex(valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.GetCharacterIndex(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member GetCharacterIndex : CoreGraphics.CGPoint -&gt; nuint&#xA;override this.GetCharacterIndex : CoreGraphics.CGPoint -&gt; nuint" Usage="nSTextView.GetCharacterIndex point" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSTextInput.GetCharacterIndex(CoreGraphics.CGPoint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("characterIndexForPoint:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompletions">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewCompletion GetCompletions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewCompletion GetCompletions" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.GetCompletions" />
      <MemberSignature Language="F#" Value="member this.GetCompletions : AppKit.NSTextViewCompletion with get, set" Usage="AppKit.NSTextView.GetCompletions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewCompletion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstRect">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect GetFirstRect (Foundation.NSRange characterRange, out Foundation.NSRange actualRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGRect GetFirstRect(valuetype Foundation.NSRange characterRange, [out] valuetype Foundation.NSRange&amp; actualRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.GetFirstRect(Foundation.NSRange,Foundation.NSRange@)" />
      <MemberSignature Language="F#" Value="abstract member GetFirstRect : Foundation.NSRange *  -&gt; CoreGraphics.CGRect&#xA;override this.GetFirstRect : Foundation.NSRange *  -&gt; CoreGraphics.CGRect" Usage="nSTextView.GetFirstRect (characterRange, actualRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("firstRectForCharacterRange:actualRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterRange" Type="Foundation.NSRange" />
        <Parameter Name="actualRange" Type="Foundation.NSRange" RefType="out" />
      </Parameters>
      <Docs>
        <param name="characterRange">To be added.</param>
        <param name="actualRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstRectForCharacterRange">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect GetFirstRectForCharacterRange (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGRect GetFirstRectForCharacterRange(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.GetFirstRectForCharacterRange(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member GetFirstRectForCharacterRange : Foundation.NSRange -&gt; CoreGraphics.CGRect&#xA;override this.GetFirstRectForCharacterRange : Foundation.NSRange -&gt; CoreGraphics.CGRect" Usage="nSTextView.GetFirstRectForCharacterRange range" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSTextInput.GetFirstRectForCharacterRange(Foundation.NSRange)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("firstRectForCharacterRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFractionOfDistanceThroughGlyph">
      <MemberSignature Language="C#" Value="public virtual nfloat GetFractionOfDistanceThroughGlyph (CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetFractionOfDistanceThroughGlyph(valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.GetFractionOfDistanceThroughGlyph(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member GetFractionOfDistanceThroughGlyph : CoreGraphics.CGPoint -&gt; nfloat&#xA;override this.GetFractionOfDistanceThroughGlyph : CoreGraphics.CGPoint -&gt; nfloat" Usage="nSTextView.GetFractionOfDistanceThroughGlyph point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fractionOfDistanceThroughGlyphForPoint:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredPasteboardType">
      <MemberSignature Language="C#" Value="public virtual string GetPreferredPasteboardType (string[] availableTypes, string[] allowedTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPreferredPasteboardType(string[] availableTypes, string[] allowedTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.GetPreferredPasteboardType(System.String[],System.String[])" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredPasteboardType : string[] * string[] -&gt; string&#xA;override this.GetPreferredPasteboardType : string[] * string[] -&gt; string" Usage="nSTextView.GetPreferredPasteboardType (availableTypes, allowedTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("preferredPasteboardTypeFromArray:restrictedToTypesFromArray:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableTypes" Type="System.String[]" />
        <Parameter Name="allowedTypes" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="availableTypes">To be added.</param>
        <param name="allowedTypes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextCheckingCandidates">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewTextCheckingResults GetTextCheckingCandidates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewTextCheckingResults GetTextCheckingCandidates" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.GetTextCheckingCandidates" />
      <MemberSignature Language="F#" Value="member this.GetTextCheckingCandidates : AppKit.NSTextViewTextCheckingResults with get, set" Usage="AppKit.NSTextView.GetTextCheckingCandidates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewTextCheckingResults</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUndoManager">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewGetUndoManager GetUndoManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewGetUndoManager GetUndoManager" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.GetUndoManager" />
      <MemberSignature Language="F#" Value="member this.GetUndoManager : AppKit.NSTextViewGetUndoManager with get, set" Usage="AppKit.NSTextView.GetUndoManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewGetUndoManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWritablePasteboardTypes">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewCellPosition GetWritablePasteboardTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewCellPosition GetWritablePasteboardTypes" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.GetWritablePasteboardTypes" />
      <MemberSignature Language="F#" Value="member this.GetWritablePasteboardTypes : AppKit.NSTextViewCellPosition with get, set" Usage="AppKit.NSTextView.GetWritablePasteboardTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewCellPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrammarCheckingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GrammarCheckingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GrammarCheckingEnabled" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.GrammarCheckingEnabled" />
      <MemberSignature Language="F#" Value="member this.GrammarCheckingEnabled : bool with get, set" Usage="AppKit.NSTextView.GrammarCheckingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isGrammarCheckingEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setGrammarCheckingEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleTextChecking">
      <MemberSignature Language="C#" Value="public virtual void HandleTextChecking (Foundation.NSTextCheckingResult[] results, Foundation.NSRange range, Foundation.NSTextCheckingTypes checkingTypes, Foundation.NSDictionary options, Foundation.NSOrthography orthography, nint wordCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleTextChecking(class Foundation.NSTextCheckingResult[] results, valuetype Foundation.NSRange range, valuetype Foundation.NSTextCheckingTypes checkingTypes, class Foundation.NSDictionary options, class Foundation.NSOrthography orthography, valuetype System.nint wordCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.HandleTextChecking(Foundation.NSTextCheckingResult[],Foundation.NSRange,Foundation.NSTextCheckingTypes,Foundation.NSDictionary,Foundation.NSOrthography,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member HandleTextChecking : Foundation.NSTextCheckingResult[] * Foundation.NSRange * Foundation.NSTextCheckingTypes * Foundation.NSDictionary * Foundation.NSOrthography * nint -&gt; unit&#xA;override this.HandleTextChecking : Foundation.NSTextCheckingResult[] * Foundation.NSRange * Foundation.NSTextCheckingTypes * Foundation.NSDictionary * Foundation.NSOrthography * nint -&gt; unit" Usage="nSTextView.HandleTextChecking (results, range, checkingTypes, options, orthography, wordCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("handleTextCheckingResults:forRange:types:options:orthography:wordCount:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="Foundation.NSTextCheckingResult[]" />
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="checkingTypes" Type="Foundation.NSTextCheckingTypes" />
        <Parameter Name="options" Type="Foundation.NSDictionary" />
        <Parameter Name="orthography" Type="Foundation.NSOrthography" />
        <Parameter Name="wordCount" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="results">To be added.</param>
        <param name="range">To be added.</param>
        <param name="checkingTypes">To be added.</param>
        <param name="options">To be added.</param>
        <param name="orthography">To be added.</param>
        <param name="wordCount">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMarkedText">
      <MemberSignature Language="C#" Value="public virtual bool HasMarkedText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMarkedText" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.HasMarkedText" />
      <MemberSignature Language="F#" Value="member this.HasMarkedText : bool" Usage="AppKit.NSTextView.HasMarkedText" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:AppKit.INSTextInput.HasMarkedText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("hasMarkedText")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreModifierKeysWhileDragging">
      <MemberSignature Language="C#" Value="public virtual bool IgnoreModifierKeysWhileDragging { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreModifierKeysWhileDragging" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.IgnoreModifierKeysWhileDragging" />
      <MemberSignature Language="F#" Value="member this.IgnoreModifierKeysWhileDragging : bool" Usage="AppKit.NSTextView.IgnoreModifierKeysWhileDragging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("ignoreModifierKeysWhileDragging")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportsGraphics">
      <MemberSignature Language="C#" Value="public virtual bool ImportsGraphics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ImportsGraphics" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.ImportsGraphics" />
      <MemberSignature Language="F#" Value="member this.ImportsGraphics : bool with get, set" Usage="AppKit.NSTextView.ImportsGraphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("importsGraphics")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setImportsGraphics:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCompletion">
      <MemberSignature Language="C#" Value="public virtual void InsertCompletion (string completion, Foundation.NSRange partialWordCharRange, nint movement, bool isFinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCompletion(string completion, valuetype Foundation.NSRange partialWordCharRange, valuetype System.nint movement, bool isFinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.InsertCompletion(System.String,Foundation.NSRange,System.nint,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member InsertCompletion : string * Foundation.NSRange * nint * bool -&gt; unit&#xA;override this.InsertCompletion : string * Foundation.NSRange * nint * bool -&gt; unit" Usage="nSTextView.InsertCompletion (completion, partialWordCharRange, movement, isFinal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("insertCompletion:forPartialWordRange:movement:isFinal:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completion" Type="System.String" />
        <Parameter Name="partialWordCharRange" Type="Foundation.NSRange" />
        <Parameter Name="movement" Type="System.nint" />
        <Parameter Name="isFinal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="completion">To be added.</param>
        <param name="partialWordCharRange">To be added.</param>
        <param name="movement">To be added.</param>
        <param name="isFinal">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertionPointColor">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSColor InsertionPointColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSColor InsertionPointColor" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.InsertionPointColor" />
      <MemberSignature Language="F#" Value="member this.InsertionPointColor : AppKit.NSColor with get, set" Usage="AppKit.NSTextView.InsertionPointColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("insertionPointColor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setInsertionPointColor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertText">
      <MemberSignature Language="C#" Value="public virtual void InsertText (Foundation.NSObject insertString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertText(class Foundation.NSObject insertString) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.InsertText(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member InsertText : Foundation.NSObject -&gt; unit&#xA;override this.InsertText : Foundation.NSObject -&gt; unit" Usage="nSTextView.InsertText insertString" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSTextInput.InsertText(Foundation.NSObject)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("insertText:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 6, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insertString" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="insertString">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertText">
      <MemberSignature Language="C#" Value="public virtual void InsertText (Foundation.NSObject text, Foundation.NSRange replacementRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertText(class Foundation.NSObject text, valuetype Foundation.NSRange replacementRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.InsertText(Foundation.NSObject,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member InsertText : Foundation.NSObject * Foundation.NSRange -&gt; unit&#xA;override this.InsertText : Foundation.NSObject * Foundation.NSRange -&gt; unit" Usage="nSTextView.InsertText (text, replacementRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("insertText:replacementRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Foundation.NSObject" />
        <Parameter Name="replacementRange" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="replacementRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateTextContainerOrigin">
      <MemberSignature Language="C#" Value="public virtual void InvalidateTextContainerOrigin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateTextContainerOrigin() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.InvalidateTextContainerOrigin" />
      <MemberSignature Language="F#" Value="abstract member InvalidateTextContainerOrigin : unit -&gt; unit&#xA;override this.InvalidateTextContainerOrigin : unit -&gt; unit" Usage="nSTextView.InvalidateTextContainerOrigin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("invalidateTextContainerOrigin")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCoalescingUndo">
      <MemberSignature Language="C#" Value="public virtual bool IsCoalescingUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsCoalescingUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.IsCoalescingUndo" />
      <MemberSignature Language="F#" Value="abstract member IsCoalescingUndo : unit -&gt; bool&#xA;override this.IsCoalescingUndo : unit -&gt; bool" Usage="nSTextView.IsCoalescingUndo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("isCoalescingUndo")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIncrementalSearchingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsIncrementalSearchingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIncrementalSearchingEnabled" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.IsIncrementalSearchingEnabled" />
      <MemberSignature Language="F#" Value="member this.IsIncrementalSearchingEnabled : bool with get, set" Usage="AppKit.NSTextView.IsIncrementalSearchingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isIncrementalSearchingEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setIncrementalSearchingEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutManager">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSLayoutManager LayoutManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSLayoutManager LayoutManager" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.LayoutManager" />
      <MemberSignature Language="F#" Value="member this.LayoutManager : AppKit.NSLayoutManager" Usage="AppKit.NSTextView.LayoutManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("layoutManager")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSLayoutManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutOrientation">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSTextLayoutOrientation LayoutOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSTextLayoutOrientation LayoutOrientation" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.LayoutOrientation" />
      <MemberSignature Language="F#" Value="member this.LayoutOrientation : AppKit.NSTextLayoutOrientation" Usage="AppKit.NSTextView.LayoutOrientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("layoutOrientation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSTextLayoutOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkClicked">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewLink LinkClicked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewLink LinkClicked" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.LinkClicked" />
      <MemberSignature Language="F#" Value="member this.LinkClicked : AppKit.NSTextViewLink with get, set" Usage="AppKit.NSTextView.LinkClicked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewLink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkTextAttributes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary LinkTextAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary LinkTextAttributes" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.LinkTextAttributes" />
      <MemberSignature Language="F#" Value="member this.LinkTextAttributes : Foundation.NSDictionary with get, set" Usage="AppKit.NSTextView.LinkTextAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("linkTextAttributes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setLinkTextAttributes:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoosenKerning">
      <MemberSignature Language="C#" Value="public virtual void LoosenKerning (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoosenKerning(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.LoosenKerning(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member LoosenKerning : Foundation.NSObject -&gt; unit&#xA;override this.LoosenKerning : Foundation.NSObject -&gt; unit" Usage="nSTextView.LoosenKerning sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("loosenKerning:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LowerBaseline">
      <MemberSignature Language="C#" Value="public virtual void LowerBaseline (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LowerBaseline(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.LowerBaseline(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member LowerBaseline : Foundation.NSObject -&gt; unit&#xA;override this.LowerBaseline : Foundation.NSObject -&gt; unit" Usage="nSTextView.LowerBaseline sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("lowerBaseline:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeItem">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSTouchBarItem MakeItem (AppKit.NSTouchBar touchBar, string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSTouchBarItem MakeItem(class AppKit.NSTouchBar touchBar, string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.MakeItem(AppKit.NSTouchBar,System.String)" />
      <MemberSignature Language="F#" Value="abstract member MakeItem : AppKit.NSTouchBar * string -&gt; AppKit.NSTouchBarItem&#xA;override this.MakeItem : AppKit.NSTouchBar * string -&gt; AppKit.NSTouchBarItem" Usage="nSTextView.MakeItem (touchBar, identifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("touchBar:makeItemForIdentifier:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSTouchBarItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchBar" Type="AppKit.NSTouchBar" />
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="touchBar">To be added.</param>
        <param name="identifier">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkedRange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange MarkedRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSRange MarkedRange" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.MarkedRange" />
      <MemberSignature Language="F#" Value="member this.MarkedRange : Foundation.NSRange" Usage="AppKit.NSTextView.MarkedRange" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:AppKit.INSTextInput.MarkedRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("markedRange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkedTextAttributes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary MarkedTextAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary MarkedTextAttributes" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.MarkedTextAttributes" />
      <MemberSignature Language="F#" Value="member this.MarkedTextAttributes : Foundation.NSDictionary with get, set" Usage="AppKit.NSTextView.MarkedTextAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("markedTextAttributes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMarkedTextAttributes:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuForEvent">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewEventMenu MenuForEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewEventMenu MenuForEvent" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.MenuForEvent" />
      <MemberSignature Language="F#" Value="member this.MenuForEvent : AppKit.NSTextViewEventMenu with get, set" Usage="AppKit.NSTextView.MenuForEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewEventMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamesOfPromisedFilesDroppedAtDestination">
      <MemberSignature Language="C#" Value="public virtual string[] NamesOfPromisedFilesDroppedAtDestination (Foundation.NSUrl dropDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] NamesOfPromisedFilesDroppedAtDestination(class Foundation.NSUrl dropDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.NamesOfPromisedFilesDroppedAtDestination(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="abstract member NamesOfPromisedFilesDroppedAtDestination : Foundation.NSUrl -&gt; string[]&#xA;override this.NamesOfPromisedFilesDroppedAtDestination : Foundation.NSUrl -&gt; string[]" Usage="nSTextView.NamesOfPromisedFilesDroppedAtDestination dropDestination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("namesOfPromisedFilesDroppedAtDestination:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.None, "Use NSFilePromiseProvider objects instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dropDestination" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="dropDestination">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderFrontLinkPanel">
      <MemberSignature Language="C#" Value="public virtual void OrderFrontLinkPanel (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderFrontLinkPanel(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.OrderFrontLinkPanel(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member OrderFrontLinkPanel : Foundation.NSObject -&gt; unit&#xA;override this.OrderFrontLinkPanel : Foundation.NSObject -&gt; unit" Usage="nSTextView.OrderFrontLinkPanel sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("orderFrontLinkPanel:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderFrontListPanel">
      <MemberSignature Language="C#" Value="public virtual void OrderFrontListPanel (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderFrontListPanel(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.OrderFrontListPanel(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member OrderFrontListPanel : Foundation.NSObject -&gt; unit&#xA;override this.OrderFrontListPanel : Foundation.NSObject -&gt; unit" Usage="nSTextView.OrderFrontListPanel sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("orderFrontListPanel:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderFrontSpacingPanel">
      <MemberSignature Language="C#" Value="public virtual void OrderFrontSpacingPanel (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderFrontSpacingPanel(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.OrderFrontSpacingPanel(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member OrderFrontSpacingPanel : Foundation.NSObject -&gt; unit&#xA;override this.OrderFrontSpacingPanel : Foundation.NSObject -&gt; unit" Usage="nSTextView.OrderFrontSpacingPanel sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("orderFrontSpacingPanel:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderFrontSubstitutionsPanel">
      <MemberSignature Language="C#" Value="public virtual void OrderFrontSubstitutionsPanel (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderFrontSubstitutionsPanel(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.OrderFrontSubstitutionsPanel(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member OrderFrontSubstitutionsPanel : Foundation.NSObject -&gt; unit&#xA;override this.OrderFrontSubstitutionsPanel : Foundation.NSObject -&gt; unit" Usage="nSTextView.OrderFrontSubstitutionsPanel sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("orderFrontSubstitutionsPanel:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderFrontTablePanel">
      <MemberSignature Language="C#" Value="public virtual void OrderFrontTablePanel (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderFrontTablePanel(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.OrderFrontTablePanel(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member OrderFrontTablePanel : Foundation.NSObject -&gt; unit&#xA;override this.OrderFrontTablePanel : Foundation.NSObject -&gt; unit" Usage="nSTextView.OrderFrontTablePanel sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("orderFrontTablePanel:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outline">
      <MemberSignature Language="C#" Value="public virtual void Outline (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Outline(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.Outline(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member Outline : Foundation.NSObject -&gt; unit&#xA;override this.Outline : Foundation.NSObject -&gt; unit" Usage="nSTextView.Outline sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("outline:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAsPlainText">
      <MemberSignature Language="C#" Value="public virtual void PasteAsPlainText (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAsPlainText(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.PasteAsPlainText(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member PasteAsPlainText : Foundation.NSObject -&gt; unit&#xA;override this.PasteAsPlainText : Foundation.NSObject -&gt; unit" Usage="nSTextView.PasteAsPlainText sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pasteAsPlainText:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAsRichText">
      <MemberSignature Language="C#" Value="public virtual void PasteAsRichText (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAsRichText(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.PasteAsRichText(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member PasteAsRichText : Foundation.NSObject -&gt; unit&#xA;override this.PasteAsRichText : Foundation.NSObject -&gt; unit" Usage="nSTextView.PasteAsRichText sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pasteAsRichText:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformFindPanelAction">
      <MemberSignature Language="C#" Value="public virtual void PerformFindPanelAction (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformFindPanelAction(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.PerformFindPanelAction(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member PerformFindPanelAction : Foundation.NSObject -&gt; unit&#xA;override this.PerformFindPanelAction : Foundation.NSObject -&gt; unit" Usage="nSTextView.PerformFindPanelAction sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("performFindPanelAction:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformValidatedReplacement">
      <MemberSignature Language="C#" Value="public virtual bool PerformValidatedReplacement (Foundation.NSRange range, Foundation.NSAttributedString attributedString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformValidatedReplacement(valuetype Foundation.NSRange range, class Foundation.NSAttributedString attributedString) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.PerformValidatedReplacement(Foundation.NSRange,Foundation.NSAttributedString)" />
      <MemberSignature Language="F#" Value="abstract member PerformValidatedReplacement : Foundation.NSRange * Foundation.NSAttributedString -&gt; bool&#xA;override this.PerformValidatedReplacement : Foundation.NSRange * Foundation.NSAttributedString -&gt; bool" Usage="nSTextView.PerformValidatedReplacement (range, attributedString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("performValidatedReplacementInRange:withAttributedString:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="attributedString" Type="Foundation.NSAttributedString" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="attributedString">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickLookPreviewableItemsInRanges">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSArray QuickLookPreviewableItemsInRanges (Foundation.NSArray ranges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSArray QuickLookPreviewableItemsInRanges(class Foundation.NSArray ranges) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.QuickLookPreviewableItemsInRanges(Foundation.NSArray)" />
      <MemberSignature Language="F#" Value="abstract member QuickLookPreviewableItemsInRanges : Foundation.NSArray -&gt; Foundation.NSArray&#xA;override this.QuickLookPreviewableItemsInRanges : Foundation.NSArray -&gt; Foundation.NSArray" Usage="nSTextView.QuickLookPreviewableItemsInRanges ranges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("quickLookPreviewableItemsInRanges:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ranges" Type="Foundation.NSArray" />
      </Parameters>
      <Docs>
        <param name="ranges">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseBaseline">
      <MemberSignature Language="C#" Value="public virtual void RaiseBaseline (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseBaseline(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RaiseBaseline(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member RaiseBaseline : Foundation.NSObject -&gt; unit&#xA;override this.RaiseBaseline : Foundation.NSObject -&gt; unit" Usage="nSTextView.RaiseBaseline sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("raiseBaseline:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeForUserCharacterAttributeChange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange RangeForUserCharacterAttributeChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Foundation.NSRange RangeForUserCharacterAttributeChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RangeForUserCharacterAttributeChange" />
      <MemberSignature Language="F#" Value="abstract member RangeForUserCharacterAttributeChange : unit -&gt; Foundation.NSRange&#xA;override this.RangeForUserCharacterAttributeChange : unit -&gt; Foundation.NSRange" Usage="nSTextView.RangeForUserCharacterAttributeChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rangeForUserCharacterAttributeChange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeForUserCompletion">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange RangeForUserCompletion ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Foundation.NSRange RangeForUserCompletion() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RangeForUserCompletion" />
      <MemberSignature Language="F#" Value="abstract member RangeForUserCompletion : unit -&gt; Foundation.NSRange&#xA;override this.RangeForUserCompletion : unit -&gt; Foundation.NSRange" Usage="nSTextView.RangeForUserCompletion " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rangeForUserCompletion")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeForUserParagraphAttributeChange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange RangeForUserParagraphAttributeChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Foundation.NSRange RangeForUserParagraphAttributeChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RangeForUserParagraphAttributeChange" />
      <MemberSignature Language="F#" Value="abstract member RangeForUserParagraphAttributeChange : unit -&gt; Foundation.NSRange&#xA;override this.RangeForUserParagraphAttributeChange : unit -&gt; Foundation.NSRange" Usage="nSTextView.RangeForUserParagraphAttributeChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rangeForUserParagraphAttributeChange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeForUserTextChange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange RangeForUserTextChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Foundation.NSRange RangeForUserTextChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RangeForUserTextChange" />
      <MemberSignature Language="F#" Value="abstract member RangeForUserTextChange : unit -&gt; Foundation.NSRange&#xA;override this.RangeForUserTextChange : unit -&gt; Foundation.NSRange" Usage="nSTextView.RangeForUserTextChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rangeForUserTextChange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangesForUserCharacterAttributeChange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSArray RangesForUserCharacterAttributeChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSArray RangesForUserCharacterAttributeChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RangesForUserCharacterAttributeChange" />
      <MemberSignature Language="F#" Value="abstract member RangesForUserCharacterAttributeChange : unit -&gt; Foundation.NSArray&#xA;override this.RangesForUserCharacterAttributeChange : unit -&gt; Foundation.NSArray" Usage="nSTextView.RangesForUserCharacterAttributeChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rangesForUserCharacterAttributeChange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSArray</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangesForUserParagraphAttributeChange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSArray RangesForUserParagraphAttributeChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSArray RangesForUserParagraphAttributeChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RangesForUserParagraphAttributeChange" />
      <MemberSignature Language="F#" Value="abstract member RangesForUserParagraphAttributeChange : unit -&gt; Foundation.NSArray&#xA;override this.RangesForUserParagraphAttributeChange : unit -&gt; Foundation.NSArray" Usage="nSTextView.RangesForUserParagraphAttributeChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rangesForUserParagraphAttributeChange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSArray</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangesForUserTextChange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSArray RangesForUserTextChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSArray RangesForUserTextChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RangesForUserTextChange" />
      <MemberSignature Language="F#" Value="abstract member RangesForUserTextChange : unit -&gt; Foundation.NSArray&#xA;override this.RangesForUserTextChange : unit -&gt; Foundation.NSArray" Usage="nSTextView.RangesForUserTextChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rangesForUserTextChange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSArray</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadablePasteboardTypes">
      <MemberSignature Language="C#" Value="public virtual string[] ReadablePasteboardTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] ReadablePasteboardTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ReadablePasteboardTypes" />
      <MemberSignature Language="F#" Value="abstract member ReadablePasteboardTypes : unit -&gt; string[]&#xA;override this.ReadablePasteboardTypes : unit -&gt; string[]" Usage="nSTextView.ReadablePasteboardTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("readablePasteboardTypes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadSelectionFromPasteboard">
      <MemberSignature Language="C#" Value="public virtual bool ReadSelectionFromPasteboard (AppKit.NSPasteboard pboard);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadSelectionFromPasteboard(class AppKit.NSPasteboard pboard) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ReadSelectionFromPasteboard(AppKit.NSPasteboard)" />
      <MemberSignature Language="F#" Value="abstract member ReadSelectionFromPasteboard : AppKit.NSPasteboard -&gt; bool&#xA;override this.ReadSelectionFromPasteboard : AppKit.NSPasteboard -&gt; bool" Usage="nSTextView.ReadSelectionFromPasteboard pboard" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("readSelectionFromPasteboard:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pboard" Type="AppKit.NSPasteboard" />
      </Parameters>
      <Docs>
        <param name="pboard">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadSelectionFromPasteboard">
      <MemberSignature Language="C#" Value="public virtual bool ReadSelectionFromPasteboard (AppKit.NSPasteboard pboard, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadSelectionFromPasteboard(class AppKit.NSPasteboard pboard, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ReadSelectionFromPasteboard(AppKit.NSPasteboard,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ReadSelectionFromPasteboard : AppKit.NSPasteboard * string -&gt; bool&#xA;override this.ReadSelectionFromPasteboard : AppKit.NSPasteboard * string -&gt; bool" Usage="nSTextView.ReadSelectionFromPasteboard (pboard, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("readSelectionFromPasteboard:type:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pboard" Type="AppKit.NSPasteboard" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pboard">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RectsForCharacterRange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSArray RectsForCharacterRange (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSArray RectsForCharacterRange(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RectsForCharacterRange(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member RectsForCharacterRange : Foundation.NSRange -&gt; Foundation.NSArray&#xA;override this.RectsForCharacterRange : Foundation.NSRange -&gt; Foundation.NSArray" Usage="nSTextView.RectsForCharacterRange range" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSTextFinderClient.RectsForCharacterRange(Foundation.NSRange)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rectsForCharacterRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterForServices">
      <MemberSignature Language="C#" Value="public static void RegisterForServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterForServices() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RegisterForServices" />
      <MemberSignature Language="F#" Value="static member RegisterForServices : unit -&gt; unit" Usage="AppKit.NSTextView.RegisterForServices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("registerForServices")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceCharactersInRangewithString">
      <MemberSignature Language="C#" Value="public virtual void ReplaceCharactersInRangewithString (Foundation.NSRange range, string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceCharactersInRangewithString(valuetype Foundation.NSRange range, string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ReplaceCharactersInRangewithString(Foundation.NSRange,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceCharactersInRangewithString : Foundation.NSRange * string -&gt; unit&#xA;override this.ReplaceCharactersInRangewithString : Foundation.NSRange * string -&gt; unit" Usage="nSTextView.ReplaceCharactersInRangewithString (range, str)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSTextFinderClient.ReplaceCharactersInRangewithString(Foundation.NSRange,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("replaceCharactersInRange:withString:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="str">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceTextContainer">
      <MemberSignature Language="C#" Value="public virtual void ReplaceTextContainer (AppKit.NSTextContainer newContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceTextContainer(class AppKit.NSTextContainer newContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ReplaceTextContainer(AppKit.NSTextContainer)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceTextContainer : AppKit.NSTextContainer -&gt; unit&#xA;override this.ReplaceTextContainer : AppKit.NSTextContainer -&gt; unit" Usage="nSTextView.ReplaceTextContainer newContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("replaceTextContainer:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newContainer" Type="AppKit.NSTextContainer" />
      </Parameters>
      <Docs>
        <param name="newContainer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RichText">
      <MemberSignature Language="C#" Value="public virtual bool RichText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RichText" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.RichText" />
      <MemberSignature Language="F#" Value="member this.RichText : bool with get, set" Usage="AppKit.NSTextView.RichText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isRichText")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setRichText:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewDidAddMarker">
      <MemberSignature Language="C#" Value="public virtual void RulerViewDidAddMarker (AppKit.NSRulerView ruler, AppKit.NSRulerMarker marker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RulerViewDidAddMarker(class AppKit.NSRulerView ruler, class AppKit.NSRulerMarker marker) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RulerViewDidAddMarker(AppKit.NSRulerView,AppKit.NSRulerMarker)" />
      <MemberSignature Language="F#" Value="abstract member RulerViewDidAddMarker : AppKit.NSRulerView * AppKit.NSRulerMarker -&gt; unit&#xA;override this.RulerViewDidAddMarker : AppKit.NSRulerView * AppKit.NSRulerMarker -&gt; unit" Usage="nSTextView.RulerViewDidAddMarker (ruler, marker)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rulerView:didAddMarker:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="AppKit.NSRulerView" />
        <Parameter Name="marker" Type="AppKit.NSRulerMarker" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="marker">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewDidMoveMarker">
      <MemberSignature Language="C#" Value="public virtual void RulerViewDidMoveMarker (AppKit.NSRulerView ruler, AppKit.NSRulerMarker marker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RulerViewDidMoveMarker(class AppKit.NSRulerView ruler, class AppKit.NSRulerMarker marker) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RulerViewDidMoveMarker(AppKit.NSRulerView,AppKit.NSRulerMarker)" />
      <MemberSignature Language="F#" Value="abstract member RulerViewDidMoveMarker : AppKit.NSRulerView * AppKit.NSRulerMarker -&gt; unit&#xA;override this.RulerViewDidMoveMarker : AppKit.NSRulerView * AppKit.NSRulerMarker -&gt; unit" Usage="nSTextView.RulerViewDidMoveMarker (ruler, marker)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rulerView:didMoveMarker:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="AppKit.NSRulerView" />
        <Parameter Name="marker" Type="AppKit.NSRulerMarker" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="marker">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewDidRemoveMarker">
      <MemberSignature Language="C#" Value="public virtual void RulerViewDidRemoveMarker (AppKit.NSRulerView ruler, AppKit.NSRulerMarker marker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RulerViewDidRemoveMarker(class AppKit.NSRulerView ruler, class AppKit.NSRulerMarker marker) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RulerViewDidRemoveMarker(AppKit.NSRulerView,AppKit.NSRulerMarker)" />
      <MemberSignature Language="F#" Value="abstract member RulerViewDidRemoveMarker : AppKit.NSRulerView * AppKit.NSRulerMarker -&gt; unit&#xA;override this.RulerViewDidRemoveMarker : AppKit.NSRulerView * AppKit.NSRulerMarker -&gt; unit" Usage="nSTextView.RulerViewDidRemoveMarker (ruler, marker)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rulerView:didRemoveMarker:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="AppKit.NSRulerView" />
        <Parameter Name="marker" Type="AppKit.NSRulerMarker" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="marker">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewHandleMouseDown">
      <MemberSignature Language="C#" Value="public virtual void RulerViewHandleMouseDown (AppKit.NSRulerView ruler, AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RulerViewHandleMouseDown(class AppKit.NSRulerView ruler, class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RulerViewHandleMouseDown(AppKit.NSRulerView,AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member RulerViewHandleMouseDown : AppKit.NSRulerView * AppKit.NSEvent -&gt; unit&#xA;override this.RulerViewHandleMouseDown : AppKit.NSRulerView * AppKit.NSEvent -&gt; unit" Usage="nSTextView.RulerViewHandleMouseDown (ruler, theEvent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rulerView:handleMouseDown:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="AppKit.NSRulerView" />
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewShouldAddMarker">
      <MemberSignature Language="C#" Value="public virtual bool RulerViewShouldAddMarker (AppKit.NSRulerView ruler, AppKit.NSRulerMarker marker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RulerViewShouldAddMarker(class AppKit.NSRulerView ruler, class AppKit.NSRulerMarker marker) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RulerViewShouldAddMarker(AppKit.NSRulerView,AppKit.NSRulerMarker)" />
      <MemberSignature Language="F#" Value="abstract member RulerViewShouldAddMarker : AppKit.NSRulerView * AppKit.NSRulerMarker -&gt; bool&#xA;override this.RulerViewShouldAddMarker : AppKit.NSRulerView * AppKit.NSRulerMarker -&gt; bool" Usage="nSTextView.RulerViewShouldAddMarker (ruler, marker)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rulerView:shouldAddMarker:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="AppKit.NSRulerView" />
        <Parameter Name="marker" Type="AppKit.NSRulerMarker" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="marker">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewShouldMoveMarker">
      <MemberSignature Language="C#" Value="public virtual bool RulerViewShouldMoveMarker (AppKit.NSRulerView ruler, AppKit.NSRulerMarker marker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RulerViewShouldMoveMarker(class AppKit.NSRulerView ruler, class AppKit.NSRulerMarker marker) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RulerViewShouldMoveMarker(AppKit.NSRulerView,AppKit.NSRulerMarker)" />
      <MemberSignature Language="F#" Value="abstract member RulerViewShouldMoveMarker : AppKit.NSRulerView * AppKit.NSRulerMarker -&gt; bool&#xA;override this.RulerViewShouldMoveMarker : AppKit.NSRulerView * AppKit.NSRulerMarker -&gt; bool" Usage="nSTextView.RulerViewShouldMoveMarker (ruler, marker)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rulerView:shouldMoveMarker:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="AppKit.NSRulerView" />
        <Parameter Name="marker" Type="AppKit.NSRulerMarker" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="marker">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewShouldRemoveMarker">
      <MemberSignature Language="C#" Value="public virtual bool RulerViewShouldRemoveMarker (AppKit.NSRulerView ruler, AppKit.NSRulerMarker marker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RulerViewShouldRemoveMarker(class AppKit.NSRulerView ruler, class AppKit.NSRulerMarker marker) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RulerViewShouldRemoveMarker(AppKit.NSRulerView,AppKit.NSRulerMarker)" />
      <MemberSignature Language="F#" Value="abstract member RulerViewShouldRemoveMarker : AppKit.NSRulerView * AppKit.NSRulerMarker -&gt; bool&#xA;override this.RulerViewShouldRemoveMarker : AppKit.NSRulerView * AppKit.NSRulerMarker -&gt; bool" Usage="nSTextView.RulerViewShouldRemoveMarker (ruler, marker)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rulerView:shouldRemoveMarker:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="AppKit.NSRulerView" />
        <Parameter Name="marker" Type="AppKit.NSRulerMarker" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="marker">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewWillAddMarker">
      <MemberSignature Language="C#" Value="public virtual nfloat RulerViewWillAddMarker (AppKit.NSRulerView ruler, AppKit.NSRulerMarker marker, nfloat location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat RulerViewWillAddMarker(class AppKit.NSRulerView ruler, class AppKit.NSRulerMarker marker, valuetype System.nfloat location) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RulerViewWillAddMarker(AppKit.NSRulerView,AppKit.NSRulerMarker,System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member RulerViewWillAddMarker : AppKit.NSRulerView * AppKit.NSRulerMarker * nfloat -&gt; nfloat&#xA;override this.RulerViewWillAddMarker : AppKit.NSRulerView * AppKit.NSRulerMarker * nfloat -&gt; nfloat" Usage="nSTextView.RulerViewWillAddMarker (ruler, marker, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rulerView:willAddMarker:atLocation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="AppKit.NSRulerView" />
        <Parameter Name="marker" Type="AppKit.NSRulerMarker" />
        <Parameter Name="location" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="marker">To be added.</param>
        <param name="location">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewWillMoveMarker">
      <MemberSignature Language="C#" Value="public virtual nfloat RulerViewWillMoveMarker (AppKit.NSRulerView ruler, AppKit.NSRulerMarker marker, nfloat location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat RulerViewWillMoveMarker(class AppKit.NSRulerView ruler, class AppKit.NSRulerMarker marker, valuetype System.nfloat location) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.RulerViewWillMoveMarker(AppKit.NSRulerView,AppKit.NSRulerMarker,System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member RulerViewWillMoveMarker : AppKit.NSRulerView * AppKit.NSRulerMarker * nfloat -&gt; nfloat&#xA;override this.RulerViewWillMoveMarker : AppKit.NSRulerView * AppKit.NSRulerMarker * nfloat -&gt; nfloat" Usage="nSTextView.RulerViewWillMoveMarker (ruler, marker, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rulerView:willMoveMarker:toLocation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="AppKit.NSRulerView" />
        <Parameter Name="marker" Type="AppKit.NSRulerMarker" />
        <Parameter Name="location" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="marker">To be added.</param>
        <param name="location">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerVisible">
      <MemberSignature Language="C#" Value="public virtual bool RulerVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RulerVisible" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.RulerVisible" />
      <MemberSignature Language="F#" Value="member this.RulerVisible : bool with get, set" Usage="AppKit.NSTextView.RulerVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isRulerVisible")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setRulerVisible:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollRangeToVisible">
      <MemberSignature Language="C#" Value="public virtual void ScrollRangeToVisible (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollRangeToVisible(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ScrollRangeToVisible(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="override this.ScrollRangeToVisible : Foundation.NSRange -&gt; unit" Usage="nSTextView.ScrollRangeToVisible range" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSTextFinderClient.ScrollRangeToVisible(Foundation.NSRange)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("scrollRangeToVisible:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="public virtual bool Selectable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selectable" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.Selectable" />
      <MemberSignature Language="F#" Value="member this.Selectable : bool with get, set" Usage="AppKit.NSTextView.Selectable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isSelectable")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setSelectable:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedRanges">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSArray SelectedRanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSArray SelectedRanges" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.SelectedRanges" />
      <MemberSignature Language="F#" Value="member this.SelectedRanges : Foundation.NSArray with get, set" Usage="AppKit.NSTextView.SelectedRanges" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:AppKit.INSTextFinderClient.SelectedRanges</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("selectedRanges", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setSelectedRanges:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedTextAttributes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary SelectedTextAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary SelectedTextAttributes" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.SelectedTextAttributes" />
      <MemberSignature Language="F#" Value="member this.SelectedTextAttributes : Foundation.NSDictionary with get, set" Usage="AppKit.NSTextView.SelectedTextAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("selectedTextAttributes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setSelectedTextAttributes:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionAffinity">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSSelectionAffinity SelectionAffinity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AppKit.NSSelectionAffinity SelectionAffinity() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SelectionAffinity" />
      <MemberSignature Language="F#" Value="abstract member SelectionAffinity : unit -&gt; AppKit.NSSelectionAffinity&#xA;override this.SelectionAffinity : unit -&gt; AppKit.NSSelectionAffinity" Usage="nSTextView.SelectionAffinity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("selectionAffinity")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSSelectionAffinity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionGranularity">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSSelectionGranularity SelectionGranularity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSSelectionGranularity SelectionGranularity" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.SelectionGranularity" />
      <MemberSignature Language="F#" Value="member this.SelectionGranularity : AppKit.NSSelectionGranularity with get, set" Usage="AppKit.NSTextView.SelectionGranularity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("selectionGranularity")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setSelectionGranularity:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSSelectionGranularity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionRange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange SelectionRange (Foundation.NSRange proposedCharRange, AppKit.NSSelectionGranularity granularity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Foundation.NSRange SelectionRange(valuetype Foundation.NSRange proposedCharRange, valuetype AppKit.NSSelectionGranularity granularity) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SelectionRange(Foundation.NSRange,AppKit.NSSelectionGranularity)" />
      <MemberSignature Language="F#" Value="abstract member SelectionRange : Foundation.NSRange * AppKit.NSSelectionGranularity -&gt; Foundation.NSRange&#xA;override this.SelectionRange : Foundation.NSRange * AppKit.NSSelectionGranularity -&gt; Foundation.NSRange" Usage="nSTextView.SelectionRange (proposedCharRange, granularity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("selectionRangeForProposedRange:granularity:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proposedCharRange" Type="Foundation.NSRange" />
        <Parameter Name="granularity" Type="AppKit.NSSelectionGranularity" />
      </Parameters>
      <Docs>
        <param name="proposedCharRange">To be added.</param>
        <param name="granularity">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAlignmentRange">
      <MemberSignature Language="C#" Value="public virtual void SetAlignmentRange (AppKit.NSTextAlignment alignment, Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAlignmentRange(valuetype AppKit.NSTextAlignment alignment, valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SetAlignmentRange(AppKit.NSTextAlignment,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member SetAlignmentRange : AppKit.NSTextAlignment * Foundation.NSRange -&gt; unit&#xA;override this.SetAlignmentRange : AppKit.NSTextAlignment * Foundation.NSRange -&gt; unit" Usage="nSTextView.SetAlignmentRange (alignment, range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setAlignment:range:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alignment" Type="AppKit.NSTextAlignment" />
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="alignment">To be added.</param>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBaseWritingDirection">
      <MemberSignature Language="C#" Value="public virtual void SetBaseWritingDirection (AppKit.NSWritingDirection writingDirection, Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBaseWritingDirection(valuetype AppKit.NSWritingDirection writingDirection, valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SetBaseWritingDirection(AppKit.NSWritingDirection,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member SetBaseWritingDirection : AppKit.NSWritingDirection * Foundation.NSRange -&gt; unit&#xA;override this.SetBaseWritingDirection : AppKit.NSWritingDirection * Foundation.NSRange -&gt; unit" Usage="nSTextView.SetBaseWritingDirection (writingDirection, range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setBaseWritingDirection:range:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writingDirection" Type="AppKit.NSWritingDirection" />
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="writingDirection">To be added.</param>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetConstrainedFrameSize">
      <MemberSignature Language="C#" Value="public virtual void SetConstrainedFrameSize (CoreGraphics.CGSize desiredSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetConstrainedFrameSize(valuetype CoreGraphics.CGSize desiredSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SetConstrainedFrameSize(CoreGraphics.CGSize)" />
      <MemberSignature Language="F#" Value="abstract member SetConstrainedFrameSize : CoreGraphics.CGSize -&gt; unit&#xA;override this.SetConstrainedFrameSize : CoreGraphics.CGSize -&gt; unit" Usage="nSTextView.SetConstrainedFrameSize desiredSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setConstrainedFrameSize:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredSize" Type="CoreGraphics.CGSize" />
      </Parameters>
      <Docs>
        <param name="desiredSize">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLayoutOrientation">
      <MemberSignature Language="C#" Value="public virtual void SetLayoutOrientation (AppKit.NSTextLayoutOrientation theOrientation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLayoutOrientation(valuetype AppKit.NSTextLayoutOrientation theOrientation) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SetLayoutOrientation(AppKit.NSTextLayoutOrientation)" />
      <MemberSignature Language="F#" Value="abstract member SetLayoutOrientation : AppKit.NSTextLayoutOrientation -&gt; unit&#xA;override this.SetLayoutOrientation : AppKit.NSTextLayoutOrientation -&gt; unit" Usage="nSTextView.SetLayoutOrientation theOrientation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setLayoutOrientation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theOrientation" Type="AppKit.NSTextLayoutOrientation" />
      </Parameters>
      <Docs>
        <param name="theOrientation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMarkedText">
      <MemberSignature Language="C#" Value="public virtual void SetMarkedText (Foundation.NSObject string, Foundation.NSRange selRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMarkedText(class Foundation.NSObject string, valuetype Foundation.NSRange selRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SetMarkedText(Foundation.NSObject,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member SetMarkedText : Foundation.NSObject * Foundation.NSRange -&gt; unit&#xA;override this.SetMarkedText : Foundation.NSObject * Foundation.NSRange -&gt; unit" Usage="nSTextView.SetMarkedText (string, selRange)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSTextInput.SetMarkedText(Foundation.NSObject,Foundation.NSRange)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setMarkedText:selectedRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string" Type="Foundation.NSObject" />
        <Parameter Name="selRange" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="string">To be added.</param>
        <param name="selRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMarkedText">
      <MemberSignature Language="C#" Value="public virtual void SetMarkedText (Foundation.NSObject text, Foundation.NSRange selectedRange, Foundation.NSRange replacementRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMarkedText(class Foundation.NSObject text, valuetype Foundation.NSRange selectedRange, valuetype Foundation.NSRange replacementRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SetMarkedText(Foundation.NSObject,Foundation.NSRange,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member SetMarkedText : Foundation.NSObject * Foundation.NSRange * Foundation.NSRange -&gt; unit&#xA;override this.SetMarkedText : Foundation.NSObject * Foundation.NSRange * Foundation.NSRange -&gt; unit" Usage="nSTextView.SetMarkedText (text, selectedRange, replacementRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setMarkedText:selectedRange:replacementRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Foundation.NSObject" />
        <Parameter Name="selectedRange" Type="Foundation.NSRange" />
        <Parameter Name="replacementRange" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="selectedRange">To be added.</param>
        <param name="replacementRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNeedsDisplay">
      <MemberSignature Language="C#" Value="public virtual void SetNeedsDisplay (CoreGraphics.CGRect rect, bool avoidAdditionalLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNeedsDisplay(valuetype CoreGraphics.CGRect rect, bool avoidAdditionalLayout) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SetNeedsDisplay(CoreGraphics.CGRect,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetNeedsDisplay : CoreGraphics.CGRect * bool -&gt; unit&#xA;override this.SetNeedsDisplay : CoreGraphics.CGRect * bool -&gt; unit" Usage="nSTextView.SetNeedsDisplay (rect, avoidAdditionalLayout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setNeedsDisplayInRect:avoidAdditionalLayout:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
        <Parameter Name="avoidAdditionalLayout" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="avoidAdditionalLayout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedRange">
      <MemberSignature Language="C#" Value="public virtual void SetSelectedRange (Foundation.NSRange charRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSelectedRange(valuetype Foundation.NSRange charRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SetSelectedRange(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member SetSelectedRange : Foundation.NSRange -&gt; unit&#xA;override this.SetSelectedRange : Foundation.NSRange -&gt; unit" Usage="nSTextView.SetSelectedRange charRange" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setSelectedRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charRange" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="charRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedRange">
      <MemberSignature Language="C#" Value="public virtual void SetSelectedRange (Foundation.NSRange charRange, AppKit.NSSelectionAffinity affinity, bool stillSelectingFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSelectedRange(valuetype Foundation.NSRange charRange, valuetype AppKit.NSSelectionAffinity affinity, bool stillSelectingFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SetSelectedRange(Foundation.NSRange,AppKit.NSSelectionAffinity,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetSelectedRange : Foundation.NSRange * AppKit.NSSelectionAffinity * bool -&gt; unit&#xA;override this.SetSelectedRange : Foundation.NSRange * AppKit.NSSelectionAffinity * bool -&gt; unit" Usage="nSTextView.SetSelectedRange (charRange, affinity, stillSelectingFlag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setSelectedRange:affinity:stillSelecting:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charRange" Type="Foundation.NSRange" />
        <Parameter Name="affinity" Type="AppKit.NSSelectionAffinity" />
        <Parameter Name="stillSelectingFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="charRange">To be added.</param>
        <param name="affinity">To be added.</param>
        <param name="stillSelectingFlag">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedRanges">
      <MemberSignature Language="C#" Value="public virtual void SetSelectedRanges (Foundation.NSArray ranges, AppKit.NSSelectionAffinity affinity, bool stillSelectingFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSelectedRanges(class Foundation.NSArray ranges, valuetype AppKit.NSSelectionAffinity affinity, bool stillSelectingFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SetSelectedRanges(Foundation.NSArray,AppKit.NSSelectionAffinity,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetSelectedRanges : Foundation.NSArray * AppKit.NSSelectionAffinity * bool -&gt; unit&#xA;override this.SetSelectedRanges : Foundation.NSArray * AppKit.NSSelectionAffinity * bool -&gt; unit" Usage="nSTextView.SetSelectedRanges (ranges, affinity, stillSelectingFlag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setSelectedRanges:affinity:stillSelecting:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ranges" Type="Foundation.NSArray" />
        <Parameter Name="affinity" Type="AppKit.NSSelectionAffinity" />
        <Parameter Name="stillSelectingFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ranges">To be added.</param>
        <param name="affinity">To be added.</param>
        <param name="stillSelectingFlag">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpellingState">
      <MemberSignature Language="C#" Value="public virtual void SetSpellingState (nint value, Foundation.NSRange charRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSpellingState(valuetype System.nint value, valuetype Foundation.NSRange charRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SetSpellingState(System.nint,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member SetSpellingState : nint * Foundation.NSRange -&gt; unit&#xA;override this.SetSpellingState : nint * Foundation.NSRange -&gt; unit" Usage="nSTextView.SetSpellingState (value, charRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setSpellingState:range:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.nint" />
        <Parameter Name="charRange" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="charRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeText">
      <MemberSignature Language="C#" Value="public virtual bool ShouldChangeText (Foundation.NSArray affectedRanges, string[] replacementStrings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldChangeText(class Foundation.NSArray affectedRanges, string[] replacementStrings) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ShouldChangeText(Foundation.NSArray,System.String[])" />
      <MemberSignature Language="F#" Value="abstract member ShouldChangeText : Foundation.NSArray * string[] -&gt; bool&#xA;override this.ShouldChangeText : Foundation.NSArray * string[] -&gt; bool" Usage="nSTextView.ShouldChangeText (affectedRanges, replacementStrings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("shouldChangeTextInRanges:replacementStrings:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="affectedRanges" Type="Foundation.NSArray" />
        <Parameter Name="replacementStrings" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="affectedRanges">To be added.</param>
        <param name="replacementStrings">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeText">
      <MemberSignature Language="C#" Value="public virtual bool ShouldChangeText (Foundation.NSRange affectedCharRange, string replacementString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldChangeText(valuetype Foundation.NSRange affectedCharRange, string replacementString) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ShouldChangeText(Foundation.NSRange,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ShouldChangeText : Foundation.NSRange * string -&gt; bool&#xA;override this.ShouldChangeText : Foundation.NSRange * string -&gt; bool" Usage="nSTextView.ShouldChangeText (affectedCharRange, replacementString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("shouldChangeTextInRange:replacementString:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="affectedCharRange" Type="Foundation.NSRange" />
        <Parameter Name="replacementString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="affectedCharRange">To be added.</param>
        <param name="replacementString">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeTextInRange">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewChangeText ShouldChangeTextInRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewChangeText ShouldChangeTextInRange" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.ShouldChangeTextInRange" />
      <MemberSignature Language="F#" Value="member this.ShouldChangeTextInRange : AppKit.NSTextViewChangeText with get, set" Usage="AppKit.NSTextView.ShouldChangeTextInRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewChangeText</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeTextInRanges">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewSelectionShouldChange ShouldChangeTextInRanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewSelectionShouldChange ShouldChangeTextInRanges" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.ShouldChangeTextInRanges" />
      <MemberSignature Language="F#" Value="member this.ShouldChangeTextInRanges : AppKit.NSTextViewSelectionShouldChange with get, set" Usage="AppKit.NSTextView.ShouldChangeTextInRanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewSelectionShouldChange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeTypingAttributes">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewTypeAttribute ShouldChangeTypingAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewTypeAttribute ShouldChangeTypingAttributes" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.ShouldChangeTypingAttributes" />
      <MemberSignature Language="F#" Value="member this.ShouldChangeTypingAttributes : AppKit.NSTextViewTypeAttribute with get, set" Usage="AppKit.NSTextView.ShouldChangeTypingAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldDrawInsertionPoint">
      <MemberSignature Language="C#" Value="public virtual bool ShouldDrawInsertionPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldDrawInsertionPoint" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.ShouldDrawInsertionPoint" />
      <MemberSignature Language="F#" Value="member this.ShouldDrawInsertionPoint : bool" Usage="AppKit.NSTextView.ShouldDrawInsertionPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("shouldDrawInsertionPoint")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldReplaceCharactersInRangeswithStrings">
      <MemberSignature Language="C#" Value="public virtual bool ShouldReplaceCharactersInRangeswithStrings (Foundation.NSArray ranges, Foundation.NSArray strings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldReplaceCharactersInRangeswithStrings(class Foundation.NSArray ranges, class Foundation.NSArray strings) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ShouldReplaceCharactersInRangeswithStrings(Foundation.NSArray,Foundation.NSArray)" />
      <MemberSignature Language="F#" Value="abstract member ShouldReplaceCharactersInRangeswithStrings : Foundation.NSArray * Foundation.NSArray -&gt; bool&#xA;override this.ShouldReplaceCharactersInRangeswithStrings : Foundation.NSArray * Foundation.NSArray -&gt; bool" Usage="nSTextView.ShouldReplaceCharactersInRangeswithStrings (ranges, strings)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSTextFinderClient.ShouldReplaceCharactersInRangeswithStrings(Foundation.NSArray,Foundation.NSArray)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("shouldReplaceCharactersInRanges:withStrings:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ranges" Type="Foundation.NSArray" />
        <Parameter Name="strings" Type="Foundation.NSArray" />
      </Parameters>
      <Docs>
        <param name="ranges">To be added.</param>
        <param name="strings">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSelectCandidates">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewSelectCandidate ShouldSelectCandidates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewSelectCandidate ShouldSelectCandidates" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.ShouldSelectCandidates" />
      <MemberSignature Language="F#" Value="member this.ShouldSelectCandidates : AppKit.NSTextViewSelectCandidate with get, set" Usage="AppKit.NSTextView.ShouldSelectCandidates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewSelectCandidate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSetSpellingState">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewSpellingQuery ShouldSetSpellingState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewSpellingQuery ShouldSetSpellingState" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.ShouldSetSpellingState" />
      <MemberSignature Language="F#" Value="member this.ShouldSetSpellingState : AppKit.NSTextViewSpellingQuery with get, set" Usage="AppKit.NSTextView.ShouldSetSpellingState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewSpellingQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldUpdateTouchBarItemIdentifiers">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewUpdateTouchBarItemIdentifiers ShouldUpdateTouchBarItemIdentifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewUpdateTouchBarItemIdentifiers ShouldUpdateTouchBarItemIdentifiers" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.ShouldUpdateTouchBarItemIdentifiers" />
      <MemberSignature Language="F#" Value="member this.ShouldUpdateTouchBarItemIdentifiers : AppKit.NSTextViewUpdateTouchBarItemIdentifiers with get, set" Usage="AppKit.NSTextView.ShouldUpdateTouchBarItemIdentifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewUpdateTouchBarItemIdentifiers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFindIndicatorForRange">
      <MemberSignature Language="C#" Value="public virtual void ShowFindIndicatorForRange (Foundation.NSRange charRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowFindIndicatorForRange(valuetype Foundation.NSRange charRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ShowFindIndicatorForRange(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member ShowFindIndicatorForRange : Foundation.NSRange -&gt; unit&#xA;override this.ShowFindIndicatorForRange : Foundation.NSRange -&gt; unit" Usage="nSTextView.ShowFindIndicatorForRange charRange" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("showFindIndicatorForRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charRange" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="charRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartDeleteRangeForProposedRange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange SmartDeleteRangeForProposedRange (Foundation.NSRange proposedCharRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Foundation.NSRange SmartDeleteRangeForProposedRange(valuetype Foundation.NSRange proposedCharRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SmartDeleteRangeForProposedRange(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member SmartDeleteRangeForProposedRange : Foundation.NSRange -&gt; Foundation.NSRange&#xA;override this.SmartDeleteRangeForProposedRange : Foundation.NSRange -&gt; Foundation.NSRange" Usage="nSTextView.SmartDeleteRangeForProposedRange proposedCharRange" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("smartDeleteRangeForProposedRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proposedCharRange" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="proposedCharRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartInsert">
      <MemberSignature Language="C#" Value="public virtual void SmartInsert (string pasteString, Foundation.NSRange charRangeToReplace, string beforeString, string afterString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SmartInsert(string pasteString, valuetype Foundation.NSRange charRangeToReplace, string beforeString, string afterString) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SmartInsert(System.String,Foundation.NSRange,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SmartInsert : string * Foundation.NSRange * string * string -&gt; unit&#xA;override this.SmartInsert : string * Foundation.NSRange * string * string -&gt; unit" Usage="nSTextView.SmartInsert (pasteString, charRangeToReplace, beforeString, afterString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("smartInsertForString:replacingRange:beforeString:afterString:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pasteString" Type="System.String" />
        <Parameter Name="charRangeToReplace" Type="Foundation.NSRange" />
        <Parameter Name="beforeString" Type="System.String" />
        <Parameter Name="afterString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pasteString">To be added.</param>
        <param name="charRangeToReplace">To be added.</param>
        <param name="beforeString">To be added.</param>
        <param name="afterString">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartInsertAfter">
      <MemberSignature Language="C#" Value="public virtual string SmartInsertAfter (string pasteString, Foundation.NSRange charRangeToReplace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SmartInsertAfter(string pasteString, valuetype Foundation.NSRange charRangeToReplace) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SmartInsertAfter(System.String,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member SmartInsertAfter : string * Foundation.NSRange -&gt; string&#xA;override this.SmartInsertAfter : string * Foundation.NSRange -&gt; string" Usage="nSTextView.SmartInsertAfter (pasteString, charRangeToReplace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("smartInsertAfterStringForString:replacingRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pasteString" Type="System.String" />
        <Parameter Name="charRangeToReplace" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="pasteString">To be added.</param>
        <param name="charRangeToReplace">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartInsertBefore">
      <MemberSignature Language="C#" Value="public virtual string SmartInsertBefore (string pasteString, Foundation.NSRange charRangeToReplace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SmartInsertBefore(string pasteString, valuetype Foundation.NSRange charRangeToReplace) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SmartInsertBefore(System.String,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member SmartInsertBefore : string * Foundation.NSRange -&gt; string&#xA;override this.SmartInsertBefore : string * Foundation.NSRange -&gt; string" Usage="nSTextView.SmartInsertBefore (pasteString, charRangeToReplace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("smartInsertBeforeStringForString:replacingRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pasteString" Type="System.String" />
        <Parameter Name="charRangeToReplace" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="pasteString">To be added.</param>
        <param name="charRangeToReplace">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartInsertDeleteEnabled">
      <MemberSignature Language="C#" Value="public virtual bool SmartInsertDeleteEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SmartInsertDeleteEnabled" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.SmartInsertDeleteEnabled" />
      <MemberSignature Language="F#" Value="member this.SmartInsertDeleteEnabled : bool with get, set" Usage="AppKit.NSTextView.SmartInsertDeleteEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("smartInsertDeleteEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setSmartInsertDeleteEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellCheckerDocumentTag">
      <MemberSignature Language="C#" Value="public virtual nint SpellCheckerDocumentTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nint SpellCheckerDocumentTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.SpellCheckerDocumentTag" />
      <MemberSignature Language="F#" Value="abstract member SpellCheckerDocumentTag : unit -&gt; nint&#xA;override this.SpellCheckerDocumentTag : unit -&gt; nint" Usage="nSTextView.SpellCheckerDocumentTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("spellCheckerDocumentTag")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartSpeaking">
      <MemberSignature Language="C#" Value="public virtual void StartSpeaking (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartSpeaking(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.StartSpeaking(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member StartSpeaking : Foundation.NSObject -&gt; unit&#xA;override this.StartSpeaking : Foundation.NSObject -&gt; unit" Usage="nSTextView.StartSpeaking sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("startSpeaking:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopSpeaking">
      <MemberSignature Language="C#" Value="public virtual void StopSpeaking (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopSpeaking(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.StopSpeaking(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member StopSpeaking : Foundation.NSObject -&gt; unit&#xA;override this.StopSpeaking : Foundation.NSObject -&gt; unit" Usage="nSTextView.StopSpeaking sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("stopSpeaking:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public virtual string String { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.String" />
      <MemberSignature Language="F#" Value="member this.String : string" Usage="AppKit.NSTextView.String" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:AppKit.INSTextFinderClient.String</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("string", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringAtIndexeffectiveRangeendsWithSearchBoundary">
      <MemberSignature Language="C#" Value="public virtual string StringAtIndexeffectiveRangeendsWithSearchBoundary (nuint characterIndex, ref Foundation.NSRange outRange, bool outFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string StringAtIndexeffectiveRangeendsWithSearchBoundary(valuetype System.nuint characterIndex, valuetype Foundation.NSRange&amp; outRange, bool outFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.StringAtIndexeffectiveRangeendsWithSearchBoundary(System.nuint,Foundation.NSRange@,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member StringAtIndexeffectiveRangeendsWithSearchBoundary : nuint *  * bool -&gt; string&#xA;override this.StringAtIndexeffectiveRangeendsWithSearchBoundary : nuint *  * bool -&gt; string" Usage="nSTextView.StringAtIndexeffectiveRangeendsWithSearchBoundary (characterIndex, outRange, outFlag)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSTextFinderClient.StringAtIndexeffectiveRangeendsWithSearchBoundary(System.nuint,Foundation.NSRange@,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("stringAtIndex:effectiveRange:endsWithSearchBoundary:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterIndex" Type="System.nuint" />
        <Parameter Name="outRange" Type="Foundation.NSRange" RefType="ref" />
        <Parameter Name="outFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="characterIndex">To be added.</param>
        <param name="outRange">To be added.</param>
        <param name="outFlag">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringLength">
      <MemberSignature Language="C#" Value="public virtual nuint StringLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nuint StringLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.StringLength" />
      <MemberSignature Language="F#" Value="abstract member StringLength : unit -&gt; nuint&#xA;override this.StringLength : unit -&gt; nuint" Usage="nSTextView.StringLength " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSTextFinderClient.StringLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("stringLength")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StronglyReferencesTextStorage">
      <MemberSignature Language="C#" Value="public static bool StronglyReferencesTextStorage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool StronglyReferencesTextStorage" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.StronglyReferencesTextStorage" />
      <MemberSignature Language="F#" Value="member this.StronglyReferencesTextStorage : bool" Usage="AppKit.NSTextView.StronglyReferencesTextStorage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("stronglyReferencesTextStorage")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextContainer">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSTextContainer TextContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextContainer TextContainer" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.TextContainer" />
      <MemberSignature Language="F#" Value="member this.TextContainer : AppKit.NSTextContainer with get, set" Usage="AppKit.NSTextView.TextContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("textContainer")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTextContainer:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSTextContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextContainerInset">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGSize TextContainerInset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGSize TextContainerInset" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.TextContainerInset" />
      <MemberSignature Language="F#" Value="member this.TextContainerInset : CoreGraphics.CGSize with get, set" Usage="AppKit.NSTextView.TextContainerInset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("textContainerInset")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTextContainerInset:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextContainerOrigin">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGPoint TextContainerOrigin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGPoint TextContainerOrigin" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.TextContainerOrigin" />
      <MemberSignature Language="F#" Value="member this.TextContainerOrigin : CoreGraphics.CGPoint" Usage="AppKit.NSTextView.TextContainerOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("textContainerOrigin")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextStorage">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSTextStorage TextStorage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextStorage TextStorage" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.TextStorage" />
      <MemberSignature Language="F#" Value="member this.TextStorage : AppKit.NSTextStorage" Usage="AppKit.NSTextView.TextStorage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("textStorage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSTextStorage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TightenKerning">
      <MemberSignature Language="C#" Value="public virtual void TightenKerning (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TightenKerning(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.TightenKerning(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member TightenKerning : Foundation.NSObject -&gt; unit&#xA;override this.TightenKerning : Foundation.NSObject -&gt; unit" Usage="nSTextView.TightenKerning sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("tightenKerning:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleAutomaticDashSubstitution">
      <MemberSignature Language="C#" Value="public virtual void ToggleAutomaticDashSubstitution (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleAutomaticDashSubstitution(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ToggleAutomaticDashSubstitution(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ToggleAutomaticDashSubstitution : Foundation.NSObject -&gt; unit&#xA;override this.ToggleAutomaticDashSubstitution : Foundation.NSObject -&gt; unit" Usage="nSTextView.ToggleAutomaticDashSubstitution sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("toggleAutomaticDashSubstitution:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleAutomaticDataDetection">
      <MemberSignature Language="C#" Value="public virtual void ToggleAutomaticDataDetection (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleAutomaticDataDetection(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ToggleAutomaticDataDetection(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ToggleAutomaticDataDetection : Foundation.NSObject -&gt; unit&#xA;override this.ToggleAutomaticDataDetection : Foundation.NSObject -&gt; unit" Usage="nSTextView.ToggleAutomaticDataDetection sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("toggleAutomaticDataDetection:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleAutomaticLinkDetection">
      <MemberSignature Language="C#" Value="public virtual void ToggleAutomaticLinkDetection (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleAutomaticLinkDetection(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ToggleAutomaticLinkDetection(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ToggleAutomaticLinkDetection : Foundation.NSObject -&gt; unit&#xA;override this.ToggleAutomaticLinkDetection : Foundation.NSObject -&gt; unit" Usage="nSTextView.ToggleAutomaticLinkDetection sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("toggleAutomaticLinkDetection:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleAutomaticQuoteSubstitution">
      <MemberSignature Language="C#" Value="public virtual void ToggleAutomaticQuoteSubstitution (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleAutomaticQuoteSubstitution(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ToggleAutomaticQuoteSubstitution(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ToggleAutomaticQuoteSubstitution : Foundation.NSObject -&gt; unit&#xA;override this.ToggleAutomaticQuoteSubstitution : Foundation.NSObject -&gt; unit" Usage="nSTextView.ToggleAutomaticQuoteSubstitution sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("toggleAutomaticQuoteSubstitution:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleAutomaticSpellingCorrection">
      <MemberSignature Language="C#" Value="public virtual void ToggleAutomaticSpellingCorrection (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleAutomaticSpellingCorrection(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ToggleAutomaticSpellingCorrection(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ToggleAutomaticSpellingCorrection : Foundation.NSObject -&gt; unit&#xA;override this.ToggleAutomaticSpellingCorrection : Foundation.NSObject -&gt; unit" Usage="nSTextView.ToggleAutomaticSpellingCorrection sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("toggleAutomaticSpellingCorrection:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleAutomaticTextCompletion">
      <MemberSignature Language="C#" Value="public virtual void ToggleAutomaticTextCompletion (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleAutomaticTextCompletion(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ToggleAutomaticTextCompletion(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ToggleAutomaticTextCompletion : Foundation.NSObject -&gt; unit&#xA;override this.ToggleAutomaticTextCompletion : Foundation.NSObject -&gt; unit" Usage="nSTextView.ToggleAutomaticTextCompletion sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("toggleAutomaticTextCompletion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleAutomaticTextReplacement">
      <MemberSignature Language="C#" Value="public virtual void ToggleAutomaticTextReplacement (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleAutomaticTextReplacement(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ToggleAutomaticTextReplacement(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ToggleAutomaticTextReplacement : Foundation.NSObject -&gt; unit&#xA;override this.ToggleAutomaticTextReplacement : Foundation.NSObject -&gt; unit" Usage="nSTextView.ToggleAutomaticTextReplacement sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("toggleAutomaticTextReplacement:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleContinuousSpellChecking">
      <MemberSignature Language="C#" Value="public virtual void ToggleContinuousSpellChecking (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleContinuousSpellChecking(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ToggleContinuousSpellChecking(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ToggleContinuousSpellChecking : Foundation.NSObject -&gt; unit&#xA;override this.ToggleContinuousSpellChecking : Foundation.NSObject -&gt; unit" Usage="nSTextView.ToggleContinuousSpellChecking sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("toggleContinuousSpellChecking:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleGrammarChecking">
      <MemberSignature Language="C#" Value="public virtual void ToggleGrammarChecking (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleGrammarChecking(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ToggleGrammarChecking(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ToggleGrammarChecking : Foundation.NSObject -&gt; unit&#xA;override this.ToggleGrammarChecking : Foundation.NSObject -&gt; unit" Usage="nSTextView.ToggleGrammarChecking sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("toggleGrammarChecking:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleQuickLookPreviewPanel">
      <MemberSignature Language="C#" Value="public virtual void ToggleQuickLookPreviewPanel (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleQuickLookPreviewPanel(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ToggleQuickLookPreviewPanel(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ToggleQuickLookPreviewPanel : Foundation.NSObject -&gt; unit&#xA;override this.ToggleQuickLookPreviewPanel : Foundation.NSObject -&gt; unit" Usage="nSTextView.ToggleQuickLookPreviewPanel sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("toggleQuickLookPreviewPanel:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleSmartInsertDelete">
      <MemberSignature Language="C#" Value="public virtual void ToggleSmartInsertDelete (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleSmartInsertDelete(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ToggleSmartInsertDelete(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ToggleSmartInsertDelete : Foundation.NSObject -&gt; unit&#xA;override this.ToggleSmartInsertDelete : Foundation.NSObject -&gt; unit" Usage="nSTextView.ToggleSmartInsertDelete sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("toggleSmartInsertDelete:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleTraditionalCharacterShape">
      <MemberSignature Language="C#" Value="public virtual void ToggleTraditionalCharacterShape (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleTraditionalCharacterShape(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ToggleTraditionalCharacterShape(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ToggleTraditionalCharacterShape : Foundation.NSObject -&gt; unit&#xA;override this.ToggleTraditionalCharacterShape : Foundation.NSObject -&gt; unit" Usage="nSTextView.ToggleTraditionalCharacterShape sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("toggleTraditionalCharacterShape:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.None, "Use unicode characters via the character palette.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TurnOffKerning">
      <MemberSignature Language="C#" Value="public virtual void TurnOffKerning (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TurnOffKerning(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.TurnOffKerning(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member TurnOffKerning : Foundation.NSObject -&gt; unit&#xA;override this.TurnOffKerning : Foundation.NSObject -&gt; unit" Usage="nSTextView.TurnOffKerning sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("turnOffKerning:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TurnOffLigatures">
      <MemberSignature Language="C#" Value="public virtual void TurnOffLigatures (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TurnOffLigatures(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.TurnOffLigatures(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member TurnOffLigatures : Foundation.NSObject -&gt; unit&#xA;override this.TurnOffLigatures : Foundation.NSObject -&gt; unit" Usage="nSTextView.TurnOffLigatures sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("turnOffLigatures:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypingAttributes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary TypingAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary TypingAttributes" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.TypingAttributes" />
      <MemberSignature Language="F#" Value="member this.TypingAttributes : Foundation.NSDictionary with get, set" Usage="AppKit.NSTextView.TypingAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("typingAttributes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTypingAttributes:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnmarkText">
      <MemberSignature Language="C#" Value="public virtual void UnmarkText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnmarkText() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.UnmarkText" />
      <MemberSignature Language="F#" Value="abstract member UnmarkText : unit -&gt; unit&#xA;override this.UnmarkText : unit -&gt; unit" Usage="nSTextView.UnmarkText " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSTextInput.UnmarkText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("unmarkText")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCandidates">
      <MemberSignature Language="C#" Value="public virtual void UpdateCandidates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateCandidates() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.UpdateCandidates" />
      <MemberSignature Language="F#" Value="abstract member UpdateCandidates : unit -&gt; unit&#xA;override this.UpdateCandidates : unit -&gt; unit" Usage="nSTextView.UpdateCandidates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("updateCandidates")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDragTypeRegistration">
      <MemberSignature Language="C#" Value="public virtual void UpdateDragTypeRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateDragTypeRegistration() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.UpdateDragTypeRegistration" />
      <MemberSignature Language="F#" Value="abstract member UpdateDragTypeRegistration : unit -&gt; unit&#xA;override this.UpdateDragTypeRegistration : unit -&gt; unit" Usage="nSTextView.UpdateDragTypeRegistration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("updateDragTypeRegistration")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFontPanel">
      <MemberSignature Language="C#" Value="public virtual void UpdateFontPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateFontPanel() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.UpdateFontPanel" />
      <MemberSignature Language="F#" Value="abstract member UpdateFontPanel : unit -&gt; unit&#xA;override this.UpdateFontPanel : unit -&gt; unit" Usage="nSTextView.UpdateFontPanel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("updateFontPanel")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateInsertionPointStateAndRestartTimer">
      <MemberSignature Language="C#" Value="public virtual void UpdateInsertionPointStateAndRestartTimer (bool restartFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateInsertionPointStateAndRestartTimer(bool restartFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.UpdateInsertionPointStateAndRestartTimer(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member UpdateInsertionPointStateAndRestartTimer : bool -&gt; unit&#xA;override this.UpdateInsertionPointStateAndRestartTimer : bool -&gt; unit" Usage="nSTextView.UpdateInsertionPointStateAndRestartTimer restartFlag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("updateInsertionPointStateAndRestartTimer:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restartFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="restartFlag">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateQuickLookPreviewPanel">
      <MemberSignature Language="C#" Value="public virtual void UpdateQuickLookPreviewPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateQuickLookPreviewPanel() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.UpdateQuickLookPreviewPanel" />
      <MemberSignature Language="F#" Value="abstract member UpdateQuickLookPreviewPanel : unit -&gt; unit&#xA;override this.UpdateQuickLookPreviewPanel : unit -&gt; unit" Usage="nSTextView.UpdateQuickLookPreviewPanel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("updateQuickLookPreviewPanel")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateRuler">
      <MemberSignature Language="C#" Value="public virtual void UpdateRuler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateRuler() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.UpdateRuler" />
      <MemberSignature Language="F#" Value="abstract member UpdateRuler : unit -&gt; unit&#xA;override this.UpdateRuler : unit -&gt; unit" Usage="nSTextView.UpdateRuler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("updateRuler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTextTouchBarItems">
      <MemberSignature Language="C#" Value="public virtual void UpdateTextTouchBarItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateTextTouchBarItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.UpdateTextTouchBarItems" />
      <MemberSignature Language="F#" Value="abstract member UpdateTextTouchBarItems : unit -&gt; unit&#xA;override this.UpdateTextTouchBarItems : unit -&gt; unit" Usage="nSTextView.UpdateTextTouchBarItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("updateTextTouchBarItems")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTouchBarItemIdentifiers">
      <MemberSignature Language="C#" Value="public virtual void UpdateTouchBarItemIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateTouchBarItemIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.UpdateTouchBarItemIdentifiers" />
      <MemberSignature Language="F#" Value="abstract member UpdateTouchBarItemIdentifiers : unit -&gt; unit&#xA;override this.UpdateTouchBarItemIdentifiers : unit -&gt; unit" Usage="nSTextView.UpdateTouchBarItemIdentifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("updateTouchBarItemIdentifiers")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseAllLigatures">
      <MemberSignature Language="C#" Value="public virtual void UseAllLigatures (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UseAllLigatures(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.UseAllLigatures(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member UseAllLigatures : Foundation.NSObject -&gt; unit&#xA;override this.UseAllLigatures : Foundation.NSObject -&gt; unit" Usage="nSTextView.UseAllLigatures sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("useAllLigatures:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesFindBar">
      <MemberSignature Language="C#" Value="public virtual bool UsesFindBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesFindBar" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.UsesFindBar" />
      <MemberSignature Language="F#" Value="member this.UsesFindBar : bool with get, set" Usage="AppKit.NSTextView.UsesFindBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("usesFindBar")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setUsesFindBar:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesFindPanel">
      <MemberSignature Language="C#" Value="public virtual bool UsesFindPanel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesFindPanel" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.UsesFindPanel" />
      <MemberSignature Language="F#" Value="member this.UsesFindPanel : bool with get, set" Usage="AppKit.NSTextView.UsesFindPanel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("usesFindPanel")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setUsesFindPanel:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesFontPanel">
      <MemberSignature Language="C#" Value="public virtual bool UsesFontPanel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesFontPanel" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.UsesFontPanel" />
      <MemberSignature Language="F#" Value="member this.UsesFontPanel : bool with get, set" Usage="AppKit.NSTextView.UsesFontPanel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("usesFontPanel")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setUsesFontPanel:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesInspectorBar">
      <MemberSignature Language="C#" Value="public virtual bool UsesInspectorBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesInspectorBar" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.UsesInspectorBar" />
      <MemberSignature Language="F#" Value="member this.UsesInspectorBar : bool with get, set" Usage="AppKit.NSTextView.UsesInspectorBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("usesInspectorBar")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setUsesInspectorBar:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesRolloverButtonForSelection">
      <MemberSignature Language="C#" Value="public virtual bool UsesRolloverButtonForSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesRolloverButtonForSelection" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.UsesRolloverButtonForSelection" />
      <MemberSignature Language="F#" Value="member this.UsesRolloverButtonForSelection : bool with get, set" Usage="AppKit.NSTextView.UsesRolloverButtonForSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("usesRolloverButtonForSelection")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setUsesRolloverButtonForSelection:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesRuler">
      <MemberSignature Language="C#" Value="public virtual bool UsesRuler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesRuler" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.UsesRuler" />
      <MemberSignature Language="F#" Value="member this.UsesRuler : bool with get, set" Usage="AppKit.NSTextView.UsesRuler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("usesRuler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setUsesRuler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardKerning">
      <MemberSignature Language="C#" Value="public virtual void UseStandardKerning (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UseStandardKerning(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.UseStandardKerning(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member UseStandardKerning : Foundation.NSObject -&gt; unit&#xA;override this.UseStandardKerning : Foundation.NSObject -&gt; unit" Usage="nSTextView.UseStandardKerning sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("useStandardKerning:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardLigatures">
      <MemberSignature Language="C#" Value="public virtual void UseStandardLigatures (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UseStandardLigatures(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.UseStandardLigatures(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member UseStandardLigatures : Foundation.NSObject -&gt; unit&#xA;override this.UseStandardLigatures : Foundation.NSObject -&gt; unit" Usage="nSTextView.UseStandardLigatures sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("useStandardLigatures:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateMenuItem">
      <MemberSignature Language="C#" Value="public virtual bool ValidateMenuItem (AppKit.NSMenuItem menuItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ValidateMenuItem(class AppKit.NSMenuItem menuItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ValidateMenuItem(AppKit.NSMenuItem)" />
      <MemberSignature Language="F#" Value="abstract member ValidateMenuItem : AppKit.NSMenuItem -&gt; bool&#xA;override this.ValidateMenuItem : AppKit.NSMenuItem -&gt; bool" Usage="nSTextView.ValidateMenuItem menuItem" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSMenuItemValidation.ValidateMenuItem(AppKit.NSMenuItem)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("validateMenuItem:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuItem" Type="AppKit.NSMenuItem" />
      </Parameters>
      <Docs>
        <param name="menuItem">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateUserInterfaceItem">
      <MemberSignature Language="C#" Value="public virtual bool ValidateUserInterfaceItem (AppKit.INSValidatedUserInterfaceItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ValidateUserInterfaceItem(class AppKit.INSValidatedUserInterfaceItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ValidateUserInterfaceItem(AppKit.INSValidatedUserInterfaceItem)" />
      <MemberSignature Language="F#" Value="abstract member ValidateUserInterfaceItem : AppKit.INSValidatedUserInterfaceItem -&gt; bool&#xA;override this.ValidateUserInterfaceItem : AppKit.INSValidatedUserInterfaceItem -&gt; bool" Usage="nSTextView.ValidateUserInterfaceItem item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSUserInterfaceValidations.ValidateUserInterfaceItem(AppKit.INSValidatedUserInterfaceItem)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("validateUserInterfaceItem:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="AppKit.INSValidatedUserInterfaceItem" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidAttributesForMarkedText">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSString[] ValidAttributesForMarkedText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSString[] ValidAttributesForMarkedText" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.ValidAttributesForMarkedText" />
      <MemberSignature Language="F#" Value="member this.ValidAttributesForMarkedText : Foundation.NSString[]" Usage="AppKit.NSTextView.ValidAttributesForMarkedText" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:AppKit.INSTextInput.ValidAttributesForMarkedText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("validAttributesForMarkedText")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidRequestorForSendType">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject ValidRequestorForSendType (string sendType, string returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject ValidRequestorForSendType(string sendType, string returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.ValidRequestorForSendType(System.String,System.String)" />
      <MemberSignature Language="F#" Value="override this.ValidRequestorForSendType : string * string -&gt; Foundation.NSObject" Usage="nSTextView.ValidRequestorForSendType (sendType, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("validRequestorForSendType:returnType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sendType" Type="System.String" />
        <Parameter Name="returnType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sendType">To be added.</param>
        <param name="returnType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleCharacterRanges">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSArray VisibleCharacterRanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSArray VisibleCharacterRanges" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.VisibleCharacterRanges" />
      <MemberSignature Language="F#" Value="member this.VisibleCharacterRanges : Foundation.NSArray" Usage="AppKit.NSTextView.VisibleCharacterRanges" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:AppKit.INSTextFinderClient.VisibleCharacterRanges</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("visibleCharacterRanges", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakDelegate">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject WeakDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject WeakDelegate" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.WeakDelegate" />
      <MemberSignature Language="F#" Value="member this.WeakDelegate : Foundation.NSObject with get, set" Usage="AppKit.NSTextView.WeakDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("delegate", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDelegate:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeNotifyingTextViewNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString WillChangeNotifyingTextViewNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString WillChangeNotifyingTextViewNotification" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.WillChangeNotifyingTextViewNotification" />
      <MemberSignature Language="F#" Value="member this.WillChangeNotifyingTextViewNotification : Foundation.NSString" Usage="AppKit.NSTextView.WillChangeNotifyingTextViewNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use NSTextView.Notifications.ObserveWillChangeNotifyingTextView helper method instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Field("NSTextViewWillChangeNotifyingTextViewNotification", "AppKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeSelection">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewSelectionChange WillChangeSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewSelectionChange WillChangeSelection" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.WillChangeSelection" />
      <MemberSignature Language="F#" Value="member this.WillChangeSelection : AppKit.NSTextViewSelectionChange with get, set" Usage="AppKit.NSTextView.WillChangeSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewSelectionChange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeSelectionFromRanges">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewSelectionWillChange WillChangeSelectionFromRanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewSelectionWillChange WillChangeSelectionFromRanges" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.WillChangeSelectionFromRanges" />
      <MemberSignature Language="F#" Value="member this.WillChangeSelectionFromRanges : AppKit.NSTextViewSelectionWillChange with get, set" Usage="AppKit.NSTextView.WillChangeSelectionFromRanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewSelectionWillChange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillCheckText">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewOnTextCheck WillCheckText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewOnTextCheck WillCheckText" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.WillCheckText" />
      <MemberSignature Language="F#" Value="member this.WillCheckText : AppKit.NSTextViewOnTextCheck with get, set" Usage="AppKit.NSTextView.WillCheckText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewOnTextCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillDisplayToolTip">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewTooltip WillDisplayToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewTooltip WillDisplayToolTip" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.WillDisplayToolTip" />
      <MemberSignature Language="F#" Value="member this.WillDisplayToolTip : AppKit.NSTextViewTooltip with get, set" Usage="AppKit.NSTextView.WillDisplayToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewTooltip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowLevel">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSWindowLevel WindowLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSWindowLevel WindowLevel" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.WindowLevel" />
      <MemberSignature Language="F#" Value="member this.WindowLevel : AppKit.NSWindowLevel" Usage="AppKit.NSTextView.WindowLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("windowLevel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSWindowLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritablePasteboardTypes">
      <MemberSignature Language="C#" Value="public virtual string[] WritablePasteboardTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] WritablePasteboardTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.WritablePasteboardTypes" />
      <MemberSignature Language="F#" Value="abstract member WritablePasteboardTypes : unit -&gt; string[]&#xA;override this.WritablePasteboardTypes : unit -&gt; string[]" Usage="nSTextView.WritablePasteboardTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("writablePasteboardTypes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteCell">
      <MemberSignature Language="C#" Value="public AppKit.NSTextViewCellPasteboard WriteCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTextViewCellPasteboard WriteCell" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSTextView.WriteCell" />
      <MemberSignature Language="F#" Value="member this.WriteCell : AppKit.NSTextViewCellPasteboard with get, set" Usage="AppKit.NSTextView.WriteCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSTextViewCellPasteboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteSelectionToPasteboard">
      <MemberSignature Language="C#" Value="public virtual bool WriteSelectionToPasteboard (AppKit.NSPasteboard pboard, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WriteSelectionToPasteboard(class AppKit.NSPasteboard pboard, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.WriteSelectionToPasteboard(AppKit.NSPasteboard,System.String)" />
      <MemberSignature Language="F#" Value="abstract member WriteSelectionToPasteboard : AppKit.NSPasteboard * string -&gt; bool&#xA;override this.WriteSelectionToPasteboard : AppKit.NSPasteboard * string -&gt; bool" Usage="nSTextView.WriteSelectionToPasteboard (pboard, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("writeSelectionToPasteboard:type:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pboard" Type="AppKit.NSPasteboard" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pboard">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteSelectionToPasteboard">
      <MemberSignature Language="C#" Value="public virtual bool WriteSelectionToPasteboard (AppKit.NSPasteboard pboard, string[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WriteSelectionToPasteboard(class AppKit.NSPasteboard pboard, string[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSTextView.WriteSelectionToPasteboard(AppKit.NSPasteboard,System.String[])" />
      <MemberSignature Language="F#" Value="abstract member WriteSelectionToPasteboard : AppKit.NSPasteboard * string[] -&gt; bool&#xA;override this.WriteSelectionToPasteboard : AppKit.NSPasteboard * string[] -&gt; bool" Usage="nSTextView.WriteSelectionToPasteboard (pboard, types)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("writeSelectionToPasteboard:types:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pboard" Type="AppKit.NSPasteboard" />
        <Parameter Name="types" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="pboard">To be added.</param>
        <param name="types">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
