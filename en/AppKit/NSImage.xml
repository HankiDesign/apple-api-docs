<Type Name="NSImage" FullName="AppKit.NSImage">
  <TypeSignature Language="C#" Value="public class NSImage : Foundation.NSObject, AppKit.INSPasteboardReading, AppKit.INSPasteboardWriting, Foundation.INSCopying, Foundation.INSSecureCoding, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSImage extends Foundation.NSObject implements class AppKit.INSPasteboardReading, class AppKit.INSPasteboardWriting, class Foundation.INSCoding, class Foundation.INSCopying, class Foundation.INSSecureCoding, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSImage" />
  <TypeSignature Language="F#" Value="type NSImage = class&#xA;    inherit NSObject&#xA;    interface INSCoding&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSCopying&#xA;    interface INSPasteboardReading&#xA;    interface INSPasteboardWriting&#xA;    interface INSSecureCoding" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>AppKit.INSPasteboardReading</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>AppKit.INSPasteboardWriting</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSSecureCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSImage", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSImage (AppKit.NSPasteboard pasteboard);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class AppKit.NSPasteboard pasteboard) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.#ctor(AppKit.NSPasteboard)" />
      <MemberSignature Language="F#" Value="new AppKit.NSImage : AppKit.NSPasteboard -&gt; AppKit.NSImage" Usage="new AppKit.NSImage pasteboard" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithPasteboard:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pasteboard" Type="AppKit.NSPasteboard" />
      </Parameters>
      <Docs>
        <param name="pasteboard">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSImage (CoreGraphics.CGSize aSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype CoreGraphics.CGSize aSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.#ctor(CoreGraphics.CGSize)" />
      <MemberSignature Language="F#" Value="new AppKit.NSImage : CoreGraphics.CGSize -&gt; AppKit.NSImage" Usage="new AppKit.NSImage aSize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithSize:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="aSize" Type="CoreGraphics.CGSize" />
      </Parameters>
      <Docs>
        <param name="aSize">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSImage (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new AppKit.NSImage : Foundation.NSCoder -&gt; AppKit.NSImage" Usage="new AppKit.NSImage coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSImage (Foundation.NSData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.#ctor(Foundation.NSData)" />
      <MemberSignature Language="F#" Value="new AppKit.NSImage : Foundation.NSData -&gt; AppKit.NSImage" Usage="new AppKit.NSImage data" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithData:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSImage (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSImage : Foundation.NSObjectFlag -&gt; AppKit.NSImage" Usage="new AppKit.NSImage t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSImage (Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSUrl url) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.#ctor(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="new AppKit.NSImage : Foundation.NSUrl -&gt; AppKit.NSImage" Usage="new AppKit.NSImage url" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithContentsOfURL:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSImage (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSImage : nativeint -&gt; AppKit.NSImage" Usage="new AppKit.NSImage handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSImage (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new AppKit.NSImage : string -&gt; AppKit.NSImage" Usage="new AppKit.NSImage fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithContentsOfFile:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSImage (CoreGraphics.CGImage cgImage, CoreGraphics.CGSize size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class CoreGraphics.CGImage cgImage, valuetype CoreGraphics.CGSize size) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.#ctor(CoreGraphics.CGImage,CoreGraphics.CGSize)" />
      <MemberSignature Language="F#" Value="new AppKit.NSImage : CoreGraphics.CGImage * CoreGraphics.CGSize -&gt; AppKit.NSImage" Usage="new AppKit.NSImage (cgImage, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCGImage:size:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="cgImage" Type="CoreGraphics.CGImage" />
        <Parameter Name="size" Type="CoreGraphics.CGSize" />
      </Parameters>
      <Docs>
        <param name="cgImage">To be added.</param>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSImage (Foundation.NSData data, bool ignoresOrientation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSData data, bool ignoresOrientation) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.#ctor(Foundation.NSData,System.Boolean)" />
      <MemberSignature Language="F#" Value="new AppKit.NSImage : Foundation.NSData * bool -&gt; AppKit.NSImage" Usage="new AppKit.NSImage (data, ignoresOrientation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="Foundation.NSData" />
        <Parameter Name="ignoresOrientation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="ignoresOrientation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSImage (string fileName, bool lazy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, bool lazy) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="new AppKit.NSImage : string * bool -&gt; AppKit.NSImage" Usage="new AppKit.NSImage (fileName, lazy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="lazy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName">To be added.</param>
        <param name="lazy">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityDescription">
      <MemberSignature Language="C#" Value="public virtual string AccessibilityDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibilityDescription" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.AccessibilityDescription" />
      <MemberSignature Language="F#" Value="member this.AccessibilityDescription : string with get, set" Usage="AppKit.NSImage.AccessibilityDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("accessibilityDescription")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAccessibilityDescription:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRepresentation">
      <MemberSignature Language="C#" Value="public virtual void AddRepresentation (AppKit.NSImageRep imageRep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRepresentation(class AppKit.NSImageRep imageRep) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.AddRepresentation(AppKit.NSImageRep)" />
      <MemberSignature Language="F#" Value="abstract member AddRepresentation : AppKit.NSImageRep -&gt; unit&#xA;override this.AddRepresentation : AppKit.NSImageRep -&gt; unit" Usage="nSImage.AddRepresentation imageRep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("addRepresentation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageRep" Type="AppKit.NSImageRep" />
      </Parameters>
      <Docs>
        <param name="imageRep">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRepresentations">
      <MemberSignature Language="C#" Value="public virtual void AddRepresentations (AppKit.NSImageRep[] imageReps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRepresentations(class AppKit.NSImageRep[] imageReps) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.AddRepresentations(AppKit.NSImageRep[])" />
      <MemberSignature Language="F#" Value="abstract member AddRepresentations : AppKit.NSImageRep[] -&gt; unit&#xA;override this.AddRepresentations : AppKit.NSImageRep[] -&gt; unit" Usage="nSImage.AddRepresentations imageReps" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("addRepresentations:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageReps" Type="AppKit.NSImageRep[]" />
      </Parameters>
      <Docs>
        <param name="imageReps">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignmentRect">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect AlignmentRect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGRect AlignmentRect" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.AlignmentRect" />
      <MemberSignature Language="F#" Value="member this.AlignmentRect : CoreGraphics.CGRect with get, set" Usage="AppKit.NSImage.AlignmentRect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("alignmentRect")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAlignmentRect:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsCGImage">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGImage AsCGImage (ref CoreGraphics.CGRect proposedDestRect, AppKit.NSGraphicsContext referenceContext, Foundation.NSDictionary hints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class CoreGraphics.CGImage AsCGImage(valuetype CoreGraphics.CGRect&amp; proposedDestRect, class AppKit.NSGraphicsContext referenceContext, class Foundation.NSDictionary hints) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.AsCGImage(CoreGraphics.CGRect@,AppKit.NSGraphicsContext,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="abstract member AsCGImage :  * AppKit.NSGraphicsContext * Foundation.NSDictionary -&gt; CoreGraphics.CGImage&#xA;override this.AsCGImage :  * AppKit.NSGraphicsContext * Foundation.NSDictionary -&gt; CoreGraphics.CGImage" Usage="nSImage.AsCGImage (proposedDestRect, referenceContext, hints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("CGImageForProposedRect:context:hints:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proposedDestRect" Type="CoreGraphics.CGRect" RefType="ref" />
        <Parameter Name="referenceContext" Type="AppKit.NSGraphicsContext" />
        <Parameter Name="hints" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="proposedDestRect">To be added.</param>
        <param name="referenceContext">To be added.</param>
        <param name="hints">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsTiff">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSData AsTiff ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSData AsTiff() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.AsTiff" />
      <MemberSignature Language="F#" Value="abstract member AsTiff : unit -&gt; Foundation.NSData&#xA;override this.AsTiff : unit -&gt; Foundation.NSData" Usage="nSImage.AsTiff " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("TIFFRepresentation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsTiff">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSData AsTiff (AppKit.NSTiffCompression comp, float aFloat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSData AsTiff(valuetype AppKit.NSTiffCompression comp, float32 aFloat) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.AsTiff(AppKit.NSTiffCompression,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member AsTiff : AppKit.NSTiffCompression * single -&gt; Foundation.NSData&#xA;override this.AsTiff : AppKit.NSTiffCompression * single -&gt; Foundation.NSData" Usage="nSImage.AsTiff (comp, aFloat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("TIFFRepresentationUsingCompression:factor:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="AppKit.NSTiffCompression" />
        <Parameter Name="aFloat" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="comp">To be added.</param>
        <param name="aFloat">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSColor BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSColor BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.BackgroundColor" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : AppKit.NSColor with get, set" Usage="AppKit.NSImage.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("backgroundColor", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setBackgroundColor:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BestRepresentation">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSImageRep BestRepresentation (CoreGraphics.CGRect rect, AppKit.NSGraphicsContext referenceContext, Foundation.NSDictionary hints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSImageRep BestRepresentation(valuetype CoreGraphics.CGRect rect, class AppKit.NSGraphicsContext referenceContext, class Foundation.NSDictionary hints) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.BestRepresentation(CoreGraphics.CGRect,AppKit.NSGraphicsContext,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="abstract member BestRepresentation : CoreGraphics.CGRect * AppKit.NSGraphicsContext * Foundation.NSDictionary -&gt; AppKit.NSImageRep&#xA;override this.BestRepresentation : CoreGraphics.CGRect * AppKit.NSGraphicsContext * Foundation.NSDictionary -&gt; AppKit.NSImageRep" Usage="nSImage.BestRepresentation (rect, referenceContext, hints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("bestRepresentationForRect:context:hints:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSImageRep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
        <Parameter Name="referenceContext" Type="AppKit.NSGraphicsContext" />
        <Parameter Name="hints" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="referenceContext">To be added.</param>
        <param name="hints">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BestRepresentationForDevice">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSImageRep BestRepresentationForDevice (Foundation.NSDictionary deviceDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSImageRep BestRepresentationForDevice(class Foundation.NSDictionary deviceDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.BestRepresentationForDevice(Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="abstract member BestRepresentationForDevice : Foundation.NSDictionary -&gt; AppKit.NSImageRep&#xA;override this.BestRepresentationForDevice : Foundation.NSDictionary -&gt; AppKit.NSImageRep" Usage="nSImage.BestRepresentationForDevice deviceDescription" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("bestRepresentationForDevice:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSImageRep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceDescription" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="deviceDescription">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMode">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSImageCacheMode CacheMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSImageCacheMode CacheMode" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.CacheMode" />
      <MemberSignature Language="F#" Value="member this.CacheMode : AppKit.NSImageCacheMode with get, set" Usage="AppKit.NSImage.CacheMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("cacheMode")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setCacheMode:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSImageCacheMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelIncrementalLoad">
      <MemberSignature Language="C#" Value="public virtual void CancelIncrementalLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelIncrementalLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.CancelIncrementalLoad" />
      <MemberSignature Language="F#" Value="abstract member CancelIncrementalLoad : unit -&gt; unit&#xA;override this.CancelIncrementalLoad : unit -&gt; unit" Usage="nSImage.CancelIncrementalLoad " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("cancelIncrementalLoad")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInitWithPasteboard">
      <MemberSignature Language="C#" Value="public static bool CanInitWithPasteboard (AppKit.NSPasteboard pasteboard);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanInitWithPasteboard(class AppKit.NSPasteboard pasteboard) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.CanInitWithPasteboard(AppKit.NSPasteboard)" />
      <MemberSignature Language="F#" Value="static member CanInitWithPasteboard : AppKit.NSPasteboard -&gt; bool" Usage="AppKit.NSImage.CanInitWithPasteboard pasteboard" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("canInitWithPasteboard:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pasteboard" Type="AppKit.NSPasteboard" />
      </Parameters>
      <Docs>
        <param name="pasteboard">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CapInsets">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSEdgeInsets CapInsets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSEdgeInsets CapInsets" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.CapInsets" />
      <MemberSignature Language="F#" Value="member this.CapInsets : AppKit.NSEdgeInsets with get, set" Usage="AppKit.NSImage.CapInsets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("capInsets")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setCapInsets:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSEdgeInsets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CGImage">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGImage CGImage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CoreGraphics.CGImage CGImage" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.CGImage" />
      <MemberSignature Language="F#" Value="member this.CGImage : CoreGraphics.CGImage" Usage="AppKit.NSImage.CGImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AppKit.NSImage.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Copy (Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject Copy(class Foundation.NSZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.Copy(Foundation.NSZone)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSZone -&gt; Foundation.NSObject" Usage="nSImage.Copy zone" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCopying.Copy(Foundation.NSZone)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegate">
      <MemberSignature Language="C#" Value="public AppKit.INSImageDelegate Delegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.INSImageDelegate Delegate" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.Delegate" />
      <MemberSignature Language="F#" Value="member this.Delegate : AppKit.INSImageDelegate with get, set" Usage="AppKit.NSImage.Delegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.INSImageDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidLoadPartOfRepresentation">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;AppKit.NSImagePartialEventArgs&gt; DidLoadPartOfRepresentation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class AppKit.NSImagePartialEventArgs&gt; DidLoadPartOfRepresentation" />
      <MemberSignature Language="DocId" Value="E:AppKit.NSImage.DidLoadPartOfRepresentation" />
      <MemberSignature Language="F#" Value="member this.DidLoadPartOfRepresentation : EventHandler&lt;AppKit.NSImagePartialEventArgs&gt; " Usage="member this.DidLoadPartOfRepresentation : System.EventHandler&lt;AppKit.NSImagePartialEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;AppKit.NSImagePartialEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidLoadRepresentation">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;AppKit.NSImageLoadRepresentationEventArgs&gt; DidLoadRepresentation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class AppKit.NSImageLoadRepresentationEventArgs&gt; DidLoadRepresentation" />
      <MemberSignature Language="DocId" Value="E:AppKit.NSImage.DidLoadRepresentation" />
      <MemberSignature Language="F#" Value="member this.DidLoadRepresentation : EventHandler&lt;AppKit.NSImageLoadRepresentationEventArgs&gt; " Usage="member this.DidLoadRepresentation : System.EventHandler&lt;AppKit.NSImageLoadRepresentationEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;AppKit.NSImageLoadRepresentationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidLoadRepresentationHeader">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;AppKit.NSImageLoadEventArgs&gt; DidLoadRepresentationHeader;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class AppKit.NSImageLoadEventArgs&gt; DidLoadRepresentationHeader" />
      <MemberSignature Language="DocId" Value="E:AppKit.NSImage.DidLoadRepresentationHeader" />
      <MemberSignature Language="F#" Value="member this.DidLoadRepresentationHeader : EventHandler&lt;AppKit.NSImageLoadEventArgs&gt; " Usage="member this.DidLoadRepresentationHeader : System.EventHandler&lt;AppKit.NSImageLoadEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;AppKit.NSImageLoadEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="nSImage.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public virtual void Draw (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.Draw(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member Draw : CoreGraphics.CGRect -&gt; unit&#xA;override this.Draw : CoreGraphics.CGRect -&gt; unit" Usage="nSImage.Draw rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawInRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public virtual bool Draw (AppKit.NSImageRep imageRep, CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Draw(class AppKit.NSImageRep imageRep, valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.Draw(AppKit.NSImageRep,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member Draw : AppKit.NSImageRep * CoreGraphics.CGRect -&gt; bool&#xA;override this.Draw : AppKit.NSImageRep * CoreGraphics.CGRect -&gt; bool" Usage="nSImage.Draw (imageRep, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawRepresentation:inRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageRep" Type="AppKit.NSImageRep" />
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="imageRep">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public virtual void Draw (CoreGraphics.CGPoint point, CoreGraphics.CGRect fromRect, AppKit.NSCompositingOperation op, nfloat delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(valuetype CoreGraphics.CGPoint point, valuetype CoreGraphics.CGRect fromRect, valuetype AppKit.NSCompositingOperation op, valuetype System.nfloat delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.Draw(CoreGraphics.CGPoint,CoreGraphics.CGRect,AppKit.NSCompositingOperation,System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member Draw : CoreGraphics.CGPoint * CoreGraphics.CGRect * AppKit.NSCompositingOperation * nfloat -&gt; unit&#xA;override this.Draw : CoreGraphics.CGPoint * CoreGraphics.CGRect * AppKit.NSCompositingOperation * nfloat -&gt; unit" Usage="nSImage.Draw (point, fromRect, op, delta)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawAtPoint:fromRect:operation:fraction:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
        <Parameter Name="fromRect" Type="CoreGraphics.CGRect" />
        <Parameter Name="op" Type="AppKit.NSCompositingOperation" />
        <Parameter Name="delta" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <param name="fromRect">To be added.</param>
        <param name="op">To be added.</param>
        <param name="delta">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public virtual void Draw (CoreGraphics.CGRect rect, CoreGraphics.CGRect fromRect, AppKit.NSCompositingOperation op, nfloat delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(valuetype CoreGraphics.CGRect rect, valuetype CoreGraphics.CGRect fromRect, valuetype AppKit.NSCompositingOperation op, valuetype System.nfloat delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.Draw(CoreGraphics.CGRect,CoreGraphics.CGRect,AppKit.NSCompositingOperation,System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member Draw : CoreGraphics.CGRect * CoreGraphics.CGRect * AppKit.NSCompositingOperation * nfloat -&gt; unit&#xA;override this.Draw : CoreGraphics.CGRect * CoreGraphics.CGRect * AppKit.NSCompositingOperation * nfloat -&gt; unit" Usage="nSImage.Draw (rect, fromRect, op, delta)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawInRect:fromRect:operation:fraction:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
        <Parameter Name="fromRect" Type="CoreGraphics.CGRect" />
        <Parameter Name="op" Type="AppKit.NSCompositingOperation" />
        <Parameter Name="delta" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="fromRect">To be added.</param>
        <param name="op">To be added.</param>
        <param name="delta">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public virtual void Draw (CoreGraphics.CGRect dstSpacePortionRect, CoreGraphics.CGRect srcSpacePortionRect, AppKit.NSCompositingOperation op, nfloat requestedAlpha, bool respectContextIsFlipped, Foundation.NSDictionary hints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(valuetype CoreGraphics.CGRect dstSpacePortionRect, valuetype CoreGraphics.CGRect srcSpacePortionRect, valuetype AppKit.NSCompositingOperation op, valuetype System.nfloat requestedAlpha, bool respectContextIsFlipped, class Foundation.NSDictionary hints) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.Draw(CoreGraphics.CGRect,CoreGraphics.CGRect,AppKit.NSCompositingOperation,System.nfloat,System.Boolean,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="abstract member Draw : CoreGraphics.CGRect * CoreGraphics.CGRect * AppKit.NSCompositingOperation * nfloat * bool * Foundation.NSDictionary -&gt; unit&#xA;override this.Draw : CoreGraphics.CGRect * CoreGraphics.CGRect * AppKit.NSCompositingOperation * nfloat * bool * Foundation.NSDictionary -&gt; unit" Usage="nSImage.Draw (dstSpacePortionRect, srcSpacePortionRect, op, requestedAlpha, respectContextIsFlipped, hints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("drawInRect:fromRect:operation:fraction:respectFlipped:hints:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dstSpacePortionRect" Type="CoreGraphics.CGRect" />
        <Parameter Name="srcSpacePortionRect" Type="CoreGraphics.CGRect" />
        <Parameter Name="op" Type="AppKit.NSCompositingOperation" />
        <Parameter Name="requestedAlpha" Type="System.nfloat" />
        <Parameter Name="respectContextIsFlipped" Type="System.Boolean" />
        <Parameter Name="hints" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="dstSpacePortionRect">To be added.</param>
        <param name="srcSpacePortionRect">To be added.</param>
        <param name="op">To be added.</param>
        <param name="requestedAlpha">To be added.</param>
        <param name="respectContextIsFlipped">To be added.</param>
        <param name="hints">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawInRect">
      <MemberSignature Language="C#" Value="public void DrawInRect (CoreGraphics.CGRect dstRect, CoreGraphics.CGRect srcRect, AppKit.NSCompositingOperation operation, nfloat delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawInRect(valuetype CoreGraphics.CGRect dstRect, valuetype CoreGraphics.CGRect srcRect, valuetype AppKit.NSCompositingOperation operation, valuetype System.nfloat delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.DrawInRect(CoreGraphics.CGRect,CoreGraphics.CGRect,AppKit.NSCompositingOperation,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.DrawInRect : CoreGraphics.CGRect * CoreGraphics.CGRect * AppKit.NSCompositingOperation * nfloat -&gt; unit" Usage="nSImage.DrawInRect (dstRect, srcRect, operation, delta)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dstRect" Type="CoreGraphics.CGRect" />
        <Parameter Name="srcRect" Type="CoreGraphics.CGRect" />
        <Parameter Name="operation" Type="AppKit.NSCompositingOperation" />
        <Parameter Name="delta" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="dstRect">To be added.</param>
        <param name="srcRect">To be added.</param>
        <param name="operation">To be added.</param>
        <param name="delta">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeTo">
      <MemberSignature Language="C#" Value="public virtual void EncodeTo (Foundation.NSCoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeTo(class Foundation.NSCoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.EncodeTo(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member EncodeTo : Foundation.NSCoder -&gt; unit&#xA;override this.EncodeTo : Foundation.NSCoder -&gt; unit" Usage="nSImage.EncodeTo encoder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCoding.EncodeTo(Foundation.NSCoder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="encoder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flipped">
      <MemberSignature Language="C#" Value="public virtual bool Flipped { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Flipped" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.Flipped" />
      <MemberSignature Language="F#" Value="member this.Flipped : bool with get, set" Usage="AppKit.NSImage.Flipped" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 6, ObjCRuntime.PlatformArchitecture.All, "Use DrawInRect with respectContextIsFlipped instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isFlipped")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 6, ObjCRuntime.PlatformArchitecture.All, "Use DrawInRect with respectContextIsFlipped instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setFlipped:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 6, ObjCRuntime.PlatformArchitecture.All, "Use DrawInRect with respectContextIsFlipped instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromStream">
      <MemberSignature Language="C#" Value="public static AppKit.NSImage FromStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSImage FromStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.FromStream(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="static member FromStream : System.IO.Stream -&gt; AppKit.NSImage" Usage="AppKit.NSImage.FromStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLayerContentsForContentsScale">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject GetLayerContentsForContentsScale (nfloat layerContentsScale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject GetLayerContentsForContentsScale(valuetype System.nfloat layerContentsScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.GetLayerContentsForContentsScale(System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member GetLayerContentsForContentsScale : nfloat -&gt; Foundation.NSObject&#xA;override this.GetLayerContentsForContentsScale : nfloat -&gt; Foundation.NSObject" Usage="nSImage.GetLayerContentsForContentsScale layerContentsScale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("layerContentsForContentsScale:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layerContentsScale" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="layerContentsScale">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPasteboardPropertyListForType">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject GetPasteboardPropertyListForType (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject GetPasteboardPropertyListForType(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.GetPasteboardPropertyListForType(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetPasteboardPropertyListForType : string -&gt; Foundation.NSObject&#xA;override this.GetPasteboardPropertyListForType : string -&gt; Foundation.NSObject" Usage="nSImage.GetPasteboardPropertyListForType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pasteboardPropertyListForType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReadableTypesForPasteboard">
      <MemberSignature Language="C#" Value="public static string[] GetReadableTypesForPasteboard (AppKit.NSPasteboard pasteboard);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetReadableTypesForPasteboard(class AppKit.NSPasteboard pasteboard) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.GetReadableTypesForPasteboard(AppKit.NSPasteboard)" />
      <MemberSignature Language="F#" Value="static member GetReadableTypesForPasteboard : AppKit.NSPasteboard -&gt; string[]" Usage="AppKit.NSImage.GetReadableTypesForPasteboard pasteboard" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("readableTypesForPasteboard:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pasteboard" Type="AppKit.NSPasteboard" />
      </Parameters>
      <Docs>
        <param name="pasteboard">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReadingOptionsForType">
      <MemberSignature Language="C#" Value="public static AppKit.NSPasteboardReadingOptions GetReadingOptionsForType (string type, AppKit.NSPasteboard pasteboard);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype AppKit.NSPasteboardReadingOptions GetReadingOptionsForType(string type, class AppKit.NSPasteboard pasteboard) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.GetReadingOptionsForType(System.String,AppKit.NSPasteboard)" />
      <MemberSignature Language="F#" Value="static member GetReadingOptionsForType : string * AppKit.NSPasteboard -&gt; AppKit.NSPasteboardReadingOptions" Usage="AppKit.NSImage.GetReadingOptionsForType (type, pasteboard)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("readingOptionsForType:pasteboard:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSPasteboardReadingOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="pasteboard" Type="AppKit.NSPasteboard" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="pasteboard">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecommendedLayerContentsScale">
      <MemberSignature Language="C#" Value="public virtual nfloat GetRecommendedLayerContentsScale (nfloat preferredContentsScale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetRecommendedLayerContentsScale(valuetype System.nfloat preferredContentsScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.GetRecommendedLayerContentsScale(System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member GetRecommendedLayerContentsScale : nfloat -&gt; nfloat&#xA;override this.GetRecommendedLayerContentsScale : nfloat -&gt; nfloat" Usage="nSImage.GetRecommendedLayerContentsScale preferredContentsScale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("recommendedLayerContentsScale:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preferredContentsScale" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="preferredContentsScale">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWritableTypesForPasteboard">
      <MemberSignature Language="C#" Value="public virtual string[] GetWritableTypesForPasteboard (AppKit.NSPasteboard pasteboard);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetWritableTypesForPasteboard(class AppKit.NSPasteboard pasteboard) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.GetWritableTypesForPasteboard(AppKit.NSPasteboard)" />
      <MemberSignature Language="F#" Value="abstract member GetWritableTypesForPasteboard : AppKit.NSPasteboard -&gt; string[]&#xA;override this.GetWritableTypesForPasteboard : AppKit.NSPasteboard -&gt; string[]" Usage="nSImage.GetWritableTypesForPasteboard pasteboard" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("writableTypesForPasteboard:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pasteboard" Type="AppKit.NSPasteboard" />
      </Parameters>
      <Docs>
        <param name="pasteboard">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWritingOptionsForType">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSPasteboardWritingOptions GetWritingOptionsForType (string type, AppKit.NSPasteboard pasteboard);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AppKit.NSPasteboardWritingOptions GetWritingOptionsForType(string type, class AppKit.NSPasteboard pasteboard) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.GetWritingOptionsForType(System.String,AppKit.NSPasteboard)" />
      <MemberSignature Language="F#" Value="abstract member GetWritingOptionsForType : string * AppKit.NSPasteboard -&gt; AppKit.NSPasteboardWritingOptions&#xA;override this.GetWritingOptionsForType : string * AppKit.NSPasteboard -&gt; AppKit.NSPasteboardWritingOptions" Usage="nSImage.GetWritingOptionsForType (type, pasteboard)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("writingOptionsForType:pasteboard:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSPasteboardWritingOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="pasteboard" Type="AppKit.NSPasteboard" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="pasteboard">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestRect">
      <MemberSignature Language="C#" Value="public virtual bool HitTestRect (CoreGraphics.CGRect testRectDestSpace, CoreGraphics.CGRect imageRectDestSpace, AppKit.NSGraphicsContext context, Foundation.NSDictionary hints, bool flipped);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HitTestRect(valuetype CoreGraphics.CGRect testRectDestSpace, valuetype CoreGraphics.CGRect imageRectDestSpace, class AppKit.NSGraphicsContext context, class Foundation.NSDictionary hints, bool flipped) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.HitTestRect(CoreGraphics.CGRect,CoreGraphics.CGRect,AppKit.NSGraphicsContext,Foundation.NSDictionary,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member HitTestRect : CoreGraphics.CGRect * CoreGraphics.CGRect * AppKit.NSGraphicsContext * Foundation.NSDictionary * bool -&gt; bool&#xA;override this.HitTestRect : CoreGraphics.CGRect * CoreGraphics.CGRect * AppKit.NSGraphicsContext * Foundation.NSDictionary * bool -&gt; bool" Usage="nSImage.HitTestRect (testRectDestSpace, imageRectDestSpace, context, hints, flipped)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("hitTestRect:withImageDestinationRect:context:hints:flipped:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="testRectDestSpace" Type="CoreGraphics.CGRect" />
        <Parameter Name="imageRectDestSpace" Type="CoreGraphics.CGRect" />
        <Parameter Name="context" Type="AppKit.NSGraphicsContext" />
        <Parameter Name="hints" Type="Foundation.NSDictionary" />
        <Parameter Name="flipped" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="testRectDestSpace">To be added.</param>
        <param name="imageRectDestSpace">To be added.</param>
        <param name="context">To be added.</param>
        <param name="hints">To be added.</param>
        <param name="flipped">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageDidNotDraw">
      <MemberSignature Language="C#" Value="public AppKit.NSImageRect ImageDidNotDraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSImageRect ImageDidNotDraw" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.ImageDidNotDraw" />
      <MemberSignature Language="F#" Value="member this.ImageDidNotDraw : AppKit.NSImageRect with get, set" Usage="AppKit.NSImage.ImageDidNotDraw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSImageRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageFileTypes">
      <MemberSignature Language="C#" Value="public static string[] ImageFileTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string[] ImageFileTypes" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.ImageFileTypes" />
      <MemberSignature Language="F#" Value="member this.ImageFileTypes : string[]" Usage="AppKit.NSImage.ImageFileTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("imageFileTypes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageNamed">
      <MemberSignature Language="C#" Value="public static AppKit.NSImage ImageNamed (AppKit.NSImageName name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSImage ImageNamed(valuetype AppKit.NSImageName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.ImageNamed(AppKit.NSImageName)" />
      <MemberSignature Language="F#" Value="static member ImageNamed : AppKit.NSImageName -&gt; AppKit.NSImage" Usage="AppKit.NSImage.ImageNamed name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="AppKit.NSImageName" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageNamed">
      <MemberSignature Language="C#" Value="public static AppKit.NSImage ImageNamed (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSImage ImageNamed(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.ImageNamed(System.String)" />
      <MemberSignature Language="F#" Value="static member ImageNamed : string -&gt; AppKit.NSImage" Usage="AppKit.NSImage.ImageNamed name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("imageNamed:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImagePasteboardTypes">
      <MemberSignature Language="C#" Value="public static string[] ImagePasteboardTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string[] ImagePasteboardTypes" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.ImagePasteboardTypes" />
      <MemberSignature Language="F#" Value="member this.ImagePasteboardTypes : string[]" Usage="AppKit.NSImage.ImagePasteboardTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("imagePasteboardTypes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageTypes">
      <MemberSignature Language="C#" Value="public static string[] ImageTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string[] ImageTypes" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.ImageTypes" />
      <MemberSignature Language="F#" Value="member this.ImageTypes : string[]" Usage="AppKit.NSImage.ImageTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("imageTypes", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageUnfilteredFileTypes">
      <MemberSignature Language="C#" Value="public static Foundation.NSObject[] ImageUnfilteredFileTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSObject[] ImageUnfilteredFileTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.ImageUnfilteredFileTypes" />
      <MemberSignature Language="F#" Value="static member ImageUnfilteredFileTypes : unit -&gt; Foundation.NSObject[]" Usage="AppKit.NSImage.ImageUnfilteredFileTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("imageUnfilteredFileTypes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageUnfilteredPasteboardTypes">
      <MemberSignature Language="C#" Value="public static string[] ImageUnfilteredPasteboardTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] ImageUnfilteredPasteboardTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.ImageUnfilteredPasteboardTypes" />
      <MemberSignature Language="F#" Value="static member ImageUnfilteredPasteboardTypes : unit -&gt; string[]" Usage="AppKit.NSImage.ImageUnfilteredPasteboardTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("imageUnfilteredPasteboardTypes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageUnfilteredTypes">
      <MemberSignature Language="C#" Value="public static string[] ImageUnfilteredTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string[] ImageUnfilteredTypes" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.ImageUnfilteredTypes" />
      <MemberSignature Language="F#" Value="member this.ImageUnfilteredTypes : string[]" Usage="AppKit.NSImage.ImageUnfilteredTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("imageUnfilteredTypes", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageWithSize">
      <MemberSignature Language="C#" Value="public static AppKit.NSImage ImageWithSize (CoreGraphics.CGSize size, bool flipped, AppKit.NSCustomImageRepDrawingHandler drawingHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSImage ImageWithSize(valuetype CoreGraphics.CGSize size, bool flipped, class AppKit.NSCustomImageRepDrawingHandler drawingHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.ImageWithSize(CoreGraphics.CGSize,System.Boolean,AppKit.NSCustomImageRepDrawingHandler)" />
      <MemberSignature Language="F#" Value="static member ImageWithSize : CoreGraphics.CGSize * bool * AppKit.NSCustomImageRepDrawingHandler -&gt; AppKit.NSImage" Usage="AppKit.NSImage.ImageWithSize (size, flipped, drawingHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("imageWithSize:flipped:drawingHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="CoreGraphics.CGSize" />
        <Parameter Name="flipped" Type="System.Boolean" />
        <Parameter Name="drawingHandler" Type="AppKit.NSCustomImageRepDrawingHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNSCustomImageRepDrawingHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <param name="flipped">To be added.</param>
        <param name="drawingHandler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitWithPasteboardPropertyList">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject InitWithPasteboardPropertyList (Foundation.NSObject propertyList, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject InitWithPasteboardPropertyList(class Foundation.NSObject propertyList, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.InitWithPasteboardPropertyList(Foundation.NSObject,System.String)" />
      <MemberSignature Language="F#" Value="abstract member InitWithPasteboardPropertyList : Foundation.NSObject * string -&gt; Foundation.NSObject&#xA;override this.InitWithPasteboardPropertyList : Foundation.NSObject * string -&gt; Foundation.NSObject" Usage="nSImage.InitWithPasteboardPropertyList (propertyList, type)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSPasteboardReading.InitWithPasteboardPropertyList(Foundation.NSObject,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("xamarinselector:removed:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("It will never be called.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyList" Type="Foundation.NSObject" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyList">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.IsValid" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="AppKit.NSImage.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isValid")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockFocus">
      <MemberSignature Language="C#" Value="public virtual void LockFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.LockFocus" />
      <MemberSignature Language="F#" Value="abstract member LockFocus : unit -&gt; unit&#xA;override this.LockFocus : unit -&gt; unit" Usage="nSImage.LockFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("lockFocus")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockFocusFlipped">
      <MemberSignature Language="C#" Value="public virtual void LockFocusFlipped (bool flipped);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockFocusFlipped(bool flipped) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.LockFocusFlipped(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member LockFocusFlipped : bool -&gt; unit&#xA;override this.LockFocusFlipped : bool -&gt; unit" Usage="nSImage.LockFocusFlipped flipped" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("lockFocusFlipped:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flipped" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flipped">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesOnlyOnBestFittingAxis">
      <MemberSignature Language="C#" Value="public virtual bool MatchesOnlyOnBestFittingAxis { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchesOnlyOnBestFittingAxis" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.MatchesOnlyOnBestFittingAxis" />
      <MemberSignature Language="F#" Value="member this.MatchesOnlyOnBestFittingAxis : bool with get, set" Usage="AppKit.NSImage.MatchesOnlyOnBestFittingAxis" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("matchesOnlyOnBestFittingAxis")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMatchesOnlyOnBestFittingAxis:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesOnMultipleResolution">
      <MemberSignature Language="C#" Value="public virtual bool MatchesOnMultipleResolution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchesOnMultipleResolution" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.MatchesOnMultipleResolution" />
      <MemberSignature Language="F#" Value="member this.MatchesOnMultipleResolution : bool with get, set" Usage="AppKit.NSImage.MatchesOnMultipleResolution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("matchesOnMultipleResolution")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMatchesOnMultipleResolution:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="AppKit.NSImage.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefersColorMatch">
      <MemberSignature Language="C#" Value="public virtual bool PrefersColorMatch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrefersColorMatch" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.PrefersColorMatch" />
      <MemberSignature Language="F#" Value="member this.PrefersColorMatch : bool with get, set" Usage="AppKit.NSImage.PrefersColorMatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("prefersColorMatch")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setPrefersColorMatch:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Recache">
      <MemberSignature Language="C#" Value="public virtual void Recache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Recache() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.Recache" />
      <MemberSignature Language="F#" Value="abstract member Recache : unit -&gt; unit&#xA;override this.Recache : unit -&gt; unit" Usage="nSImage.Recache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("recache")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRepresentation">
      <MemberSignature Language="C#" Value="public virtual void RemoveRepresentation (AppKit.NSImageRep imageRep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRepresentation(class AppKit.NSImageRep imageRep) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.RemoveRepresentation(AppKit.NSImageRep)" />
      <MemberSignature Language="F#" Value="abstract member RemoveRepresentation : AppKit.NSImageRep -&gt; unit&#xA;override this.RemoveRepresentation : AppKit.NSImageRep -&gt; unit" Usage="nSImage.RemoveRepresentation imageRep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("removeRepresentation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageRep" Type="AppKit.NSImageRep" />
      </Parameters>
      <Docs>
        <param name="imageRep">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Representations">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSImageRep[] Representations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSImageRep[] Representations() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.Representations" />
      <MemberSignature Language="F#" Value="abstract member Representations : unit -&gt; AppKit.NSImageRep[]&#xA;override this.Representations : unit -&gt; AppKit.NSImageRep[]" Usage="nSImage.Representations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("representations")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSImageRep[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizingMode">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSImageResizingMode ResizingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AppKit.NSImageResizingMode ResizingMode" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.ResizingMode" />
      <MemberSignature Language="F#" Value="member this.ResizingMode : AppKit.NSImageResizingMode with get, set" Usage="AppKit.NSImage.ResizingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("resizingMode")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setResizingMode:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSImageResizingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGSize Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGSize Size" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.Size" />
      <MemberSignature Language="F#" Value="member this.Size : CoreGraphics.CGSize with get, set" Usage="AppKit.NSImage.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("size")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setSize:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Template">
      <MemberSignature Language="C#" Value="public virtual bool Template { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Template" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.Template" />
      <MemberSignature Language="F#" Value="member this.Template : bool with get, set" Usage="AppKit.NSImage.Template" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isTemplate")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTemplate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockFocus">
      <MemberSignature Language="C#" Value="public virtual void UnlockFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnlockFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSImage.UnlockFocus" />
      <MemberSignature Language="F#" Value="abstract member UnlockFocus : unit -&gt; unit&#xA;override this.UnlockFocus : unit -&gt; unit" Usage="nSImage.UnlockFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("unlockFocus")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesEpsOnResolutionMismatch">
      <MemberSignature Language="C#" Value="public virtual bool UsesEpsOnResolutionMismatch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesEpsOnResolutionMismatch" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.UsesEpsOnResolutionMismatch" />
      <MemberSignature Language="F#" Value="member this.UsesEpsOnResolutionMismatch : bool with get, set" Usage="AppKit.NSImage.UsesEpsOnResolutionMismatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("usesEPSOnResolutionMismatch")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setUsesEPSOnResolutionMismatch:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakDelegate">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject WeakDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject WeakDelegate" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSImage.WeakDelegate" />
      <MemberSignature Language="F#" Value="member this.WeakDelegate : Foundation.NSObject with get, set" Usage="AppKit.NSImage.WeakDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("delegate", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDelegate:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillLoadRepresentation">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;AppKit.NSImageLoadEventArgs&gt; WillLoadRepresentation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class AppKit.NSImageLoadEventArgs&gt; WillLoadRepresentation" />
      <MemberSignature Language="DocId" Value="E:AppKit.NSImage.WillLoadRepresentation" />
      <MemberSignature Language="F#" Value="member this.WillLoadRepresentation : EventHandler&lt;AppKit.NSImageLoadEventArgs&gt; " Usage="member this.WillLoadRepresentation : System.EventHandler&lt;AppKit.NSImageLoadEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;AppKit.NSImageLoadEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
