<Type Name="NSCollectionViewDelegateFlowLayout" FullName="AppKit.NSCollectionViewDelegateFlowLayout">
  <TypeSignature Language="C#" Value="public class NSCollectionViewDelegateFlowLayout : Foundation.NSObject, AppKit.INSCollectionViewDelegateFlowLayout, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSCollectionViewDelegateFlowLayout extends Foundation.NSObject implements class AppKit.INSCollectionViewDelegate, class AppKit.INSCollectionViewDelegateFlowLayout, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSCollectionViewDelegateFlowLayout" />
  <TypeSignature Language="F#" Value="type NSCollectionViewDelegateFlowLayout = class&#xA;    inherit NSObject&#xA;    interface INSCollectionViewDelegateFlowLayout&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSCollectionViewDelegate" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>AppKit.INSCollectionViewDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>AppKit.INSCollectionViewDelegateFlowLayout</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Register("NSCollectionViewDelegateFlowLayout", false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSCollectionViewDelegateFlowLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSCollectionViewDelegateFlowLayout (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSCollectionViewDelegateFlowLayout : Foundation.NSObjectFlag -&gt; AppKit.NSCollectionViewDelegateFlowLayout" Usage="new AppKit.NSCollectionViewDelegateFlowLayout t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSCollectionViewDelegateFlowLayout (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSCollectionViewDelegateFlowLayout : nativeint -&gt; AppKit.NSCollectionViewDelegateFlowLayout" Usage="new AppKit.NSCollectionViewDelegateFlowLayout handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptDrop">
      <MemberSignature Language="C#" Value="public virtual bool AcceptDrop (AppKit.NSCollectionView collectionView, AppKit.NSDraggingInfo draggingInfo, Foundation.NSIndexPath indexPath, AppKit.NSCollectionViewDropOperation dropOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AcceptDrop(class AppKit.NSCollectionView collectionView, class AppKit.NSDraggingInfo draggingInfo, class Foundation.NSIndexPath indexPath, valuetype AppKit.NSCollectionViewDropOperation dropOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.AcceptDrop(AppKit.NSCollectionView,AppKit.NSDraggingInfo,Foundation.NSIndexPath,AppKit.NSCollectionViewDropOperation)" />
      <MemberSignature Language="F#" Value="abstract member AcceptDrop : AppKit.NSCollectionView * AppKit.NSDraggingInfo * Foundation.NSIndexPath * AppKit.NSCollectionViewDropOperation -&gt; bool&#xA;override this.AcceptDrop : AppKit.NSCollectionView * AppKit.NSDraggingInfo * Foundation.NSIndexPath * AppKit.NSCollectionViewDropOperation -&gt; bool" Usage="nSCollectionViewDelegateFlowLayout.AcceptDrop (collectionView, draggingInfo, indexPath, dropOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:acceptDrop:indexPath:dropOperation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="draggingInfo" Type="AppKit.NSDraggingInfo" />
        <Parameter Name="indexPath" Type="Foundation.NSIndexPath" />
        <Parameter Name="dropOperation" Type="AppKit.NSCollectionViewDropOperation" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="draggingInfo">To be added.</param>
        <param name="indexPath">To be added.</param>
        <param name="dropOperation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptDrop">
      <MemberSignature Language="C#" Value="public virtual bool AcceptDrop (AppKit.NSCollectionView collectionView, AppKit.NSDraggingInfo draggingInfo, nint index, AppKit.NSCollectionViewDropOperation dropOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AcceptDrop(class AppKit.NSCollectionView collectionView, class AppKit.NSDraggingInfo draggingInfo, valuetype System.nint index, valuetype AppKit.NSCollectionViewDropOperation dropOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.AcceptDrop(AppKit.NSCollectionView,AppKit.NSDraggingInfo,System.nint,AppKit.NSCollectionViewDropOperation)" />
      <MemberSignature Language="F#" Value="abstract member AcceptDrop : AppKit.NSCollectionView * AppKit.NSDraggingInfo * nint * AppKit.NSCollectionViewDropOperation -&gt; bool&#xA;override this.AcceptDrop : AppKit.NSCollectionView * AppKit.NSDraggingInfo * nint * AppKit.NSCollectionViewDropOperation -&gt; bool" Usage="nSCollectionViewDelegateFlowLayout.AcceptDrop (collectionView, draggingInfo, index, dropOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:acceptDrop:index:dropOperation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="draggingInfo" Type="AppKit.NSDraggingInfo" />
        <Parameter Name="index" Type="System.nint" />
        <Parameter Name="dropOperation" Type="AppKit.NSCollectionViewDropOperation" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="draggingInfo">To be added.</param>
        <param name="index">To be added.</param>
        <param name="dropOperation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDragItems">
      <MemberSignature Language="C#" Value="public virtual bool CanDragItems (AppKit.NSCollectionView collectionView, Foundation.NSIndexSet indexes, AppKit.NSEvent evt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDragItems(class AppKit.NSCollectionView collectionView, class Foundation.NSIndexSet indexes, class AppKit.NSEvent evt) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.CanDragItems(AppKit.NSCollectionView,Foundation.NSIndexSet,AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member CanDragItems : AppKit.NSCollectionView * Foundation.NSIndexSet * AppKit.NSEvent -&gt; bool&#xA;override this.CanDragItems : AppKit.NSCollectionView * Foundation.NSIndexSet * AppKit.NSEvent -&gt; bool" Usage="nSCollectionViewDelegateFlowLayout.CanDragItems (collectionView, indexes, evt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:canDragItemsAtIndexes:withEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="indexes" Type="Foundation.NSIndexSet" />
        <Parameter Name="evt" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="indexes">To be added.</param>
        <param name="evt">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDragItems">
      <MemberSignature Language="C#" Value="public virtual bool CanDragItems (AppKit.NSCollectionView collectionView, Foundation.NSSet indexPaths, AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDragItems(class AppKit.NSCollectionView collectionView, class Foundation.NSSet indexPaths, class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.CanDragItems(AppKit.NSCollectionView,Foundation.NSSet,AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member CanDragItems : AppKit.NSCollectionView * Foundation.NSSet * AppKit.NSEvent -&gt; bool&#xA;override this.CanDragItems : AppKit.NSCollectionView * Foundation.NSSet * AppKit.NSEvent -&gt; bool" Usage="nSCollectionViewDelegateFlowLayout.CanDragItems (collectionView, indexPaths, theEvent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:canDragItemsAtIndexPaths:withEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="indexPaths" Type="Foundation.NSSet" />
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="indexPaths">To be added.</param>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayingItemEnded">
      <MemberSignature Language="C#" Value="public virtual void DisplayingItemEnded (AppKit.NSCollectionView collectionView, AppKit.NSCollectionViewItem item, Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisplayingItemEnded(class AppKit.NSCollectionView collectionView, class AppKit.NSCollectionViewItem item, class Foundation.NSIndexPath indexPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.DisplayingItemEnded(AppKit.NSCollectionView,AppKit.NSCollectionViewItem,Foundation.NSIndexPath)" />
      <MemberSignature Language="F#" Value="abstract member DisplayingItemEnded : AppKit.NSCollectionView * AppKit.NSCollectionViewItem * Foundation.NSIndexPath -&gt; unit&#xA;override this.DisplayingItemEnded : AppKit.NSCollectionView * AppKit.NSCollectionViewItem * Foundation.NSIndexPath -&gt; unit" Usage="nSCollectionViewDelegateFlowLayout.DisplayingItemEnded (collectionView, item, indexPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:didEndDisplayingItem:forRepresentedObjectAtIndexPath:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="item" Type="AppKit.NSCollectionViewItem" />
        <Parameter Name="indexPath" Type="Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="item">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayingSupplementaryViewEnded">
      <MemberSignature Language="C#" Value="public virtual void DisplayingSupplementaryViewEnded (AppKit.NSCollectionView collectionView, AppKit.NSView view, string elementKind, Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisplayingSupplementaryViewEnded(class AppKit.NSCollectionView collectionView, class AppKit.NSView view, string elementKind, class Foundation.NSIndexPath indexPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.DisplayingSupplementaryViewEnded(AppKit.NSCollectionView,AppKit.NSView,System.String,Foundation.NSIndexPath)" />
      <MemberSignature Language="F#" Value="abstract member DisplayingSupplementaryViewEnded : AppKit.NSCollectionView * AppKit.NSView * string * Foundation.NSIndexPath -&gt; unit&#xA;override this.DisplayingSupplementaryViewEnded : AppKit.NSCollectionView * AppKit.NSView * string * Foundation.NSIndexPath -&gt; unit" Usage="nSCollectionViewDelegateFlowLayout.DisplayingSupplementaryViewEnded (collectionView, view, elementKind, indexPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="view" Type="AppKit.NSView" />
        <Parameter Name="elementKind" Type="System.String" />
        <Parameter Name="indexPath" Type="Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="view">To be added.</param>
        <param name="elementKind">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggingSessionEnded">
      <MemberSignature Language="C#" Value="public virtual void DraggingSessionEnded (AppKit.NSCollectionView collectionView, AppKit.NSDraggingSession draggingSession, CoreGraphics.CGPoint screenPoint, AppKit.NSDragOperation dragOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DraggingSessionEnded(class AppKit.NSCollectionView collectionView, class AppKit.NSDraggingSession draggingSession, valuetype CoreGraphics.CGPoint screenPoint, valuetype AppKit.NSDragOperation dragOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.DraggingSessionEnded(AppKit.NSCollectionView,AppKit.NSDraggingSession,CoreGraphics.CGPoint,AppKit.NSDragOperation)" />
      <MemberSignature Language="F#" Value="abstract member DraggingSessionEnded : AppKit.NSCollectionView * AppKit.NSDraggingSession * CoreGraphics.CGPoint * AppKit.NSDragOperation -&gt; unit&#xA;override this.DraggingSessionEnded : AppKit.NSCollectionView * AppKit.NSDraggingSession * CoreGraphics.CGPoint * AppKit.NSDragOperation -&gt; unit" Usage="nSCollectionViewDelegateFlowLayout.DraggingSessionEnded (collectionView, draggingSession, screenPoint, dragOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:draggingSession:endedAtPoint:dragOperation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="draggingSession" Type="AppKit.NSDraggingSession" />
        <Parameter Name="screenPoint" Type="CoreGraphics.CGPoint" />
        <Parameter Name="dragOperation" Type="AppKit.NSDragOperation" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="draggingSession">To be added.</param>
        <param name="screenPoint">To be added.</param>
        <param name="dragOperation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggingSessionWillBegin">
      <MemberSignature Language="C#" Value="public virtual void DraggingSessionWillBegin (AppKit.NSCollectionView collectionView, AppKit.NSDraggingSession draggingSession, CoreGraphics.CGPoint screenPoint, Foundation.NSIndexSet indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DraggingSessionWillBegin(class AppKit.NSCollectionView collectionView, class AppKit.NSDraggingSession draggingSession, valuetype CoreGraphics.CGPoint screenPoint, class Foundation.NSIndexSet indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.DraggingSessionWillBegin(AppKit.NSCollectionView,AppKit.NSDraggingSession,CoreGraphics.CGPoint,Foundation.NSIndexSet)" />
      <MemberSignature Language="F#" Value="abstract member DraggingSessionWillBegin : AppKit.NSCollectionView * AppKit.NSDraggingSession * CoreGraphics.CGPoint * Foundation.NSIndexSet -&gt; unit&#xA;override this.DraggingSessionWillBegin : AppKit.NSCollectionView * AppKit.NSDraggingSession * CoreGraphics.CGPoint * Foundation.NSIndexSet -&gt; unit" Usage="nSCollectionViewDelegateFlowLayout.DraggingSessionWillBegin (collectionView, draggingSession, screenPoint, indexes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexes:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="draggingSession" Type="AppKit.NSDraggingSession" />
        <Parameter Name="screenPoint" Type="CoreGraphics.CGPoint" />
        <Parameter Name="indexes" Type="Foundation.NSIndexSet" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="draggingSession">To be added.</param>
        <param name="screenPoint">To be added.</param>
        <param name="indexes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggingSessionWillBegin">
      <MemberSignature Language="C#" Value="public virtual void DraggingSessionWillBegin (AppKit.NSCollectionView collectionView, AppKit.NSDraggingSession session, CoreGraphics.CGPoint screenPoint, Foundation.NSSet indexPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DraggingSessionWillBegin(class AppKit.NSCollectionView collectionView, class AppKit.NSDraggingSession session, valuetype CoreGraphics.CGPoint screenPoint, class Foundation.NSSet indexPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.DraggingSessionWillBegin(AppKit.NSCollectionView,AppKit.NSDraggingSession,CoreGraphics.CGPoint,Foundation.NSSet)" />
      <MemberSignature Language="F#" Value="abstract member DraggingSessionWillBegin : AppKit.NSCollectionView * AppKit.NSDraggingSession * CoreGraphics.CGPoint * Foundation.NSSet -&gt; unit&#xA;override this.DraggingSessionWillBegin : AppKit.NSCollectionView * AppKit.NSDraggingSession * CoreGraphics.CGPoint * Foundation.NSSet -&gt; unit" Usage="nSCollectionViewDelegateFlowLayout.DraggingSessionWillBegin (collectionView, session, screenPoint, indexPaths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexPaths:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="session" Type="AppKit.NSDraggingSession" />
        <Parameter Name="screenPoint" Type="CoreGraphics.CGPoint" />
        <Parameter Name="indexPaths" Type="Foundation.NSSet" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="session">To be added.</param>
        <param name="screenPoint">To be added.</param>
        <param name="indexPaths">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDraggingImage">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSImage GetDraggingImage (AppKit.NSCollectionView collectionView, Foundation.NSSet indexPaths, AppKit.NSEvent theEvent, ref CoreGraphics.CGPoint dragImageOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSImage GetDraggingImage(class AppKit.NSCollectionView collectionView, class Foundation.NSSet indexPaths, class AppKit.NSEvent theEvent, valuetype CoreGraphics.CGPoint&amp; dragImageOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.GetDraggingImage(AppKit.NSCollectionView,Foundation.NSSet,AppKit.NSEvent,CoreGraphics.CGPoint@)" />
      <MemberSignature Language="F#" Value="abstract member GetDraggingImage : AppKit.NSCollectionView * Foundation.NSSet * AppKit.NSEvent *  -&gt; AppKit.NSImage&#xA;override this.GetDraggingImage : AppKit.NSCollectionView * Foundation.NSSet * AppKit.NSEvent *  -&gt; AppKit.NSImage" Usage="nSCollectionViewDelegateFlowLayout.GetDraggingImage (collectionView, indexPaths, theEvent, dragImageOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:draggingImageForItemsAtIndexPaths:withEvent:offset:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="indexPaths" Type="Foundation.NSSet" />
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
        <Parameter Name="dragImageOffset" Type="CoreGraphics.CGPoint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="indexPaths">To be added.</param>
        <param name="theEvent">To be added.</param>
        <param name="dragImageOffset">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamesOfPromisedFiles">
      <MemberSignature Language="C#" Value="public virtual string[] GetNamesOfPromisedFiles (AppKit.NSCollectionView collectionView, Foundation.NSUrl dropURL, Foundation.NSSet indexPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetNamesOfPromisedFiles(class AppKit.NSCollectionView collectionView, class Foundation.NSUrl dropURL, class Foundation.NSSet indexPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.GetNamesOfPromisedFiles(AppKit.NSCollectionView,Foundation.NSUrl,Foundation.NSSet)" />
      <MemberSignature Language="F#" Value="abstract member GetNamesOfPromisedFiles : AppKit.NSCollectionView * Foundation.NSUrl * Foundation.NSSet -&gt; string[]&#xA;override this.GetNamesOfPromisedFiles : AppKit.NSCollectionView * Foundation.NSUrl * Foundation.NSSet -&gt; string[]" Usage="nSCollectionViewDelegateFlowLayout.GetNamesOfPromisedFiles (collectionView, dropURL, indexPaths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexPaths:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.None, "Use 'NSFilePromiseReceiver' objects instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="dropURL" Type="Foundation.NSUrl" />
        <Parameter Name="indexPaths" Type="Foundation.NSSet" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="dropURL">To be added.</param>
        <param name="indexPaths">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPasteboardWriter">
      <MemberSignature Language="C#" Value="public virtual AppKit.INSPasteboardWriting GetPasteboardWriter (AppKit.NSCollectionView collectionView, Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.INSPasteboardWriting GetPasteboardWriter(class AppKit.NSCollectionView collectionView, class Foundation.NSIndexPath indexPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.GetPasteboardWriter(AppKit.NSCollectionView,Foundation.NSIndexPath)" />
      <MemberSignature Language="F#" Value="abstract member GetPasteboardWriter : AppKit.NSCollectionView * Foundation.NSIndexPath -&gt; AppKit.INSPasteboardWriting&#xA;override this.GetPasteboardWriter : AppKit.NSCollectionView * Foundation.NSIndexPath -&gt; AppKit.INSPasteboardWriting" Usage="nSCollectionViewDelegateFlowLayout.GetPasteboardWriter (collectionView, indexPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:pasteboardWriterForItemAtIndexPath:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.INSPasteboardWriting</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="indexPath" Type="Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsetForSection">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSEdgeInsets InsetForSection (AppKit.NSCollectionView collectionView, AppKit.NSCollectionViewLayout collectionViewLayout, nint section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AppKit.NSEdgeInsets InsetForSection(class AppKit.NSCollectionView collectionView, class AppKit.NSCollectionViewLayout collectionViewLayout, valuetype System.nint section) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.InsetForSection(AppKit.NSCollectionView,AppKit.NSCollectionViewLayout,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member InsetForSection : AppKit.NSCollectionView * AppKit.NSCollectionViewLayout * nint -&gt; AppKit.NSEdgeInsets&#xA;override this.InsetForSection : AppKit.NSCollectionView * AppKit.NSCollectionViewLayout * nint -&gt; AppKit.NSEdgeInsets" Usage="nSCollectionViewDelegateFlowLayout.InsetForSection (collectionView, collectionViewLayout, section)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:layout:insetForSectionAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSEdgeInsets</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="collectionViewLayout" Type="AppKit.NSCollectionViewLayout" />
        <Parameter Name="section" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="collectionViewLayout">To be added.</param>
        <param name="section">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsChanged">
      <MemberSignature Language="C#" Value="public virtual void ItemsChanged (AppKit.NSCollectionView collectionView, Foundation.NSSet indexPaths, AppKit.NSCollectionViewItemHighlightState highlightState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ItemsChanged(class AppKit.NSCollectionView collectionView, class Foundation.NSSet indexPaths, valuetype AppKit.NSCollectionViewItemHighlightState highlightState) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.ItemsChanged(AppKit.NSCollectionView,Foundation.NSSet,AppKit.NSCollectionViewItemHighlightState)" />
      <MemberSignature Language="F#" Value="abstract member ItemsChanged : AppKit.NSCollectionView * Foundation.NSSet * AppKit.NSCollectionViewItemHighlightState -&gt; unit&#xA;override this.ItemsChanged : AppKit.NSCollectionView * Foundation.NSSet * AppKit.NSCollectionViewItemHighlightState -&gt; unit" Usage="nSCollectionViewDelegateFlowLayout.ItemsChanged (collectionView, indexPaths, highlightState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:didChangeItemsAtIndexPaths:toHighlightState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="indexPaths" Type="Foundation.NSSet" />
        <Parameter Name="highlightState" Type="AppKit.NSCollectionViewItemHighlightState" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="indexPaths">To be added.</param>
        <param name="highlightState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsDeselected">
      <MemberSignature Language="C#" Value="public virtual void ItemsDeselected (AppKit.NSCollectionView collectionView, Foundation.NSSet indexPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ItemsDeselected(class AppKit.NSCollectionView collectionView, class Foundation.NSSet indexPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.ItemsDeselected(AppKit.NSCollectionView,Foundation.NSSet)" />
      <MemberSignature Language="F#" Value="abstract member ItemsDeselected : AppKit.NSCollectionView * Foundation.NSSet -&gt; unit&#xA;override this.ItemsDeselected : AppKit.NSCollectionView * Foundation.NSSet -&gt; unit" Usage="nSCollectionViewDelegateFlowLayout.ItemsDeselected (collectionView, indexPaths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:didDeselectItemsAtIndexPaths:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="indexPaths" Type="Foundation.NSSet" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="indexPaths">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsSelected">
      <MemberSignature Language="C#" Value="public virtual void ItemsSelected (AppKit.NSCollectionView collectionView, Foundation.NSSet indexPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ItemsSelected(class AppKit.NSCollectionView collectionView, class Foundation.NSSet indexPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.ItemsSelected(AppKit.NSCollectionView,Foundation.NSSet)" />
      <MemberSignature Language="F#" Value="abstract member ItemsSelected : AppKit.NSCollectionView * Foundation.NSSet -&gt; unit&#xA;override this.ItemsSelected : AppKit.NSCollectionView * Foundation.NSSet -&gt; unit" Usage="nSCollectionViewDelegateFlowLayout.ItemsSelected (collectionView, indexPaths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:didSelectItemsAtIndexPaths:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="indexPaths" Type="Foundation.NSSet" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="indexPaths">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumInteritemSpacingForSection">
      <MemberSignature Language="C#" Value="public virtual nfloat MinimumInteritemSpacingForSection (AppKit.NSCollectionView collectionView, AppKit.NSCollectionViewLayout collectionViewLayout, nint section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat MinimumInteritemSpacingForSection(class AppKit.NSCollectionView collectionView, class AppKit.NSCollectionViewLayout collectionViewLayout, valuetype System.nint section) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.MinimumInteritemSpacingForSection(AppKit.NSCollectionView,AppKit.NSCollectionViewLayout,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member MinimumInteritemSpacingForSection : AppKit.NSCollectionView * AppKit.NSCollectionViewLayout * nint -&gt; nfloat&#xA;override this.MinimumInteritemSpacingForSection : AppKit.NSCollectionView * AppKit.NSCollectionViewLayout * nint -&gt; nfloat" Usage="nSCollectionViewDelegateFlowLayout.MinimumInteritemSpacingForSection (collectionView, collectionViewLayout, section)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:layout:minimumInteritemSpacingForSectionAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="collectionViewLayout" Type="AppKit.NSCollectionViewLayout" />
        <Parameter Name="section" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="collectionViewLayout">To be added.</param>
        <param name="section">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumLineSpacing">
      <MemberSignature Language="C#" Value="public virtual nfloat MinimumLineSpacing (AppKit.NSCollectionView collectionView, AppKit.NSCollectionViewLayout collectionViewLayout, nint section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat MinimumLineSpacing(class AppKit.NSCollectionView collectionView, class AppKit.NSCollectionViewLayout collectionViewLayout, valuetype System.nint section) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.MinimumLineSpacing(AppKit.NSCollectionView,AppKit.NSCollectionViewLayout,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member MinimumLineSpacing : AppKit.NSCollectionView * AppKit.NSCollectionViewLayout * nint -&gt; nfloat&#xA;override this.MinimumLineSpacing : AppKit.NSCollectionView * AppKit.NSCollectionViewLayout * nint -&gt; nfloat" Usage="nSCollectionViewDelegateFlowLayout.MinimumLineSpacing (collectionView, collectionViewLayout, section)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:layout:minimumLineSpacingForSectionAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="collectionViewLayout" Type="AppKit.NSCollectionViewLayout" />
        <Parameter Name="section" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="collectionViewLayout">To be added.</param>
        <param name="section">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamesOfPromisedFilesDroppedAtDestination">
      <MemberSignature Language="C#" Value="public virtual string[] NamesOfPromisedFilesDroppedAtDestination (AppKit.NSCollectionView collectionView, Foundation.NSUrl dropUrl, Foundation.NSIndexSet indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] NamesOfPromisedFilesDroppedAtDestination(class AppKit.NSCollectionView collectionView, class Foundation.NSUrl dropUrl, class Foundation.NSIndexSet indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.NamesOfPromisedFilesDroppedAtDestination(AppKit.NSCollectionView,Foundation.NSUrl,Foundation.NSIndexSet)" />
      <MemberSignature Language="F#" Value="abstract member NamesOfPromisedFilesDroppedAtDestination : AppKit.NSCollectionView * Foundation.NSUrl * Foundation.NSIndexSet -&gt; string[]&#xA;override this.NamesOfPromisedFilesDroppedAtDestination : AppKit.NSCollectionView * Foundation.NSUrl * Foundation.NSIndexSet -&gt; string[]" Usage="nSCollectionViewDelegateFlowLayout.NamesOfPromisedFilesDroppedAtDestination (collectionView, dropUrl, indexes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.None, "Use 'NSFilePromiseReceiver' objects instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="dropUrl" Type="Foundation.NSUrl" />
        <Parameter Name="indexes" Type="Foundation.NSIndexSet" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="dropUrl">To be added.</param>
        <param name="indexes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteboardWriterForItem">
      <MemberSignature Language="C#" Value="public virtual AppKit.INSPasteboardWriting PasteboardWriterForItem (AppKit.NSCollectionView collectionView, nuint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.INSPasteboardWriting PasteboardWriterForItem(class AppKit.NSCollectionView collectionView, valuetype System.nuint index) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.PasteboardWriterForItem(AppKit.NSCollectionView,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member PasteboardWriterForItem : AppKit.NSCollectionView * nuint -&gt; AppKit.INSPasteboardWriting&#xA;override this.PasteboardWriterForItem : AppKit.NSCollectionView * nuint -&gt; AppKit.INSPasteboardWriting" Usage="nSCollectionViewDelegateFlowLayout.PasteboardWriterForItem (collectionView, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:pasteboardWriterForItemAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.INSPasteboardWriting</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="index" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceSizeForFooter">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGSize ReferenceSizeForFooter (AppKit.NSCollectionView collectionView, AppKit.NSCollectionViewLayout collectionViewLayout, nint section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGSize ReferenceSizeForFooter(class AppKit.NSCollectionView collectionView, class AppKit.NSCollectionViewLayout collectionViewLayout, valuetype System.nint section) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.ReferenceSizeForFooter(AppKit.NSCollectionView,AppKit.NSCollectionViewLayout,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member ReferenceSizeForFooter : AppKit.NSCollectionView * AppKit.NSCollectionViewLayout * nint -&gt; CoreGraphics.CGSize&#xA;override this.ReferenceSizeForFooter : AppKit.NSCollectionView * AppKit.NSCollectionViewLayout * nint -&gt; CoreGraphics.CGSize" Usage="nSCollectionViewDelegateFlowLayout.ReferenceSizeForFooter (collectionView, collectionViewLayout, section)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:layout:referenceSizeForFooterInSection:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="collectionViewLayout" Type="AppKit.NSCollectionViewLayout" />
        <Parameter Name="section" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="collectionViewLayout">To be added.</param>
        <param name="section">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceSizeForHeader">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGSize ReferenceSizeForHeader (AppKit.NSCollectionView collectionView, AppKit.NSCollectionViewLayout collectionViewLayout, nint section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGSize ReferenceSizeForHeader(class AppKit.NSCollectionView collectionView, class AppKit.NSCollectionViewLayout collectionViewLayout, valuetype System.nint section) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.ReferenceSizeForHeader(AppKit.NSCollectionView,AppKit.NSCollectionViewLayout,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member ReferenceSizeForHeader : AppKit.NSCollectionView * AppKit.NSCollectionViewLayout * nint -&gt; CoreGraphics.CGSize&#xA;override this.ReferenceSizeForHeader : AppKit.NSCollectionView * AppKit.NSCollectionViewLayout * nint -&gt; CoreGraphics.CGSize" Usage="nSCollectionViewDelegateFlowLayout.ReferenceSizeForHeader (collectionView, collectionViewLayout, section)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:layout:referenceSizeForHeaderInSection:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="collectionViewLayout" Type="AppKit.NSCollectionViewLayout" />
        <Parameter Name="section" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="collectionViewLayout">To be added.</param>
        <param name="section">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeItems">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSSet ShouldChangeItems (AppKit.NSCollectionView collectionView, Foundation.NSSet indexPaths, AppKit.NSCollectionViewItemHighlightState highlightState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSSet ShouldChangeItems(class AppKit.NSCollectionView collectionView, class Foundation.NSSet indexPaths, valuetype AppKit.NSCollectionViewItemHighlightState highlightState) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.ShouldChangeItems(AppKit.NSCollectionView,Foundation.NSSet,AppKit.NSCollectionViewItemHighlightState)" />
      <MemberSignature Language="F#" Value="abstract member ShouldChangeItems : AppKit.NSCollectionView * Foundation.NSSet * AppKit.NSCollectionViewItemHighlightState -&gt; Foundation.NSSet&#xA;override this.ShouldChangeItems : AppKit.NSCollectionView * Foundation.NSSet * AppKit.NSCollectionViewItemHighlightState -&gt; Foundation.NSSet" Usage="nSCollectionViewDelegateFlowLayout.ShouldChangeItems (collectionView, indexPaths, highlightState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:shouldChangeItemsAtIndexPaths:toHighlightState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="indexPaths" Type="Foundation.NSSet" />
        <Parameter Name="highlightState" Type="AppKit.NSCollectionViewItemHighlightState" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="indexPaths">To be added.</param>
        <param name="highlightState">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldDeselectItems">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSSet ShouldDeselectItems (AppKit.NSCollectionView collectionView, Foundation.NSSet indexPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSSet ShouldDeselectItems(class AppKit.NSCollectionView collectionView, class Foundation.NSSet indexPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.ShouldDeselectItems(AppKit.NSCollectionView,Foundation.NSSet)" />
      <MemberSignature Language="F#" Value="abstract member ShouldDeselectItems : AppKit.NSCollectionView * Foundation.NSSet -&gt; Foundation.NSSet&#xA;override this.ShouldDeselectItems : AppKit.NSCollectionView * Foundation.NSSet -&gt; Foundation.NSSet" Usage="nSCollectionViewDelegateFlowLayout.ShouldDeselectItems (collectionView, indexPaths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:shouldDeselectItemsAtIndexPaths:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="indexPaths" Type="Foundation.NSSet" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="indexPaths">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSelectItems">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSSet ShouldSelectItems (AppKit.NSCollectionView collectionView, Foundation.NSSet indexPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSSet ShouldSelectItems(class AppKit.NSCollectionView collectionView, class Foundation.NSSet indexPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.ShouldSelectItems(AppKit.NSCollectionView,Foundation.NSSet)" />
      <MemberSignature Language="F#" Value="abstract member ShouldSelectItems : AppKit.NSCollectionView * Foundation.NSSet -&gt; Foundation.NSSet&#xA;override this.ShouldSelectItems : AppKit.NSCollectionView * Foundation.NSSet -&gt; Foundation.NSSet" Usage="nSCollectionViewDelegateFlowLayout.ShouldSelectItems (collectionView, indexPaths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:shouldSelectItemsAtIndexPaths:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="indexPaths" Type="Foundation.NSSet" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="indexPaths">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeForItem">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGSize SizeForItem (AppKit.NSCollectionView collectionView, AppKit.NSCollectionViewLayout collectionViewLayout, Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGSize SizeForItem(class AppKit.NSCollectionView collectionView, class AppKit.NSCollectionViewLayout collectionViewLayout, class Foundation.NSIndexPath indexPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.SizeForItem(AppKit.NSCollectionView,AppKit.NSCollectionViewLayout,Foundation.NSIndexPath)" />
      <MemberSignature Language="F#" Value="abstract member SizeForItem : AppKit.NSCollectionView * AppKit.NSCollectionViewLayout * Foundation.NSIndexPath -&gt; CoreGraphics.CGSize&#xA;override this.SizeForItem : AppKit.NSCollectionView * AppKit.NSCollectionViewLayout * Foundation.NSIndexPath -&gt; CoreGraphics.CGSize" Usage="nSCollectionViewDelegateFlowLayout.SizeForItem (collectionView, collectionViewLayout, indexPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:layout:sizeForItemAtIndexPath:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="collectionViewLayout" Type="AppKit.NSCollectionViewLayout" />
        <Parameter Name="indexPath" Type="Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="collectionViewLayout">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionLayout">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSCollectionViewTransitionLayout TransitionLayout (AppKit.NSCollectionView collectionView, AppKit.NSCollectionViewLayout fromLayout, AppKit.NSCollectionViewLayout toLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSCollectionViewTransitionLayout TransitionLayout(class AppKit.NSCollectionView collectionView, class AppKit.NSCollectionViewLayout fromLayout, class AppKit.NSCollectionViewLayout toLayout) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.TransitionLayout(AppKit.NSCollectionView,AppKit.NSCollectionViewLayout,AppKit.NSCollectionViewLayout)" />
      <MemberSignature Language="F#" Value="abstract member TransitionLayout : AppKit.NSCollectionView * AppKit.NSCollectionViewLayout * AppKit.NSCollectionViewLayout -&gt; AppKit.NSCollectionViewTransitionLayout&#xA;override this.TransitionLayout : AppKit.NSCollectionView * AppKit.NSCollectionViewLayout * AppKit.NSCollectionViewLayout -&gt; AppKit.NSCollectionViewTransitionLayout" Usage="nSCollectionViewDelegateFlowLayout.TransitionLayout (collectionView, fromLayout, toLayout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:transitionLayoutForOldLayout:newLayout:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSCollectionViewTransitionLayout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="fromLayout" Type="AppKit.NSCollectionViewLayout" />
        <Parameter Name="toLayout" Type="AppKit.NSCollectionViewLayout" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="fromLayout">To be added.</param>
        <param name="toLayout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDraggingItemsForDrag">
      <MemberSignature Language="C#" Value="public virtual void UpdateDraggingItemsForDrag (AppKit.NSCollectionView collectionView, AppKit.NSDraggingInfo draggingInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateDraggingItemsForDrag(class AppKit.NSCollectionView collectionView, class AppKit.NSDraggingInfo draggingInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.UpdateDraggingItemsForDrag(AppKit.NSCollectionView,AppKit.NSDraggingInfo)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDraggingItemsForDrag : AppKit.NSCollectionView * AppKit.NSDraggingInfo -&gt; unit&#xA;override this.UpdateDraggingItemsForDrag : AppKit.NSCollectionView * AppKit.NSDraggingInfo -&gt; unit" Usage="nSCollectionViewDelegateFlowLayout.UpdateDraggingItemsForDrag (collectionView, draggingInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:updateDraggingItemsForDrag:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="draggingInfo" Type="AppKit.NSDraggingInfo" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="draggingInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateDrop">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSDragOperation ValidateDrop (AppKit.NSCollectionView collectionView, AppKit.NSDraggingInfo draggingInfo, out Foundation.NSIndexPath proposedDropIndexPath, out AppKit.NSCollectionViewDropOperation proposedDropOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AppKit.NSDragOperation ValidateDrop(class AppKit.NSCollectionView collectionView, class AppKit.NSDraggingInfo draggingInfo, [out] class Foundation.NSIndexPath&amp; proposedDropIndexPath, [out] valuetype AppKit.NSCollectionViewDropOperation&amp; proposedDropOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.ValidateDrop(AppKit.NSCollectionView,AppKit.NSDraggingInfo,Foundation.NSIndexPath@,AppKit.NSCollectionViewDropOperation@)" />
      <MemberSignature Language="F#" Value="abstract member ValidateDrop : AppKit.NSCollectionView * AppKit.NSDraggingInfo *  *  -&gt; AppKit.NSDragOperation&#xA;override this.ValidateDrop : AppKit.NSCollectionView * AppKit.NSDraggingInfo *  *  -&gt; AppKit.NSDragOperation" Usage="nSCollectionViewDelegateFlowLayout.ValidateDrop (collectionView, draggingInfo, proposedDropIndexPath, proposedDropOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use 'ValidateDropOperation (NSCollectionView collectionView, NSDraggingInfo draggingInfo, ref NSIndexPath proposedDropIndexPath, ref NSCollectionViewDropOperation proposedDropOperation)' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSDragOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="draggingInfo" Type="AppKit.NSDraggingInfo" />
        <Parameter Name="proposedDropIndexPath" Type="Foundation.NSIndexPath" RefType="out" />
        <Parameter Name="proposedDropOperation" Type="AppKit.NSCollectionViewDropOperation" RefType="out" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="draggingInfo">To be added.</param>
        <param name="proposedDropIndexPath">To be added.</param>
        <param name="proposedDropOperation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateDrop">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSDragOperation ValidateDrop (AppKit.NSCollectionView collectionView, AppKit.NSDraggingInfo draggingInfo, ref nint dropIndex, ref AppKit.NSCollectionViewDropOperation dropOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AppKit.NSDragOperation ValidateDrop(class AppKit.NSCollectionView collectionView, class AppKit.NSDraggingInfo draggingInfo, valuetype System.nint&amp; dropIndex, valuetype AppKit.NSCollectionViewDropOperation&amp; dropOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.ValidateDrop(AppKit.NSCollectionView,AppKit.NSDraggingInfo,System.nint@,AppKit.NSCollectionViewDropOperation@)" />
      <MemberSignature Language="F#" Value="abstract member ValidateDrop : AppKit.NSCollectionView * AppKit.NSDraggingInfo *  *  -&gt; AppKit.NSDragOperation&#xA;override this.ValidateDrop : AppKit.NSCollectionView * AppKit.NSDraggingInfo *  *  -&gt; AppKit.NSDragOperation" Usage="nSCollectionViewDelegateFlowLayout.ValidateDrop (collectionView, draggingInfo, dropIndex, dropOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:validateDrop:proposedIndex:dropOperation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSDragOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="draggingInfo" Type="AppKit.NSDraggingInfo" />
        <Parameter Name="dropIndex" Type="System.nint" RefType="ref" />
        <Parameter Name="dropOperation" Type="AppKit.NSCollectionViewDropOperation" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="draggingInfo">To be added.</param>
        <param name="dropIndex">To be added.</param>
        <param name="dropOperation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateDropOperation">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSDragOperation ValidateDropOperation (AppKit.NSCollectionView collectionView, AppKit.NSDraggingInfo draggingInfo, ref Foundation.NSIndexPath proposedDropIndexPath, ref AppKit.NSCollectionViewDropOperation proposedDropOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AppKit.NSDragOperation ValidateDropOperation(class AppKit.NSCollectionView collectionView, class AppKit.NSDraggingInfo draggingInfo, class Foundation.NSIndexPath&amp; proposedDropIndexPath, valuetype AppKit.NSCollectionViewDropOperation&amp; proposedDropOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.ValidateDropOperation(AppKit.NSCollectionView,AppKit.NSDraggingInfo,Foundation.NSIndexPath@,AppKit.NSCollectionViewDropOperation@)" />
      <MemberSignature Language="F#" Value="abstract member ValidateDropOperation : AppKit.NSCollectionView * AppKit.NSDraggingInfo *  *  -&gt; AppKit.NSDragOperation&#xA;override this.ValidateDropOperation : AppKit.NSCollectionView * AppKit.NSDraggingInfo *  *  -&gt; AppKit.NSDragOperation" Usage="nSCollectionViewDelegateFlowLayout.ValidateDropOperation (collectionView, draggingInfo, proposedDropIndexPath, proposedDropOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:validateDrop:proposedIndexPath:dropOperation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSDragOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="draggingInfo" Type="AppKit.NSDraggingInfo" />
        <Parameter Name="proposedDropIndexPath" Type="Foundation.NSIndexPath" RefType="ref" />
        <Parameter Name="proposedDropOperation" Type="AppKit.NSCollectionViewDropOperation" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="draggingInfo">To be added.</param>
        <param name="proposedDropIndexPath">To be added.</param>
        <param name="proposedDropOperation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillDisplayItem">
      <MemberSignature Language="C#" Value="public virtual void WillDisplayItem (AppKit.NSCollectionView collectionView, AppKit.NSCollectionViewItem item, Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillDisplayItem(class AppKit.NSCollectionView collectionView, class AppKit.NSCollectionViewItem item, class Foundation.NSIndexPath indexPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.WillDisplayItem(AppKit.NSCollectionView,AppKit.NSCollectionViewItem,Foundation.NSIndexPath)" />
      <MemberSignature Language="F#" Value="abstract member WillDisplayItem : AppKit.NSCollectionView * AppKit.NSCollectionViewItem * Foundation.NSIndexPath -&gt; unit&#xA;override this.WillDisplayItem : AppKit.NSCollectionView * AppKit.NSCollectionViewItem * Foundation.NSIndexPath -&gt; unit" Usage="nSCollectionViewDelegateFlowLayout.WillDisplayItem (collectionView, item, indexPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:willDisplayItem:forRepresentedObjectAtIndexPath:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="item" Type="AppKit.NSCollectionViewItem" />
        <Parameter Name="indexPath" Type="Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="item">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillDisplaySupplementaryView">
      <MemberSignature Language="C#" Value="public virtual void WillDisplaySupplementaryView (AppKit.NSCollectionView collectionView, AppKit.NSView view, Foundation.NSString elementKind, Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillDisplaySupplementaryView(class AppKit.NSCollectionView collectionView, class AppKit.NSView view, class Foundation.NSString elementKind, class Foundation.NSIndexPath indexPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.WillDisplaySupplementaryView(AppKit.NSCollectionView,AppKit.NSView,Foundation.NSString,Foundation.NSIndexPath)" />
      <MemberSignature Language="F#" Value="abstract member WillDisplaySupplementaryView : AppKit.NSCollectionView * AppKit.NSView * Foundation.NSString * Foundation.NSIndexPath -&gt; unit&#xA;override this.WillDisplaySupplementaryView : AppKit.NSCollectionView * AppKit.NSView * Foundation.NSString * Foundation.NSIndexPath -&gt; unit" Usage="nSCollectionViewDelegateFlowLayout.WillDisplaySupplementaryView (collectionView, view, elementKind, indexPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="view" Type="AppKit.NSView" />
        <Parameter Name="elementKind" Type="Foundation.NSString" />
        <Parameter Name="indexPath" Type="Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="view">To be added.</param>
        <param name="elementKind">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteItems">
      <MemberSignature Language="C#" Value="public virtual bool WriteItems (AppKit.NSCollectionView collectionView, Foundation.NSIndexSet indexes, AppKit.NSPasteboard toPasteboard);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WriteItems(class AppKit.NSCollectionView collectionView, class Foundation.NSIndexSet indexes, class AppKit.NSPasteboard toPasteboard) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.WriteItems(AppKit.NSCollectionView,Foundation.NSIndexSet,AppKit.NSPasteboard)" />
      <MemberSignature Language="F#" Value="abstract member WriteItems : AppKit.NSCollectionView * Foundation.NSIndexSet * AppKit.NSPasteboard -&gt; bool&#xA;override this.WriteItems : AppKit.NSCollectionView * Foundation.NSIndexSet * AppKit.NSPasteboard -&gt; bool" Usage="nSCollectionViewDelegateFlowLayout.WriteItems (collectionView, indexes, toPasteboard)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:writeItemsAtIndexes:toPasteboard:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="indexes" Type="Foundation.NSIndexSet" />
        <Parameter Name="toPasteboard" Type="AppKit.NSPasteboard" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="indexes">To be added.</param>
        <param name="toPasteboard">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteItems">
      <MemberSignature Language="C#" Value="public virtual bool WriteItems (AppKit.NSCollectionView collectionView, Foundation.NSSet indexPaths, AppKit.NSPasteboard pasteboard);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WriteItems(class AppKit.NSCollectionView collectionView, class Foundation.NSSet indexPaths, class AppKit.NSPasteboard pasteboard) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSCollectionViewDelegateFlowLayout.WriteItems(AppKit.NSCollectionView,Foundation.NSSet,AppKit.NSPasteboard)" />
      <MemberSignature Language="F#" Value="abstract member WriteItems : AppKit.NSCollectionView * Foundation.NSSet * AppKit.NSPasteboard -&gt; bool&#xA;override this.WriteItems : AppKit.NSCollectionView * Foundation.NSSet * AppKit.NSPasteboard -&gt; bool" Usage="nSCollectionViewDelegateFlowLayout.WriteItems (collectionView, indexPaths, pasteboard)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("collectionView:writeItemsAtIndexPaths:toPasteboard:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="AppKit.NSCollectionView" />
        <Parameter Name="indexPaths" Type="Foundation.NSSet" />
        <Parameter Name="pasteboard" Type="AppKit.NSPasteboard" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="indexPaths">To be added.</param>
        <param name="pasteboard">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
