<Type Name="NSDocument" FullName="AppKit.NSDocument">
  <TypeSignature Language="C#" Value="public class NSDocument : Foundation.NSObject, AppKit.INSEditorRegistration, AppKit.INSMenuItemValidation, Foundation.INSFilePresenter, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSDocument extends Foundation.NSObject implements class AppKit.INSEditorRegistration, class AppKit.INSMenuItemValidation, class Foundation.INSFilePresenter, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSDocument" />
  <TypeSignature Language="F#" Value="type NSDocument = class&#xA;    inherit NSObject&#xA;    interface INSEditorRegistration&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSFilePresenter&#xA;    interface INSMenuItemValidation" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>AppKit.INSEditorRegistration</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>AppKit.INSMenuItemValidation</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSFilePresenter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSDocument", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSDocument (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSDocument : Foundation.NSObjectFlag -&gt; AppKit.NSDocument" Usage="new AppKit.NSDocument t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSDocument (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSDocument : nativeint -&gt; AppKit.NSDocument" Usage="new AppKit.NSDocument handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSDocument (string typeName, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.#ctor(System.String,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="new AppKit.NSDocument : string *  -&gt; AppKit.NSDocument" Usage="new AppKit.NSDocument (typeName, outError)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithType:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="typeName">To be added.</param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSDocument (Foundation.NSUrl url, string typeName, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSUrl url, string typeName, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.#ctor(Foundation.NSUrl,System.String,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="new AppKit.NSDocument : Foundation.NSUrl * string *  -&gt; AppKit.NSDocument" Usage="new AppKit.NSDocument (url, typeName, outError)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithContentsOfURL:ofType:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="typeName">To be added.</param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSDocument (Foundation.NSUrl documentUrl, Foundation.NSUrl documentContentsUrl, string typeName, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSUrl documentUrl, class Foundation.NSUrl documentContentsUrl, string typeName, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.#ctor(Foundation.NSUrl,Foundation.NSUrl,System.String,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="new AppKit.NSDocument : Foundation.NSUrl * Foundation.NSUrl * string *  -&gt; AppKit.NSDocument" Usage="new AppKit.NSDocument (documentUrl, documentContentsUrl, typeName, outError)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initForURL:withContentsOfURL:ofType:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="documentUrl" Type="Foundation.NSUrl" />
        <Parameter Name="documentContentsUrl" Type="Foundation.NSUrl" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="documentUrl">To be added.</param>
        <param name="documentContentsUrl">To be added.</param>
        <param name="typeName">To be added.</param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccommodatePresentedItemDeletion">
      <MemberSignature Language="C#" Value="public virtual void AccommodatePresentedItemDeletion (Action&lt;Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AccommodatePresentedItemDeletion(class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.AccommodatePresentedItemDeletion(System.Action{Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member AccommodatePresentedItemDeletion : Action&lt;Foundation.NSError&gt; -&gt; unit&#xA;override this.AccommodatePresentedItemDeletion : Action&lt;Foundation.NSError&gt; -&gt; unit" Usage="nSDocument.AccommodatePresentedItemDeletion completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("accommodatePresentedItemDeletionWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V9))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccommodatePresentedSubitemDeletion">
      <MemberSignature Language="C#" Value="public virtual void AccommodatePresentedSubitemDeletion (Foundation.NSUrl url, Action&lt;Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AccommodatePresentedSubitemDeletion(class Foundation.NSUrl url, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.AccommodatePresentedSubitemDeletion(Foundation.NSUrl,System.Action{Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member AccommodatePresentedSubitemDeletion : Foundation.NSUrl * Action&lt;Foundation.NSError&gt; -&gt; unit&#xA;override this.AccommodatePresentedSubitemDeletion : Foundation.NSUrl * Action&lt;Foundation.NSError&gt; -&gt; unit" Usage="nSDocument.AccommodatePresentedSubitemDeletion (url, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("accommodatePresentedSubitemDeletionAtURL:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V9))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddWindowController">
      <MemberSignature Language="C#" Value="public virtual void AddWindowController (AppKit.NSWindowController windowController);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddWindowController(class AppKit.NSWindowController windowController) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.AddWindowController(AppKit.NSWindowController)" />
      <MemberSignature Language="F#" Value="abstract member AddWindowController : AppKit.NSWindowController -&gt; unit&#xA;override this.AddWindowController : AppKit.NSWindowController -&gt; unit" Usage="nSDocument.AddWindowController windowController" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("addWindowController:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowController" Type="AppKit.NSWindowController" />
      </Parameters>
      <Docs>
        <param name="windowController">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowsDocumentSharing">
      <MemberSignature Language="C#" Value="public virtual bool AllowsDocumentSharing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsDocumentSharing" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.AllowsDocumentSharing" />
      <MemberSignature Language="F#" Value="member this.AllowsDocumentSharing : bool" Usage="AppKit.NSDocument.AllowsDocumentSharing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("allowsDocumentSharing")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Autosave">
      <MemberSignature Language="C#" Value="public virtual void Autosave (bool autosavingIsImplicitlyCancellable, AppKit.NSDocumentCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Autosave(bool autosavingIsImplicitlyCancellable, class AppKit.NSDocumentCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.Autosave(System.Boolean,AppKit.NSDocumentCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member Autosave : bool * AppKit.NSDocumentCompletionHandler -&gt; unit&#xA;override this.Autosave : bool * AppKit.NSDocumentCompletionHandler -&gt; unit" Usage="nSDocument.Autosave (autosavingIsImplicitlyCancellable, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("autosaveWithImplicitCancellability:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autosavingIsImplicitlyCancellable" Type="System.Boolean" />
        <Parameter Name="completionHandler" Type="AppKit.NSDocumentCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNSDocumentCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="autosavingIsImplicitlyCancellable">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutosavedContentsFileUrl">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSUrl AutosavedContentsFileUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSUrl AutosavedContentsFileUrl" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.AutosavedContentsFileUrl" />
      <MemberSignature Language="F#" Value="member this.AutosavedContentsFileUrl : Foundation.NSUrl with get, set" Usage="AppKit.NSDocument.AutosavedContentsFileUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("autosavedContentsFileURL", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAutosavedContentsFileURL:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSUrl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutosaveDocument">
      <MemberSignature Language="C#" Value="public virtual void AutosaveDocument (Foundation.NSObject delegateObject, ObjCRuntime.Selector didAutosaveSelector, IntPtr contextInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AutosaveDocument(class Foundation.NSObject delegateObject, class ObjCRuntime.Selector didAutosaveSelector, native int contextInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.AutosaveDocument(Foundation.NSObject,ObjCRuntime.Selector,System.IntPtr)" />
      <MemberSignature Language="F#" Value="abstract member AutosaveDocument : Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit&#xA;override this.AutosaveDocument : Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit" Usage="nSDocument.AutosaveDocument (delegateObject, didAutosaveSelector, contextInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateObject" Type="Foundation.NSObject" />
        <Parameter Name="didAutosaveSelector" Type="ObjCRuntime.Selector" />
        <Parameter Name="contextInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="delegateObject">To be added.</param>
        <param name="didAutosaveSelector">To be added.</param>
        <param name="contextInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSavesDrafts">
      <MemberSignature Language="C#" Value="public static bool AutoSavesDrafts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoSavesDrafts" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.AutoSavesDrafts" />
      <MemberSignature Language="F#" Value="member this.AutoSavesDrafts : bool" Usage="AppKit.NSDocument.AutoSavesDrafts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("autosavesDrafts")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutosavesInPlace">
      <MemberSignature Language="C#" Value="public static bool AutosavesInPlace ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AutosavesInPlace() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.AutosavesInPlace" />
      <MemberSignature Language="F#" Value="static member AutosavesInPlace : unit -&gt; bool" Usage="AppKit.NSDocument.AutosavesInPlace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("autosavesInPlace")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutosavingFileType">
      <MemberSignature Language="C#" Value="public virtual string AutosavingFileType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AutosavingFileType" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.AutosavingFileType" />
      <MemberSignature Language="F#" Value="member this.AutosavingFileType : string" Usage="AppKit.NSDocument.AutosavingFileType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("autosavingFileType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutosavingIsImplicitlyCancellable">
      <MemberSignature Language="C#" Value="public virtual bool AutosavingIsImplicitlyCancellable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutosavingIsImplicitlyCancellable" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.AutosavingIsImplicitlyCancellable" />
      <MemberSignature Language="F#" Value="member this.AutosavingIsImplicitlyCancellable : bool" Usage="AppKit.NSDocument.AutosavingIsImplicitlyCancellable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("autosavingIsImplicitlyCancellable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackupFileUrl">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSUrl BackupFileUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSUrl BackupFileUrl" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.BackupFileUrl" />
      <MemberSignature Language="F#" Value="member this.BackupFileUrl : Foundation.NSUrl" Usage="AppKit.NSDocument.BackupFileUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("backupFileURL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSUrl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BrowseDocumentVersions">
      <MemberSignature Language="C#" Value="public virtual void BrowseDocumentVersions (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BrowseDocumentVersions(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.BrowseDocumentVersions(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member BrowseDocumentVersions : Foundation.NSObject -&gt; unit&#xA;override this.BrowseDocumentVersions : Foundation.NSObject -&gt; unit" Usage="nSDocument.BrowseDocumentVersions sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("browseDocumentVersions:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCloseDocument">
      <MemberSignature Language="C#" Value="public virtual void CanCloseDocument (Foundation.NSObject delegateObject, ObjCRuntime.Selector shouldCloseSelector, IntPtr contextInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanCloseDocument(class Foundation.NSObject delegateObject, class ObjCRuntime.Selector shouldCloseSelector, native int contextInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.CanCloseDocument(Foundation.NSObject,ObjCRuntime.Selector,System.IntPtr)" />
      <MemberSignature Language="F#" Value="abstract member CanCloseDocument : Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit&#xA;override this.CanCloseDocument : Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit" Usage="nSDocument.CanCloseDocument (delegateObject, shouldCloseSelector, contextInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateObject" Type="Foundation.NSObject" />
        <Parameter Name="shouldCloseSelector" Type="ObjCRuntime.Selector" />
        <Parameter Name="contextInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="delegateObject">To be added.</param>
        <param name="shouldCloseSelector">To be added.</param>
        <param name="contextInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConcurrentlyReadDocumentsOfType">
      <MemberSignature Language="C#" Value="public static bool CanConcurrentlyReadDocumentsOfType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanConcurrentlyReadDocumentsOfType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.CanConcurrentlyReadDocumentsOfType(System.String)" />
      <MemberSignature Language="F#" Value="static member CanConcurrentlyReadDocumentsOfType : string -&gt; bool" Usage="AppKit.NSDocument.CanConcurrentlyReadDocumentsOfType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("canConcurrentlyReadDocumentsOfType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteAsynchronously">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteAsynchronously (Foundation.NSUrl toUrl, string typeName, AppKit.NSSaveOperationType saveOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanWriteAsynchronously(class Foundation.NSUrl toUrl, string typeName, valuetype AppKit.NSSaveOperationType saveOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.CanWriteAsynchronously(Foundation.NSUrl,System.String,AppKit.NSSaveOperationType)" />
      <MemberSignature Language="F#" Value="abstract member CanWriteAsynchronously : Foundation.NSUrl * string * AppKit.NSSaveOperationType -&gt; bool&#xA;override this.CanWriteAsynchronously : Foundation.NSUrl * string * AppKit.NSSaveOperationType -&gt; bool" Usage="nSDocument.CanWriteAsynchronously (toUrl, typeName, saveOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("canAsynchronouslyWriteToURL:ofType:forSaveOperation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toUrl" Type="Foundation.NSUrl" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="saveOperation" Type="AppKit.NSSaveOperationType" />
      </Parameters>
      <Docs>
        <param name="toUrl">To be added.</param>
        <param name="typeName">To be added.</param>
        <param name="saveOperation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeCountToken">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject ChangeCountToken (AppKit.NSSaveOperationType saveOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject ChangeCountToken(valuetype AppKit.NSSaveOperationType saveOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.ChangeCountToken(AppKit.NSSaveOperationType)" />
      <MemberSignature Language="F#" Value="abstract member ChangeCountToken : AppKit.NSSaveOperationType -&gt; Foundation.NSObject&#xA;override this.ChangeCountToken : AppKit.NSSaveOperationType -&gt; Foundation.NSObject" Usage="nSDocument.ChangeCountToken saveOperation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeCountTokenForSaveOperation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="saveOperation" Type="AppKit.NSSaveOperationType" />
      </Parameters>
      <Docs>
        <param name="saveOperation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAutosavingSafety">
      <MemberSignature Language="C#" Value="public virtual bool CheckAutosavingSafety (out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAutosavingSafety([out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.CheckAutosavingSafety(Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member CheckAutosavingSafety :  -&gt; bool&#xA;override this.CheckAutosavingSafety :  -&gt; bool" Usage="nSDocument.CheckAutosavingSafety outError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("checkAutosavingSafetyAndReturnError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AppKit.NSDocument.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="nSDocument.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("close")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueActivity">
      <MemberSignature Language="C#" Value="public virtual void ContinueActivity (Action resume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ContinueActivity(class System.Action resume) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.ContinueActivity(System.Action)" />
      <MemberSignature Language="F#" Value="abstract member ContinueActivity : Action -&gt; unit&#xA;override this.ContinueActivity : Action -&gt; unit" Usage="nSDocument.ContinueActivity resume" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("continueActivityUsingBlock:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resume" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="resume">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueAsynchronousWorkOnMainThread">
      <MemberSignature Language="C#" Value="public virtual void ContinueAsynchronousWorkOnMainThread (Action work);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ContinueAsynchronousWorkOnMainThread(class System.Action work) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.ContinueAsynchronousWorkOnMainThread(System.Action)" />
      <MemberSignature Language="F#" Value="abstract member ContinueAsynchronousWorkOnMainThread : Action -&gt; unit&#xA;override this.ContinueAsynchronousWorkOnMainThread : Action -&gt; unit" Usage="nSDocument.ContinueAsynchronousWorkOnMainThread work" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("continueAsynchronousWorkOnMainThreadUsingBlock:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="work" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="work">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDraftName">
      <MemberSignature Language="C#" Value="public virtual string DefaultDraftName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultDraftName" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.DefaultDraftName" />
      <MemberSignature Language="F#" Value="member this.DefaultDraftName : string" Usage="AppKit.NSDocument.DefaultDraftName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("defaultDraftName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.DisplayName" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="AppKit.NSDocument.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("displayName")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDisplayName:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSDocument Duplicate (out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSDocument Duplicate([out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.Duplicate(Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member Duplicate :  -&gt; AppKit.NSDocument&#xA;override this.Duplicate :  -&gt; AppKit.NSDocument" Usage="nSDocument.Duplicate outError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("duplicateAndReturnError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateDocument">
      <MemberSignature Language="C#" Value="public void DuplicateDocument (AppKit.NSDocument.DuplicateCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DuplicateDocument(class AppKit.NSDocument/DuplicateCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.DuplicateDocument(AppKit.NSDocument.DuplicateCallback)" />
      <MemberSignature Language="F#" Value="member this.DuplicateDocument : AppKit.NSDocument.DuplicateCallback -&gt; unit" Usage="nSDocument.DuplicateDocument callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="AppKit.NSDocument+DuplicateCallback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateDocument">
      <MemberSignature Language="C#" Value="public virtual void DuplicateDocument (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DuplicateDocument(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.DuplicateDocument(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member DuplicateDocument : Foundation.NSObject -&gt; unit&#xA;override this.DuplicateDocument : Foundation.NSObject -&gt; unit" Usage="nSDocument.DuplicateDocument sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("duplicateDocument:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeRestorableState">
      <MemberSignature Language="C#" Value="public virtual void EncodeRestorableState (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeRestorableState(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.EncodeRestorableState(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member EncodeRestorableState : Foundation.NSCoder -&gt; unit&#xA;override this.EncodeRestorableState : Foundation.NSCoder -&gt; unit" Usage="nSDocument.EncodeRestorableState coder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeRestorableStateWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeRestorableState">
      <MemberSignature Language="C#" Value="public virtual void EncodeRestorableState (Foundation.NSCoder coder, Foundation.NSOperationQueue queue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeRestorableState(class Foundation.NSCoder coder, class Foundation.NSOperationQueue queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.EncodeRestorableState(Foundation.NSCoder,Foundation.NSOperationQueue)" />
      <MemberSignature Language="F#" Value="abstract member EncodeRestorableState : Foundation.NSCoder * Foundation.NSOperationQueue -&gt; unit&#xA;override this.EncodeRestorableState : Foundation.NSCoder * Foundation.NSOperationQueue -&gt; unit" Usage="nSDocument.EncodeRestorableState (coder, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeRestorableStateWithCoder:backgroundQueue:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
        <Parameter Name="queue" Type="Foundation.NSOperationQueue" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <param name="queue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileAttributesToWrite">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary FileAttributesToWrite (Foundation.NSUrl toUrl, string typeName, AppKit.NSSaveOperationType saveOperation, Foundation.NSUrl absoluteOriginalContentsUrl, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSDictionary FileAttributesToWrite(class Foundation.NSUrl toUrl, string typeName, valuetype AppKit.NSSaveOperationType saveOperation, class Foundation.NSUrl absoluteOriginalContentsUrl, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.FileAttributesToWrite(Foundation.NSUrl,System.String,AppKit.NSSaveOperationType,Foundation.NSUrl,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member FileAttributesToWrite : Foundation.NSUrl * string * AppKit.NSSaveOperationType * Foundation.NSUrl *  -&gt; Foundation.NSDictionary&#xA;override this.FileAttributesToWrite : Foundation.NSUrl * string * AppKit.NSSaveOperationType * Foundation.NSUrl *  -&gt; Foundation.NSDictionary" Usage="nSDocument.FileAttributesToWrite (toUrl, typeName, saveOperation, absoluteOriginalContentsUrl, outError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toUrl" Type="Foundation.NSUrl" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="saveOperation" Type="AppKit.NSSaveOperationType" />
        <Parameter Name="absoluteOriginalContentsUrl" Type="Foundation.NSUrl" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="toUrl">To be added.</param>
        <param name="typeName">To be added.</param>
        <param name="saveOperation">To be added.</param>
        <param name="absoluteOriginalContentsUrl">To be added.</param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileModificationDate">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDate FileModificationDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDate FileModificationDate" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.FileModificationDate" />
      <MemberSignature Language="F#" Value="member this.FileModificationDate : Foundation.NSDate with get, set" Usage="AppKit.NSDocument.FileModificationDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("fileModificationDate", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setFileModificationDate:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileNameExtensionForSaveOperation">
      <MemberSignature Language="C#" Value="public virtual string FileNameExtensionForSaveOperation (string typeName, AppKit.NSSaveOperationType saveOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string FileNameExtensionForSaveOperation(string typeName, valuetype AppKit.NSSaveOperationType saveOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.FileNameExtensionForSaveOperation(System.String,AppKit.NSSaveOperationType)" />
      <MemberSignature Language="F#" Value="abstract member FileNameExtensionForSaveOperation : string * AppKit.NSSaveOperationType -&gt; string&#xA;override this.FileNameExtensionForSaveOperation : string * AppKit.NSSaveOperationType -&gt; string" Usage="nSDocument.FileNameExtensionForSaveOperation (typeName, saveOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fileNameExtensionForType:saveOperation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="saveOperation" Type="AppKit.NSSaveOperationType" />
      </Parameters>
      <Docs>
        <param name="typeName">To be added.</param>
        <param name="saveOperation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileNameExtensionWasHiddenInLastRunSavePanel">
      <MemberSignature Language="C#" Value="public virtual bool FileNameExtensionWasHiddenInLastRunSavePanel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FileNameExtensionWasHiddenInLastRunSavePanel" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.FileNameExtensionWasHiddenInLastRunSavePanel" />
      <MemberSignature Language="F#" Value="member this.FileNameExtensionWasHiddenInLastRunSavePanel : bool" Usage="AppKit.NSDocument.FileNameExtensionWasHiddenInLastRunSavePanel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("fileNameExtensionWasHiddenInLastRunSavePanel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileType">
      <MemberSignature Language="C#" Value="public virtual string FileType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileType" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.FileType" />
      <MemberSignature Language="F#" Value="member this.FileType : string with get, set" Usage="AppKit.NSDocument.FileType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("fileType")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setFileType:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileTypeFromLastRunSavePanel">
      <MemberSignature Language="C#" Value="public virtual string FileTypeFromLastRunSavePanel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileTypeFromLastRunSavePanel" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.FileTypeFromLastRunSavePanel" />
      <MemberSignature Language="F#" Value="member this.FileTypeFromLastRunSavePanel : string" Usage="AppKit.NSDocument.FileTypeFromLastRunSavePanel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("fileTypeFromLastRunSavePanel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileUrl">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSUrl FileUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSUrl FileUrl" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.FileUrl" />
      <MemberSignature Language="F#" Value="member this.FileUrl : Foundation.NSUrl with get, set" Usage="AppKit.NSDocument.FileUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("fileURL", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setFileURL:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSUrl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsData">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSData GetAsData (string typeName, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSData GetAsData(string typeName, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.GetAsData(System.String,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member GetAsData : string *  -&gt; Foundation.NSData&#xA;override this.GetAsData : string *  -&gt; Foundation.NSData" Usage="nSDocument.GetAsData (typeName, outError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("dataOfType:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="typeName">To be added.</param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsFileWrapper">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSFileWrapper GetAsFileWrapper (string typeName, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSFileWrapper GetAsFileWrapper(string typeName, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.GetAsFileWrapper(System.String,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member GetAsFileWrapper : string *  -&gt; Foundation.NSFileWrapper&#xA;override this.GetAsFileWrapper : string *  -&gt; Foundation.NSFileWrapper" Usage="nSDocument.GetAsFileWrapper (typeName, outError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fileWrapperOfType:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSFileWrapper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="typeName">To be added.</param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasUnautosavedChanges">
      <MemberSignature Language="C#" Value="public virtual bool HasUnautosavedChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasUnautosavedChanges" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.HasUnautosavedChanges" />
      <MemberSignature Language="F#" Value="member this.HasUnautosavedChanges : bool" Usage="AppKit.NSDocument.HasUnautosavedChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("hasUnautosavedChanges")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasUndoManager">
      <MemberSignature Language="C#" Value="public virtual bool HasUndoManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasUndoManager" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.HasUndoManager" />
      <MemberSignature Language="F#" Value="member this.HasUndoManager : bool with get, set" Usage="AppKit.NSDocument.HasUndoManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("hasUndoManager")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setHasUndoManager:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateRestorableState">
      <MemberSignature Language="C#" Value="public virtual void InvalidateRestorableState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateRestorableState() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.InvalidateRestorableState" />
      <MemberSignature Language="F#" Value="abstract member InvalidateRestorableState : unit -&gt; unit&#xA;override this.InvalidateRestorableState : unit -&gt; unit" Usage="nSDocument.InvalidateRestorableState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("invalidateRestorableState")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowsingVersions">
      <MemberSignature Language="C#" Value="public virtual bool IsBrowsingVersions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowsingVersions" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.IsBrowsingVersions" />
      <MemberSignature Language="F#" Value="member this.IsBrowsingVersions : bool" Usage="AppKit.NSDocument.IsBrowsingVersions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isBrowsingVersions")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDocumentEdited">
      <MemberSignature Language="C#" Value="public virtual bool IsDocumentEdited { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDocumentEdited" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.IsDocumentEdited" />
      <MemberSignature Language="F#" Value="member this.IsDocumentEdited : bool" Usage="AppKit.NSDocument.IsDocumentEdited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isDocumentEdited")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDraft">
      <MemberSignature Language="C#" Value="public virtual bool IsDraft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDraft" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.IsDraft" />
      <MemberSignature Language="F#" Value="member this.IsDraft : bool with get, set" Usage="AppKit.NSDocument.IsDraft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isDraft")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDraft:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEntireFileLoaded">
      <MemberSignature Language="C#" Value="public virtual bool IsEntireFileLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEntireFileLoaded" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.IsEntireFileLoaded" />
      <MemberSignature Language="F#" Value="member this.IsEntireFileLoaded : bool" Usage="AppKit.NSDocument.IsEntireFileLoaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isEntireFileLoaded")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInViewingMode">
      <MemberSignature Language="C#" Value="public virtual bool IsInViewingMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInViewingMode" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.IsInViewingMode" />
      <MemberSignature Language="F#" Value="member this.IsInViewingMode : bool" Usage="AppKit.NSDocument.IsInViewingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isInViewingMode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocked">
      <MemberSignature Language="C#" Value="public virtual bool IsLocked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocked" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.IsLocked" />
      <MemberSignature Language="F#" Value="member this.IsLocked : bool" Usage="AppKit.NSDocument.IsLocked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isLocked")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNativeType">
      <MemberSignature Language="C#" Value="public static bool IsNativeType (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNativeType(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.IsNativeType(System.String)" />
      <MemberSignature Language="F#" Value="static member IsNativeType : string -&gt; bool" Usage="AppKit.NSDocument.IsNativeType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("isNativeType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepBackupFile">
      <MemberSignature Language="C#" Value="public virtual bool KeepBackupFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool KeepBackupFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.KeepBackupFile" />
      <MemberSignature Language="F#" Value="abstract member KeepBackupFile : unit -&gt; bool&#xA;override this.KeepBackupFile : unit -&gt; bool" Usage="nSDocument.KeepBackupFile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("keepBackupFile")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockDocument">
      <MemberSignature Language="C#" Value="public virtual void LockDocument (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockDocument(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.LockDocument(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member LockDocument : Foundation.NSObject -&gt; unit&#xA;override this.LockDocument : Foundation.NSObject -&gt; unit" Usage="nSDocument.LockDocument sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("lockDocument:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockDocumentWithCompletionHandler">
      <MemberSignature Language="C#" Value="public virtual void LockDocumentWithCompletionHandler (AppKit.NSDocumentLockDocumentCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockDocumentWithCompletionHandler(class AppKit.NSDocumentLockDocumentCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.LockDocumentWithCompletionHandler(AppKit.NSDocumentLockDocumentCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member LockDocumentWithCompletionHandler : AppKit.NSDocumentLockDocumentCompletionHandler -&gt; unit&#xA;override this.LockDocumentWithCompletionHandler : AppKit.NSDocumentLockDocumentCompletionHandler -&gt; unit" Usage="nSDocument.LockDocumentWithCompletionHandler completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("lockDocumentWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="AppKit.NSDocumentLockDocumentCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNSDocumentLockDocumentCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockWithCompletionHandler">
      <MemberSignature Language="C#" Value="public virtual void LockWithCompletionHandler (AppKit.NSDocumentLockCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockWithCompletionHandler(class AppKit.NSDocumentLockCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.LockWithCompletionHandler(AppKit.NSDocumentLockCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member LockWithCompletionHandler : AppKit.NSDocumentLockCompletionHandler -&gt; unit&#xA;override this.LockWithCompletionHandler : AppKit.NSDocumentLockCompletionHandler -&gt; unit" Usage="nSDocument.LockWithCompletionHandler completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("lockWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="AppKit.NSDocumentLockCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNSDocumentLockCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeWindowControllers">
      <MemberSignature Language="C#" Value="public virtual void MakeWindowControllers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MakeWindowControllers() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.MakeWindowControllers" />
      <MemberSignature Language="F#" Value="abstract member MakeWindowControllers : unit -&gt; unit&#xA;override this.MakeWindowControllers : unit -&gt; unit" Usage="nSDocument.MakeWindowControllers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("makeWindowControllers")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveDocument">
      <MemberSignature Language="C#" Value="public virtual void MoveDocument (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveDocument(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.MoveDocument(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member MoveDocument : Foundation.NSObject -&gt; unit&#xA;override this.MoveDocument : Foundation.NSObject -&gt; unit" Usage="nSDocument.MoveDocument sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("moveDocument:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveDocumentToUbiquityContainer">
      <MemberSignature Language="C#" Value="public virtual void MoveDocumentToUbiquityContainer (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveDocumentToUbiquityContainer(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.MoveDocumentToUbiquityContainer(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member MoveDocumentToUbiquityContainer : Foundation.NSObject -&gt; unit&#xA;override this.MoveDocumentToUbiquityContainer : Foundation.NSObject -&gt; unit" Usage="nSDocument.MoveDocumentToUbiquityContainer sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("moveDocumentToUbiquityContainer:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveDocumentWithCompletionHandler">
      <MemberSignature Language="C#" Value="public virtual void MoveDocumentWithCompletionHandler (AppKit.NSDocumentMoveCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveDocumentWithCompletionHandler(class AppKit.NSDocumentMoveCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.MoveDocumentWithCompletionHandler(AppKit.NSDocumentMoveCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member MoveDocumentWithCompletionHandler : AppKit.NSDocumentMoveCompletionHandler -&gt; unit&#xA;override this.MoveDocumentWithCompletionHandler : AppKit.NSDocumentMoveCompletionHandler -&gt; unit" Usage="nSDocument.MoveDocumentWithCompletionHandler completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("moveDocumentWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="AppKit.NSDocumentMoveCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNSDocumentMoveCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToUrl">
      <MemberSignature Language="C#" Value="public virtual void MoveToUrl (Foundation.NSUrl url, AppKit.NSDocumentMoveToUrlCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveToUrl(class Foundation.NSUrl url, class AppKit.NSDocumentMoveToUrlCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.MoveToUrl(Foundation.NSUrl,AppKit.NSDocumentMoveToUrlCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member MoveToUrl : Foundation.NSUrl * AppKit.NSDocumentMoveToUrlCompletionHandler -&gt; unit&#xA;override this.MoveToUrl : Foundation.NSUrl * AppKit.NSDocumentMoveToUrlCompletionHandler -&gt; unit" Usage="nSDocument.MoveToUrl (url, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("moveToURL:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="completionHandler" Type="AppKit.NSDocumentMoveToUrlCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNSDocumentMoveToUrlCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectDidBeginEditing">
      <MemberSignature Language="C#" Value="public virtual void ObjectDidBeginEditing (AppKit.INSEditor editor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ObjectDidBeginEditing(class AppKit.INSEditor editor) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.ObjectDidBeginEditing(AppKit.INSEditor)" />
      <MemberSignature Language="F#" Value="abstract member ObjectDidBeginEditing : AppKit.INSEditor -&gt; unit&#xA;override this.ObjectDidBeginEditing : AppKit.INSEditor -&gt; unit" Usage="nSDocument.ObjectDidBeginEditing editor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("objectDidBeginEditing:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="AppKit.INSEditor" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectDidEndEditing">
      <MemberSignature Language="C#" Value="public virtual void ObjectDidEndEditing (AppKit.INSEditor editor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ObjectDidEndEditing(class AppKit.INSEditor editor) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.ObjectDidEndEditing(AppKit.INSEditor)" />
      <MemberSignature Language="F#" Value="override this.ObjectDidEndEditing : AppKit.INSEditor -&gt; unit" Usage="nSDocument.ObjectDidEndEditing editor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("objectDidEndEditing:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="AppKit.INSEditor" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PDFPrintOperation">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSPrintOperation PDFPrintOperation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSPrintOperation PDFPrintOperation" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.PDFPrintOperation" />
      <MemberSignature Language="F#" Value="member this.PDFPrintOperation : AppKit.NSPrintOperation" Usage="AppKit.NSDocument.PDFPrintOperation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("PDFPrintOperation", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSPrintOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformActivity">
      <MemberSignature Language="C#" Value="public virtual void PerformActivity (bool waitSynchronously, Action activityCompletionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformActivity(bool waitSynchronously, class System.Action activityCompletionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PerformActivity(System.Boolean,System.Action)" />
      <MemberSignature Language="F#" Value="abstract member PerformActivity : bool * Action -&gt; unit&#xA;override this.PerformActivity : bool * Action -&gt; unit" Usage="nSDocument.PerformActivity (waitSynchronously, activityCompletionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("performActivityWithSynchronousWaiting:usingBlock:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitSynchronously" Type="System.Boolean" />
        <Parameter Name="activityCompletionHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="waitSynchronously">To be added.</param>
        <param name="activityCompletionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformAsynchronousFileAccess">
      <MemberSignature Language="C#" Value="public virtual void PerformAsynchronousFileAccess (Action ioCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformAsynchronousFileAccess(class System.Action ioCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PerformAsynchronousFileAccess(System.Action)" />
      <MemberSignature Language="F#" Value="abstract member PerformAsynchronousFileAccess : Action -&gt; unit&#xA;override this.PerformAsynchronousFileAccess : Action -&gt; unit" Usage="nSDocument.PerformAsynchronousFileAccess ioCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("performAsynchronousFileAccessUsingBlock:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ioCode" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ioCode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSynchronousFileAccess">
      <MemberSignature Language="C#" Value="public virtual void PerformSynchronousFileAccess (Action fileAccessCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformSynchronousFileAccess(class System.Action fileAccessCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PerformSynchronousFileAccess(System.Action)" />
      <MemberSignature Language="F#" Value="abstract member PerformSynchronousFileAccess : Action -&gt; unit&#xA;override this.PerformSynchronousFileAccess : Action -&gt; unit" Usage="nSDocument.PerformSynchronousFileAccess fileAccessCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("performSynchronousFileAccessUsingBlock:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileAccessCallback" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="fileAccessCallback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PesentedItemOperationQueue">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSOperationQueue PesentedItemOperationQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSOperationQueue PesentedItemOperationQueue" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.PesentedItemOperationQueue" />
      <MemberSignature Language="F#" Value="member this.PesentedItemOperationQueue : Foundation.NSOperationQueue" Usage="AppKit.NSDocument.PesentedItemOperationQueue" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Foundation.INSFilePresenter.PesentedItemOperationQueue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("presentedItemOperationQueue", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSOperationQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public virtual void Prepare (AppKit.NSSharingServicePicker sharingServicePicker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class AppKit.NSSharingServicePicker sharingServicePicker) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.Prepare(AppKit.NSSharingServicePicker)" />
      <MemberSignature Language="F#" Value="abstract member Prepare : AppKit.NSSharingServicePicker -&gt; unit&#xA;override this.Prepare : AppKit.NSSharingServicePicker -&gt; unit" Usage="nSDocument.Prepare sharingServicePicker" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("prepareSharingServicePicker:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sharingServicePicker" Type="AppKit.NSSharingServicePicker" />
      </Parameters>
      <Docs>
        <param name="sharingServicePicker">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreparePageLayout">
      <MemberSignature Language="C#" Value="public virtual bool PreparePageLayout (AppKit.NSPageLayout pageLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PreparePageLayout(class AppKit.NSPageLayout pageLayout) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PreparePageLayout(AppKit.NSPageLayout)" />
      <MemberSignature Language="F#" Value="abstract member PreparePageLayout : AppKit.NSPageLayout -&gt; bool&#xA;override this.PreparePageLayout : AppKit.NSPageLayout -&gt; bool" Usage="nSDocument.PreparePageLayout pageLayout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("preparePageLayout:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageLayout" Type="AppKit.NSPageLayout" />
      </Parameters>
      <Docs>
        <param name="pageLayout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareSavePanel">
      <MemberSignature Language="C#" Value="public virtual bool PrepareSavePanel (AppKit.NSSavePanel savePanel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PrepareSavePanel(class AppKit.NSSavePanel savePanel) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PrepareSavePanel(AppKit.NSSavePanel)" />
      <MemberSignature Language="F#" Value="abstract member PrepareSavePanel : AppKit.NSSavePanel -&gt; bool&#xA;override this.PrepareSavePanel : AppKit.NSSavePanel -&gt; bool" Usage="nSDocument.PrepareSavePanel savePanel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("prepareSavePanel:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savePanel" Type="AppKit.NSSavePanel" />
      </Parameters>
      <Docs>
        <param name="savePanel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentedItemChanged">
      <MemberSignature Language="C#" Value="public virtual void PresentedItemChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PresentedItemChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PresentedItemChanged" />
      <MemberSignature Language="F#" Value="abstract member PresentedItemChanged : unit -&gt; unit&#xA;override this.PresentedItemChanged : unit -&gt; unit" Usage="nSDocument.PresentedItemChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("presentedItemDidChange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentedItemChangedUbiquityAttributes">
      <MemberSignature Language="C#" Value="public virtual void PresentedItemChangedUbiquityAttributes (Foundation.NSSet&lt;Foundation.NSString&gt; attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PresentedItemChangedUbiquityAttributes(class Foundation.NSSet`1&lt;class Foundation.NSString&gt; attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PresentedItemChangedUbiquityAttributes(Foundation.NSSet{Foundation.NSString})" />
      <MemberSignature Language="F#" Value="abstract member PresentedItemChangedUbiquityAttributes : Foundation.NSSet&lt;Foundation.NSString&gt; -&gt; unit&#xA;override this.PresentedItemChangedUbiquityAttributes : Foundation.NSSet&lt;Foundation.NSString&gt; -&gt; unit" Usage="nSDocument.PresentedItemChangedUbiquityAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("presentedItemDidChangeUbiquityAttributes:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="Foundation.NSSet&lt;Foundation.NSString&gt;" />
      </Parameters>
      <Docs>
        <param name="attributes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentedItemGainedVersion">
      <MemberSignature Language="C#" Value="public virtual void PresentedItemGainedVersion (Foundation.NSFileVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PresentedItemGainedVersion(class Foundation.NSFileVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PresentedItemGainedVersion(Foundation.NSFileVersion)" />
      <MemberSignature Language="F#" Value="abstract member PresentedItemGainedVersion : Foundation.NSFileVersion -&gt; unit&#xA;override this.PresentedItemGainedVersion : Foundation.NSFileVersion -&gt; unit" Usage="nSDocument.PresentedItemGainedVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("presentedItemDidGainVersion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="Foundation.NSFileVersion" />
      </Parameters>
      <Docs>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentedItemLostVersion">
      <MemberSignature Language="C#" Value="public virtual void PresentedItemLostVersion (Foundation.NSFileVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PresentedItemLostVersion(class Foundation.NSFileVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PresentedItemLostVersion(Foundation.NSFileVersion)" />
      <MemberSignature Language="F#" Value="abstract member PresentedItemLostVersion : Foundation.NSFileVersion -&gt; unit&#xA;override this.PresentedItemLostVersion : Foundation.NSFileVersion -&gt; unit" Usage="nSDocument.PresentedItemLostVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("presentedItemDidLoseVersion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="Foundation.NSFileVersion" />
      </Parameters>
      <Docs>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentedItemMoved">
      <MemberSignature Language="C#" Value="public virtual void PresentedItemMoved (Foundation.NSUrl newURL);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PresentedItemMoved(class Foundation.NSUrl newURL) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PresentedItemMoved(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="abstract member PresentedItemMoved : Foundation.NSUrl -&gt; unit&#xA;override this.PresentedItemMoved : Foundation.NSUrl -&gt; unit" Usage="nSDocument.PresentedItemMoved newURL" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("presentedItemDidMoveToURL:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newURL" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="newURL">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentedItemObservedUbiquityAttributes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSSet&lt;Foundation.NSString&gt; PresentedItemObservedUbiquityAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSSet`1&lt;class Foundation.NSString&gt; PresentedItemObservedUbiquityAttributes" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.PresentedItemObservedUbiquityAttributes" />
      <MemberSignature Language="F#" Value="member this.PresentedItemObservedUbiquityAttributes : Foundation.NSSet&lt;Foundation.NSString&gt;" Usage="AppKit.NSDocument.PresentedItemObservedUbiquityAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("observedPresentedItemUbiquityAttributes", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSSet&lt;Foundation.NSString&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentedItemResolveConflictVersion">
      <MemberSignature Language="C#" Value="public virtual void PresentedItemResolveConflictVersion (Foundation.NSFileVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PresentedItemResolveConflictVersion(class Foundation.NSFileVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PresentedItemResolveConflictVersion(Foundation.NSFileVersion)" />
      <MemberSignature Language="F#" Value="abstract member PresentedItemResolveConflictVersion : Foundation.NSFileVersion -&gt; unit&#xA;override this.PresentedItemResolveConflictVersion : Foundation.NSFileVersion -&gt; unit" Usage="nSDocument.PresentedItemResolveConflictVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("presentedItemDidResolveConflictVersion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="Foundation.NSFileVersion" />
      </Parameters>
      <Docs>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentedItemURL">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSUrl PresentedItemURL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSUrl PresentedItemURL" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.PresentedItemURL" />
      <MemberSignature Language="F#" Value="member this.PresentedItemURL : Foundation.NSUrl" Usage="AppKit.NSDocument.PresentedItemURL" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Foundation.INSFilePresenter.PresentedItemURL</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("presentedItemURL", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSUrl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentedSubitemAppeared">
      <MemberSignature Language="C#" Value="public virtual void PresentedSubitemAppeared (Foundation.NSUrl atUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PresentedSubitemAppeared(class Foundation.NSUrl atUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PresentedSubitemAppeared(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="abstract member PresentedSubitemAppeared : Foundation.NSUrl -&gt; unit&#xA;override this.PresentedSubitemAppeared : Foundation.NSUrl -&gt; unit" Usage="nSDocument.PresentedSubitemAppeared atUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("presentedSubitemDidAppearAtURL:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="atUrl" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="atUrl">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentedSubitemChanged">
      <MemberSignature Language="C#" Value="public virtual void PresentedSubitemChanged (Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PresentedSubitemChanged(class Foundation.NSUrl url) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PresentedSubitemChanged(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="abstract member PresentedSubitemChanged : Foundation.NSUrl -&gt; unit&#xA;override this.PresentedSubitemChanged : Foundation.NSUrl -&gt; unit" Usage="nSDocument.PresentedSubitemChanged url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("presentedSubitemDidChangeAtURL:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentedSubitemGainedVersion">
      <MemberSignature Language="C#" Value="public virtual void PresentedSubitemGainedVersion (Foundation.NSUrl url, Foundation.NSFileVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PresentedSubitemGainedVersion(class Foundation.NSUrl url, class Foundation.NSFileVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PresentedSubitemGainedVersion(Foundation.NSUrl,Foundation.NSFileVersion)" />
      <MemberSignature Language="F#" Value="abstract member PresentedSubitemGainedVersion : Foundation.NSUrl * Foundation.NSFileVersion -&gt; unit&#xA;override this.PresentedSubitemGainedVersion : Foundation.NSUrl * Foundation.NSFileVersion -&gt; unit" Usage="nSDocument.PresentedSubitemGainedVersion (url, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("presentedSubitemAtURL:didGainVersion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="version" Type="Foundation.NSFileVersion" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentedSubitemLostVersion">
      <MemberSignature Language="C#" Value="public virtual void PresentedSubitemLostVersion (Foundation.NSUrl url, Foundation.NSFileVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PresentedSubitemLostVersion(class Foundation.NSUrl url, class Foundation.NSFileVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PresentedSubitemLostVersion(Foundation.NSUrl,Foundation.NSFileVersion)" />
      <MemberSignature Language="F#" Value="abstract member PresentedSubitemLostVersion : Foundation.NSUrl * Foundation.NSFileVersion -&gt; unit&#xA;override this.PresentedSubitemLostVersion : Foundation.NSUrl * Foundation.NSFileVersion -&gt; unit" Usage="nSDocument.PresentedSubitemLostVersion (url, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("presentedSubitemAtURL:didLoseVersion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="version" Type="Foundation.NSFileVersion" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentedSubitemMoved">
      <MemberSignature Language="C#" Value="public virtual void PresentedSubitemMoved (Foundation.NSUrl oldURL, Foundation.NSUrl newURL);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PresentedSubitemMoved(class Foundation.NSUrl oldURL, class Foundation.NSUrl newURL) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PresentedSubitemMoved(Foundation.NSUrl,Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="abstract member PresentedSubitemMoved : Foundation.NSUrl * Foundation.NSUrl -&gt; unit&#xA;override this.PresentedSubitemMoved : Foundation.NSUrl * Foundation.NSUrl -&gt; unit" Usage="nSDocument.PresentedSubitemMoved (oldURL, newURL)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("presentedSubitemAtURL:didMoveToURL:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldURL" Type="Foundation.NSUrl" />
        <Parameter Name="newURL" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="oldURL">To be added.</param>
        <param name="newURL">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentedSubitemResolvedConflictVersion">
      <MemberSignature Language="C#" Value="public virtual void PresentedSubitemResolvedConflictVersion (Foundation.NSUrl url, Foundation.NSFileVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PresentedSubitemResolvedConflictVersion(class Foundation.NSUrl url, class Foundation.NSFileVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PresentedSubitemResolvedConflictVersion(Foundation.NSUrl,Foundation.NSFileVersion)" />
      <MemberSignature Language="F#" Value="abstract member PresentedSubitemResolvedConflictVersion : Foundation.NSUrl * Foundation.NSFileVersion -&gt; unit&#xA;override this.PresentedSubitemResolvedConflictVersion : Foundation.NSUrl * Foundation.NSFileVersion -&gt; unit" Usage="nSDocument.PresentedSubitemResolvedConflictVersion (url, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("presentedSubitemAtURL:didResolveConflictVersion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="version" Type="Foundation.NSFileVersion" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentError">
      <MemberSignature Language="C#" Value="public virtual bool PresentError (Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PresentError(class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PresentError(Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member PresentError : Foundation.NSError -&gt; bool&#xA;override this.PresentError : Foundation.NSError -&gt; bool" Usage="nSDocument.PresentError error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("presentError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentError">
      <MemberSignature Language="C#" Value="public virtual void PresentError (Foundation.NSError error, AppKit.NSWindow window, Foundation.NSObject delegateObject, ObjCRuntime.Selector didPresentSelector, IntPtr contextInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PresentError(class Foundation.NSError error, class AppKit.NSWindow window, class Foundation.NSObject delegateObject, class ObjCRuntime.Selector didPresentSelector, native int contextInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PresentError(Foundation.NSError,AppKit.NSWindow,Foundation.NSObject,ObjCRuntime.Selector,System.IntPtr)" />
      <MemberSignature Language="F#" Value="abstract member PresentError : Foundation.NSError * AppKit.NSWindow * Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit&#xA;override this.PresentError : Foundation.NSError * AppKit.NSWindow * Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit" Usage="nSDocument.PresentError (error, window, delegateObject, didPresentSelector, contextInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("presentError:modalForWindow:delegate:didPresentSelector:contextInfo:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="Foundation.NSError" />
        <Parameter Name="window" Type="AppKit.NSWindow" />
        <Parameter Name="delegateObject" Type="Foundation.NSObject" />
        <Parameter Name="didPresentSelector" Type="ObjCRuntime.Selector" />
        <Parameter Name="contextInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <param name="window">To be added.</param>
        <param name="delegateObject">To be added.</param>
        <param name="didPresentSelector">To be added.</param>
        <param name="contextInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreservesVersions">
      <MemberSignature Language="C#" Value="public static bool PreservesVersions ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool PreservesVersions() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PreservesVersions" />
      <MemberSignature Language="F#" Value="static member PreservesVersions : unit -&gt; bool" Usage="AppKit.NSDocument.PreservesVersions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("preservesVersions")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryPresentedItemUrl">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSUrl PrimaryPresentedItemUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSUrl PrimaryPresentedItemUrl" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.PrimaryPresentedItemUrl" />
      <MemberSignature Language="F#" Value="member this.PrimaryPresentedItemUrl : Foundation.NSUrl" Usage="AppKit.NSDocument.PrimaryPresentedItemUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("primaryPresentedItemURL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSUrl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintDocument">
      <MemberSignature Language="C#" Value="public virtual void PrintDocument (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintDocument(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PrintDocument(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member PrintDocument : Foundation.NSObject -&gt; unit&#xA;override this.PrintDocument : Foundation.NSObject -&gt; unit" Usage="nSDocument.PrintDocument sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("printDocument:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintDocument">
      <MemberSignature Language="C#" Value="public virtual void PrintDocument (Foundation.NSDictionary printSettings, bool showPrintPanel, Foundation.NSObject delegateObject, ObjCRuntime.Selector didPrintSelector, IntPtr contextInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintDocument(class Foundation.NSDictionary printSettings, bool showPrintPanel, class Foundation.NSObject delegateObject, class ObjCRuntime.Selector didPrintSelector, native int contextInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PrintDocument(Foundation.NSDictionary,System.Boolean,Foundation.NSObject,ObjCRuntime.Selector,System.IntPtr)" />
      <MemberSignature Language="F#" Value="abstract member PrintDocument : Foundation.NSDictionary * bool * Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit&#xA;override this.PrintDocument : Foundation.NSDictionary * bool * Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit" Usage="nSDocument.PrintDocument (printSettings, showPrintPanel, delegateObject, didPrintSelector, contextInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printSettings" Type="Foundation.NSDictionary" />
        <Parameter Name="showPrintPanel" Type="System.Boolean" />
        <Parameter Name="delegateObject" Type="Foundation.NSObject" />
        <Parameter Name="didPrintSelector" Type="ObjCRuntime.Selector" />
        <Parameter Name="contextInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="printSettings">To be added.</param>
        <param name="showPrintPanel">To be added.</param>
        <param name="delegateObject">To be added.</param>
        <param name="didPrintSelector">To be added.</param>
        <param name="contextInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintInfo">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSPrintInfo PrintInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSPrintInfo PrintInfo" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.PrintInfo" />
      <MemberSignature Language="F#" Value="member this.PrintInfo : AppKit.NSPrintInfo with get, set" Usage="AppKit.NSDocument.PrintInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("printInfo", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setPrintInfo:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSPrintInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOperation">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSPrintOperation PrintOperation (Foundation.NSDictionary printSettings, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AppKit.NSPrintOperation PrintOperation(class Foundation.NSDictionary printSettings, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.PrintOperation(Foundation.NSDictionary,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member PrintOperation : Foundation.NSDictionary *  -&gt; AppKit.NSPrintOperation&#xA;override this.PrintOperation : Foundation.NSDictionary *  -&gt; AppKit.NSPrintOperation" Usage="nSDocument.PrintOperation (printSettings, outError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("printOperationWithSettings:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSPrintOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printSettings" Type="Foundation.NSDictionary" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="printSettings">To be added.</param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadableTypes">
      <MemberSignature Language="C#" Value="public static string[] ReadableTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string[] ReadableTypes" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.ReadableTypes" />
      <MemberSignature Language="F#" Value="member this.ReadableTypes : string[]" Usage="AppKit.NSDocument.ReadableTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("readableTypes", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromData">
      <MemberSignature Language="C#" Value="public virtual bool ReadFromData (Foundation.NSData data, string typeName, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadFromData(class Foundation.NSData data, string typeName, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.ReadFromData(Foundation.NSData,System.String,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member ReadFromData : Foundation.NSData * string *  -&gt; bool&#xA;override this.ReadFromData : Foundation.NSData * string *  -&gt; bool" Usage="nSDocument.ReadFromData (data, typeName, outError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("readFromData:ofType:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Foundation.NSData" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="typeName">To be added.</param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromFileWrapper">
      <MemberSignature Language="C#" Value="public virtual bool ReadFromFileWrapper (Foundation.NSFileWrapper fileWrapper, string typeName, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadFromFileWrapper(class Foundation.NSFileWrapper fileWrapper, string typeName, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.ReadFromFileWrapper(Foundation.NSFileWrapper,System.String,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member ReadFromFileWrapper : Foundation.NSFileWrapper * string *  -&gt; bool&#xA;override this.ReadFromFileWrapper : Foundation.NSFileWrapper * string *  -&gt; bool" Usage="nSDocument.ReadFromFileWrapper (fileWrapper, typeName, outError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("readFromFileWrapper:ofType:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileWrapper" Type="Foundation.NSFileWrapper" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fileWrapper">To be added.</param>
        <param name="typeName">To be added.</param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromUrl">
      <MemberSignature Language="C#" Value="public virtual bool ReadFromUrl (Foundation.NSUrl url, string typeName, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadFromUrl(class Foundation.NSUrl url, string typeName, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.ReadFromUrl(Foundation.NSUrl,System.String,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member ReadFromUrl : Foundation.NSUrl * string *  -&gt; bool&#xA;override this.ReadFromUrl : Foundation.NSUrl * string *  -&gt; bool" Usage="nSDocument.ReadFromUrl (url, typeName, outError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("readFromURL:ofType:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="typeName">To be added.</param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelinquishPresentedItemToReader">
      <MemberSignature Language="C#" Value="public virtual void RelinquishPresentedItemToReader (Foundation.NSFilePresenterReacquirer readerAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RelinquishPresentedItemToReader(class Foundation.NSFilePresenterReacquirer readerAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.RelinquishPresentedItemToReader(Foundation.NSFilePresenterReacquirer)" />
      <MemberSignature Language="F#" Value="abstract member RelinquishPresentedItemToReader : Foundation.NSFilePresenterReacquirer -&gt; unit&#xA;override this.RelinquishPresentedItemToReader : Foundation.NSFilePresenterReacquirer -&gt; unit" Usage="nSDocument.RelinquishPresentedItemToReader readerAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("relinquishPresentedItemToReader:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readerAction" Type="Foundation.NSFilePresenterReacquirer">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNSFilePresenterReacquirer))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="readerAction">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelinquishPresentedItemToWriter">
      <MemberSignature Language="C#" Value="public virtual void RelinquishPresentedItemToWriter (Foundation.NSFilePresenterReacquirer writerAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RelinquishPresentedItemToWriter(class Foundation.NSFilePresenterReacquirer writerAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.RelinquishPresentedItemToWriter(Foundation.NSFilePresenterReacquirer)" />
      <MemberSignature Language="F#" Value="abstract member RelinquishPresentedItemToWriter : Foundation.NSFilePresenterReacquirer -&gt; unit&#xA;override this.RelinquishPresentedItemToWriter : Foundation.NSFilePresenterReacquirer -&gt; unit" Usage="nSDocument.RelinquishPresentedItemToWriter writerAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("relinquishPresentedItemToWriter:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writerAction" Type="Foundation.NSFilePresenterReacquirer">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNSFilePresenterReacquirer))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="writerAction">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveWindowController">
      <MemberSignature Language="C#" Value="public virtual void RemoveWindowController (AppKit.NSWindowController windowController);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveWindowController(class AppKit.NSWindowController windowController) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.RemoveWindowController(AppKit.NSWindowController)" />
      <MemberSignature Language="F#" Value="abstract member RemoveWindowController : AppKit.NSWindowController -&gt; unit&#xA;override this.RemoveWindowController : AppKit.NSWindowController -&gt; unit" Usage="nSDocument.RemoveWindowController windowController" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("removeWindowController:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowController" Type="AppKit.NSWindowController" />
      </Parameters>
      <Docs>
        <param name="windowController">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameDocument">
      <MemberSignature Language="C#" Value="public virtual void RenameDocument (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenameDocument(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.RenameDocument(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member RenameDocument : Foundation.NSObject -&gt; unit&#xA;override this.RenameDocument : Foundation.NSObject -&gt; unit" Usage="nSDocument.RenameDocument sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("renameDocument:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestorableStateKeyPaths">
      <MemberSignature Language="C#" Value="public static string[] RestorableStateKeyPaths ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] RestorableStateKeyPaths() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.RestorableStateKeyPaths" />
      <MemberSignature Language="F#" Value="static member RestorableStateKeyPaths : unit -&gt; string[]" Usage="AppKit.NSDocument.RestorableStateKeyPaths " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("restorableStateKeyPaths")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreDocumentWindow">
      <MemberSignature Language="C#" Value="public virtual void RestoreDocumentWindow (string identifier, Foundation.NSCoder state, AppKit.NSWindowCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RestoreDocumentWindow(string identifier, class Foundation.NSCoder state, class AppKit.NSWindowCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.RestoreDocumentWindow(System.String,Foundation.NSCoder,AppKit.NSWindowCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member RestoreDocumentWindow : string * Foundation.NSCoder * AppKit.NSWindowCompletionHandler -&gt; unit&#xA;override this.RestoreDocumentWindow : string * Foundation.NSCoder * AppKit.NSWindowCompletionHandler -&gt; unit" Usage="nSDocument.RestoreDocumentWindow (identifier, state, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("restoreDocumentWindowWithIdentifier:state:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="state" Type="Foundation.NSCoder" />
        <Parameter Name="completionHandler" Type="AppKit.NSWindowCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNSWindowCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="identifier">To be added.</param>
        <param name="state">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreState">
      <MemberSignature Language="C#" Value="public virtual void RestoreState (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RestoreState(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.RestoreState(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member RestoreState : Foundation.NSCoder -&gt; unit&#xA;override this.RestoreState : Foundation.NSCoder -&gt; unit" Usage="nSDocument.RestoreState coder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("restoreStateWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreUserActivityState">
      <MemberSignature Language="C#" Value="public virtual void RestoreUserActivityState (Foundation.NSUserActivity userActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RestoreUserActivityState(class Foundation.NSUserActivity userActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.RestoreUserActivityState(Foundation.NSUserActivity)" />
      <MemberSignature Language="F#" Value="abstract member RestoreUserActivityState : Foundation.NSUserActivity -&gt; unit&#xA;override this.RestoreUserActivityState : Foundation.NSUserActivity -&gt; unit" Usage="nSDocument.RestoreUserActivityState userActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("restoreUserActivityState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userActivity" Type="Foundation.NSUserActivity" />
      </Parameters>
      <Docs>
        <param name="userActivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevertDocumentToSaved">
      <MemberSignature Language="C#" Value="public virtual void RevertDocumentToSaved (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevertDocumentToSaved(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.RevertDocumentToSaved(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member RevertDocumentToSaved : Foundation.NSObject -&gt; unit&#xA;override this.RevertDocumentToSaved : Foundation.NSObject -&gt; unit" Usage="nSDocument.RevertDocumentToSaved sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("revertDocumentToSaved:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevertToContentsOfUrl">
      <MemberSignature Language="C#" Value="public virtual bool RevertToContentsOfUrl (Foundation.NSUrl url, string typeName, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RevertToContentsOfUrl(class Foundation.NSUrl url, string typeName, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.RevertToContentsOfUrl(Foundation.NSUrl,System.String,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member RevertToContentsOfUrl : Foundation.NSUrl * string *  -&gt; bool&#xA;override this.RevertToContentsOfUrl : Foundation.NSUrl * string *  -&gt; bool" Usage="nSDocument.RevertToContentsOfUrl (url, typeName, outError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("revertToContentsOfURL:ofType:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="typeName">To be added.</param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunModalPageLayout">
      <MemberSignature Language="C#" Value="public virtual void RunModalPageLayout (AppKit.NSPrintInfo printInfo, Foundation.NSObject delegateObject, ObjCRuntime.Selector didRunSelector, IntPtr contextInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunModalPageLayout(class AppKit.NSPrintInfo printInfo, class Foundation.NSObject delegateObject, class ObjCRuntime.Selector didRunSelector, native int contextInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.RunModalPageLayout(AppKit.NSPrintInfo,Foundation.NSObject,ObjCRuntime.Selector,System.IntPtr)" />
      <MemberSignature Language="F#" Value="abstract member RunModalPageLayout : AppKit.NSPrintInfo * Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit&#xA;override this.RunModalPageLayout : AppKit.NSPrintInfo * Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit" Usage="nSDocument.RunModalPageLayout (printInfo, delegateObject, didRunSelector, contextInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printInfo" Type="AppKit.NSPrintInfo" />
        <Parameter Name="delegateObject" Type="Foundation.NSObject" />
        <Parameter Name="didRunSelector" Type="ObjCRuntime.Selector" />
        <Parameter Name="contextInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="printInfo">To be added.</param>
        <param name="delegateObject">To be added.</param>
        <param name="didRunSelector">To be added.</param>
        <param name="contextInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunModalPrintOperation">
      <MemberSignature Language="C#" Value="public virtual void RunModalPrintOperation (AppKit.NSPrintOperation printOperation, Foundation.NSObject delegateObject, ObjCRuntime.Selector didRunSelector, IntPtr contextInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunModalPrintOperation(class AppKit.NSPrintOperation printOperation, class Foundation.NSObject delegateObject, class ObjCRuntime.Selector didRunSelector, native int contextInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.RunModalPrintOperation(AppKit.NSPrintOperation,Foundation.NSObject,ObjCRuntime.Selector,System.IntPtr)" />
      <MemberSignature Language="F#" Value="abstract member RunModalPrintOperation : AppKit.NSPrintOperation * Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit&#xA;override this.RunModalPrintOperation : AppKit.NSPrintOperation * Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit" Usage="nSDocument.RunModalPrintOperation (printOperation, delegateObject, didRunSelector, contextInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("runModalPrintOperation:delegate:didRunSelector:contextInfo:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printOperation" Type="AppKit.NSPrintOperation" />
        <Parameter Name="delegateObject" Type="Foundation.NSObject" />
        <Parameter Name="didRunSelector" Type="ObjCRuntime.Selector" />
        <Parameter Name="contextInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="printOperation">To be added.</param>
        <param name="delegateObject">To be added.</param>
        <param name="didRunSelector">To be added.</param>
        <param name="contextInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunModalSavePanelForSaveOperation">
      <MemberSignature Language="C#" Value="public virtual void RunModalSavePanelForSaveOperation (AppKit.NSSaveOperationType saveOperation, Foundation.NSObject delegateObject, ObjCRuntime.Selector didSaveSelector, IntPtr contextInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunModalSavePanelForSaveOperation(valuetype AppKit.NSSaveOperationType saveOperation, class Foundation.NSObject delegateObject, class ObjCRuntime.Selector didSaveSelector, native int contextInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.RunModalSavePanelForSaveOperation(AppKit.NSSaveOperationType,Foundation.NSObject,ObjCRuntime.Selector,System.IntPtr)" />
      <MemberSignature Language="F#" Value="abstract member RunModalSavePanelForSaveOperation : AppKit.NSSaveOperationType * Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit&#xA;override this.RunModalSavePanelForSaveOperation : AppKit.NSSaveOperationType * Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit" Usage="nSDocument.RunModalSavePanelForSaveOperation (saveOperation, delegateObject, didSaveSelector, contextInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="saveOperation" Type="AppKit.NSSaveOperationType" />
        <Parameter Name="delegateObject" Type="Foundation.NSObject" />
        <Parameter Name="didSaveSelector" Type="ObjCRuntime.Selector" />
        <Parameter Name="contextInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="saveOperation">To be added.</param>
        <param name="delegateObject">To be added.</param>
        <param name="didSaveSelector">To be added.</param>
        <param name="contextInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunPageLayout">
      <MemberSignature Language="C#" Value="public virtual void RunPageLayout (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunPageLayout(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.RunPageLayout(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member RunPageLayout : Foundation.NSObject -&gt; unit&#xA;override this.RunPageLayout : Foundation.NSObject -&gt; unit" Usage="nSDocument.RunPageLayout sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("runPageLayout:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveDocument">
      <MemberSignature Language="C#" Value="public virtual void SaveDocument (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveDocument(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.SaveDocument(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member SaveDocument : Foundation.NSObject -&gt; unit&#xA;override this.SaveDocument : Foundation.NSObject -&gt; unit" Usage="nSDocument.SaveDocument sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("saveDocument:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveDocument">
      <MemberSignature Language="C#" Value="public virtual void SaveDocument (Foundation.NSObject delegateObject, ObjCRuntime.Selector didSaveSelector, IntPtr contextInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveDocument(class Foundation.NSObject delegateObject, class ObjCRuntime.Selector didSaveSelector, native int contextInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.SaveDocument(Foundation.NSObject,ObjCRuntime.Selector,System.IntPtr)" />
      <MemberSignature Language="F#" Value="abstract member SaveDocument : Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit&#xA;override this.SaveDocument : Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit" Usage="nSDocument.SaveDocument (delegateObject, didSaveSelector, contextInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("saveDocumentWithDelegate:didSaveSelector:contextInfo:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateObject" Type="Foundation.NSObject" />
        <Parameter Name="didSaveSelector" Type="ObjCRuntime.Selector" />
        <Parameter Name="contextInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="delegateObject">To be added.</param>
        <param name="didSaveSelector">To be added.</param>
        <param name="contextInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveDocumentAs">
      <MemberSignature Language="C#" Value="public virtual void SaveDocumentAs (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveDocumentAs(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.SaveDocumentAs(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member SaveDocumentAs : Foundation.NSObject -&gt; unit&#xA;override this.SaveDocumentAs : Foundation.NSObject -&gt; unit" Usage="nSDocument.SaveDocumentAs sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("saveDocumentAs:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveDocumentAsPdf">
      <MemberSignature Language="C#" Value="public virtual void SaveDocumentAsPdf (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveDocumentAsPdf(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.SaveDocumentAsPdf(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member SaveDocumentAsPdf : Foundation.NSObject -&gt; unit&#xA;override this.SaveDocumentAsPdf : Foundation.NSObject -&gt; unit" Usage="nSDocument.SaveDocumentAsPdf sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("saveDocumentToPDF:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveDocumentTo">
      <MemberSignature Language="C#" Value="public virtual void SaveDocumentTo (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveDocumentTo(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.SaveDocumentTo(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member SaveDocumentTo : Foundation.NSObject -&gt; unit&#xA;override this.SaveDocumentTo : Foundation.NSObject -&gt; unit" Usage="nSDocument.SaveDocumentTo sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("saveDocumentTo:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SavePresentedItemChanges">
      <MemberSignature Language="C#" Value="public virtual void SavePresentedItemChanges (Action&lt;Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SavePresentedItemChanges(class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.SavePresentedItemChanges(System.Action{Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member SavePresentedItemChanges : Action&lt;Foundation.NSError&gt; -&gt; unit&#xA;override this.SavePresentedItemChanges : Action&lt;Foundation.NSError&gt; -&gt; unit" Usage="nSDocument.SavePresentedItemChanges completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("savePresentedItemChangesWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V9))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveTo">
      <MemberSignature Language="C#" Value="public virtual void SaveTo (Foundation.NSUrl url, string typeName, AppKit.NSSaveOperationType saveOperation, AppKit.NSDocumentCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveTo(class Foundation.NSUrl url, string typeName, valuetype AppKit.NSSaveOperationType saveOperation, class AppKit.NSDocumentCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.SaveTo(Foundation.NSUrl,System.String,AppKit.NSSaveOperationType,AppKit.NSDocumentCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member SaveTo : Foundation.NSUrl * string * AppKit.NSSaveOperationType * AppKit.NSDocumentCompletionHandler -&gt; unit&#xA;override this.SaveTo : Foundation.NSUrl * string * AppKit.NSSaveOperationType * AppKit.NSDocumentCompletionHandler -&gt; unit" Usage="nSDocument.SaveTo (url, typeName, saveOperation, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("saveToURL:ofType:forSaveOperation:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="saveOperation" Type="AppKit.NSSaveOperationType" />
        <Parameter Name="completionHandler" Type="AppKit.NSDocumentCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNSDocumentCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="typeName">To be added.</param>
        <param name="saveOperation">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveToUrl">
      <MemberSignature Language="C#" Value="public virtual bool SaveToUrl (Foundation.NSUrl url, string typeName, AppKit.NSSaveOperationType saveOperation, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SaveToUrl(class Foundation.NSUrl url, string typeName, valuetype AppKit.NSSaveOperationType saveOperation, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.SaveToUrl(Foundation.NSUrl,System.String,AppKit.NSSaveOperationType,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member SaveToUrl : Foundation.NSUrl * string * AppKit.NSSaveOperationType *  -&gt; bool&#xA;override this.SaveToUrl : Foundation.NSUrl * string * AppKit.NSSaveOperationType *  -&gt; bool" Usage="nSDocument.SaveToUrl (url, typeName, saveOperation, outError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("saveToURL:ofType:forSaveOperation:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 6, ObjCRuntime.PlatformArchitecture.None, "Use a 'SaveToUrl' overload accepting a completion handler instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="saveOperation" Type="AppKit.NSSaveOperationType" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="typeName">To be added.</param>
        <param name="saveOperation">To be added.</param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveToUrl">
      <MemberSignature Language="C#" Value="public virtual void SaveToUrl (Foundation.NSUrl url, string typeName, AppKit.NSSaveOperationType saveOperation, Foundation.NSObject delegateObject, ObjCRuntime.Selector didSaveSelector, IntPtr contextInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveToUrl(class Foundation.NSUrl url, string typeName, valuetype AppKit.NSSaveOperationType saveOperation, class Foundation.NSObject delegateObject, class ObjCRuntime.Selector didSaveSelector, native int contextInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.SaveToUrl(Foundation.NSUrl,System.String,AppKit.NSSaveOperationType,Foundation.NSObject,ObjCRuntime.Selector,System.IntPtr)" />
      <MemberSignature Language="F#" Value="abstract member SaveToUrl : Foundation.NSUrl * string * AppKit.NSSaveOperationType * Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit&#xA;override this.SaveToUrl : Foundation.NSUrl * string * AppKit.NSSaveOperationType * Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit" Usage="nSDocument.SaveToUrl (url, typeName, saveOperation, delegateObject, didSaveSelector, contextInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="saveOperation" Type="AppKit.NSSaveOperationType" />
        <Parameter Name="delegateObject" Type="Foundation.NSObject" />
        <Parameter Name="didSaveSelector" Type="ObjCRuntime.Selector" />
        <Parameter Name="contextInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="typeName">To be added.</param>
        <param name="saveOperation">To be added.</param>
        <param name="delegateObject">To be added.</param>
        <param name="didSaveSelector">To be added.</param>
        <param name="contextInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAutosaving">
      <MemberSignature Language="C#" Value="public virtual void ScheduleAutosaving ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScheduleAutosaving() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.ScheduleAutosaving" />
      <MemberSignature Language="F#" Value="abstract member ScheduleAutosaving : unit -&gt; unit&#xA;override this.ScheduleAutosaving : unit -&gt; unit" Usage="nSDocument.ScheduleAutosaving " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("scheduleAutosaving")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWindow">
      <MemberSignature Language="C#" Value="public virtual void SetWindow (AppKit.NSWindow window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWindow(class AppKit.NSWindow window) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.SetWindow(AppKit.NSWindow)" />
      <MemberSignature Language="F#" Value="abstract member SetWindow : AppKit.NSWindow -&gt; unit&#xA;override this.SetWindow : AppKit.NSWindow -&gt; unit" Usage="nSDocument.SetWindow window" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setWindow:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="AppKit.NSWindow" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShareDocument">
      <MemberSignature Language="C#" Value="public virtual void ShareDocument (AppKit.NSSharingService sharingService, Action&lt;bool&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShareDocument(class AppKit.NSSharingService sharingService, class System.Action`1&lt;bool&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.ShareDocument(AppKit.NSSharingService,System.Action{System.Boolean})" />
      <MemberSignature Language="F#" Value="abstract member ShareDocument : AppKit.NSSharingService * Action&lt;bool&gt; -&gt; unit&#xA;override this.ShareDocument : AppKit.NSSharingService * Action&lt;bool&gt; -&gt; unit" Usage="nSDocument.ShareDocument (sharingService, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("shareDocumentWithSharingService:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sharingService" Type="AppKit.NSSharingService" />
        <Parameter Name="completionHandler" Type="System.Action&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="sharingService">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShareDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; ShareDocumentAsync (AppKit.NSSharingService sharingService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ShareDocumentAsync(class AppKit.NSSharingService sharingService) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.ShareDocumentAsync(AppKit.NSSharingService)" />
      <MemberSignature Language="F#" Value="abstract member ShareDocumentAsync : AppKit.NSSharingService -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.ShareDocumentAsync : AppKit.NSSharingService -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="nSDocument.ShareDocumentAsync sharingService" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sharingService" Type="AppKit.NSSharingService" />
      </Parameters>
      <Docs>
        <param name="sharingService">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangePrintInfo">
      <MemberSignature Language="C#" Value="public virtual bool ShouldChangePrintInfo (AppKit.NSPrintInfo newPrintInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldChangePrintInfo(class AppKit.NSPrintInfo newPrintInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.ShouldChangePrintInfo(AppKit.NSPrintInfo)" />
      <MemberSignature Language="F#" Value="abstract member ShouldChangePrintInfo : AppKit.NSPrintInfo -&gt; bool&#xA;override this.ShouldChangePrintInfo : AppKit.NSPrintInfo -&gt; bool" Usage="nSDocument.ShouldChangePrintInfo newPrintInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("shouldChangePrintInfo:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newPrintInfo" Type="AppKit.NSPrintInfo" />
      </Parameters>
      <Docs>
        <param name="newPrintInfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldCloseWindowController">
      <MemberSignature Language="C#" Value="public virtual void ShouldCloseWindowController (AppKit.NSWindowController windowController, Foundation.NSObject delegateObject, ObjCRuntime.Selector shouldCloseSelector, IntPtr contextInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShouldCloseWindowController(class AppKit.NSWindowController windowController, class Foundation.NSObject delegateObject, class ObjCRuntime.Selector shouldCloseSelector, native int contextInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.ShouldCloseWindowController(AppKit.NSWindowController,Foundation.NSObject,ObjCRuntime.Selector,System.IntPtr)" />
      <MemberSignature Language="F#" Value="abstract member ShouldCloseWindowController : AppKit.NSWindowController * Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit&#xA;override this.ShouldCloseWindowController : AppKit.NSWindowController * Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit" Usage="nSDocument.ShouldCloseWindowController (windowController, delegateObject, shouldCloseSelector, contextInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowController" Type="AppKit.NSWindowController" />
        <Parameter Name="delegateObject" Type="Foundation.NSObject" />
        <Parameter Name="shouldCloseSelector" Type="ObjCRuntime.Selector" />
        <Parameter Name="contextInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="windowController">To be added.</param>
        <param name="delegateObject">To be added.</param>
        <param name="shouldCloseSelector">To be added.</param>
        <param name="contextInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldRunSavePanelWithAccessoryView">
      <MemberSignature Language="C#" Value="public virtual bool ShouldRunSavePanelWithAccessoryView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldRunSavePanelWithAccessoryView" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.ShouldRunSavePanelWithAccessoryView" />
      <MemberSignature Language="F#" Value="member this.ShouldRunSavePanelWithAccessoryView : bool" Usage="AppKit.NSDocument.ShouldRunSavePanelWithAccessoryView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("shouldRunSavePanelWithAccessoryView")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowWindows">
      <MemberSignature Language="C#" Value="public virtual void ShowWindows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowWindows() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.ShowWindows" />
      <MemberSignature Language="F#" Value="abstract member ShowWindows : unit -&gt; unit&#xA;override this.ShowWindows : unit -&gt; unit" Usage="nSDocument.ShowWindows " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("showWindows")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopBrowsingVersions">
      <MemberSignature Language="C#" Value="public virtual void StopBrowsingVersions (Action completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopBrowsingVersions(class System.Action completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.StopBrowsingVersions(System.Action)" />
      <MemberSignature Language="F#" Value="abstract member StopBrowsingVersions : Action -&gt; unit&#xA;override this.StopBrowsingVersions : Action -&gt; unit" Usage="nSDocument.StopBrowsingVersions completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("stopBrowsingVersionsWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopBrowsingVersionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task StopBrowsingVersionsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task StopBrowsingVersionsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.StopBrowsingVersionsAsync" />
      <MemberSignature Language="F#" Value="abstract member StopBrowsingVersionsAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.StopBrowsingVersionsAsync : unit -&gt; System.Threading.Tasks.Task" Usage="nSDocument.StopBrowsingVersionsAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnblockUserInteraction">
      <MemberSignature Language="C#" Value="public virtual void UnblockUserInteraction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnblockUserInteraction() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.UnblockUserInteraction" />
      <MemberSignature Language="F#" Value="abstract member UnblockUserInteraction : unit -&gt; unit&#xA;override this.UnblockUserInteraction : unit -&gt; unit" Usage="nSDocument.UnblockUserInteraction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("unblockUserInteraction")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UndoManager">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSUndoManager UndoManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSUndoManager UndoManager" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.UndoManager" />
      <MemberSignature Language="F#" Value="member this.UndoManager : Foundation.NSUndoManager with get, set" Usage="AppKit.NSDocument.UndoManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("undoManager", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setUndoManager:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSUndoManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockDocument">
      <MemberSignature Language="C#" Value="public virtual void UnlockDocument (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnlockDocument(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.UnlockDocument(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member UnlockDocument : Foundation.NSObject -&gt; unit&#xA;override this.UnlockDocument : Foundation.NSObject -&gt; unit" Usage="nSDocument.UnlockDocument sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("unlockDocument:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockDocumentWithCompletionHandler">
      <MemberSignature Language="C#" Value="public virtual void UnlockDocumentWithCompletionHandler (AppKit.NSDocumentUnlockDocumentCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnlockDocumentWithCompletionHandler(class AppKit.NSDocumentUnlockDocumentCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.UnlockDocumentWithCompletionHandler(AppKit.NSDocumentUnlockDocumentCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member UnlockDocumentWithCompletionHandler : AppKit.NSDocumentUnlockDocumentCompletionHandler -&gt; unit&#xA;override this.UnlockDocumentWithCompletionHandler : AppKit.NSDocumentUnlockDocumentCompletionHandler -&gt; unit" Usage="nSDocument.UnlockDocumentWithCompletionHandler completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("unlockDocumentWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="AppKit.NSDocumentUnlockDocumentCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNSDocumentUnlockDocumentCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockWithCompletionHandler">
      <MemberSignature Language="C#" Value="public virtual void UnlockWithCompletionHandler (AppKit.NSDocumentUnlockCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnlockWithCompletionHandler(class AppKit.NSDocumentUnlockCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.UnlockWithCompletionHandler(AppKit.NSDocumentUnlockCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member UnlockWithCompletionHandler : AppKit.NSDocumentUnlockCompletionHandler -&gt; unit&#xA;override this.UnlockWithCompletionHandler : AppKit.NSDocumentUnlockCompletionHandler -&gt; unit" Usage="nSDocument.UnlockWithCompletionHandler completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("unlockWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="AppKit.NSDocumentUnlockCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNSDocumentUnlockCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateChangeCount">
      <MemberSignature Language="C#" Value="public virtual void UpdateChangeCount (AppKit.NSDocumentChangeType change);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateChangeCount(valuetype AppKit.NSDocumentChangeType change) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.UpdateChangeCount(AppKit.NSDocumentChangeType)" />
      <MemberSignature Language="F#" Value="abstract member UpdateChangeCount : AppKit.NSDocumentChangeType -&gt; unit&#xA;override this.UpdateChangeCount : AppKit.NSDocumentChangeType -&gt; unit" Usage="nSDocument.UpdateChangeCount change" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("updateChangeCount:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="change" Type="AppKit.NSDocumentChangeType" />
      </Parameters>
      <Docs>
        <param name="change">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateChangeCount">
      <MemberSignature Language="C#" Value="public virtual void UpdateChangeCount (Foundation.NSObject changeCountToken, AppKit.NSSaveOperationType saveOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateChangeCount(class Foundation.NSObject changeCountToken, valuetype AppKit.NSSaveOperationType saveOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.UpdateChangeCount(Foundation.NSObject,AppKit.NSSaveOperationType)" />
      <MemberSignature Language="F#" Value="abstract member UpdateChangeCount : Foundation.NSObject * AppKit.NSSaveOperationType -&gt; unit&#xA;override this.UpdateChangeCount : Foundation.NSObject * AppKit.NSSaveOperationType -&gt; unit" Usage="nSDocument.UpdateChangeCount (changeCountToken, saveOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("updateChangeCountWithToken:forSaveOperation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeCountToken" Type="Foundation.NSObject" />
        <Parameter Name="saveOperation" Type="AppKit.NSSaveOperationType" />
      </Parameters>
      <Docs>
        <param name="changeCountToken">To be added.</param>
        <param name="saveOperation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUserActivityState">
      <MemberSignature Language="C#" Value="public virtual void UpdateUserActivityState (Foundation.NSUserActivity userActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateUserActivityState(class Foundation.NSUserActivity userActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.UpdateUserActivityState(Foundation.NSUserActivity)" />
      <MemberSignature Language="F#" Value="abstract member UpdateUserActivityState : Foundation.NSUserActivity -&gt; unit&#xA;override this.UpdateUserActivityState : Foundation.NSUserActivity -&gt; unit" Usage="nSDocument.UpdateUserActivityState userActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("updateUserActivityState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userActivity" Type="Foundation.NSUserActivity" />
      </Parameters>
      <Docs>
        <param name="userActivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserActivity">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSUserActivity UserActivity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSUserActivity UserActivity" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.UserActivity" />
      <MemberSignature Language="F#" Value="member this.UserActivity : Foundation.NSUserActivity with get, set" Usage="AppKit.NSDocument.UserActivity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("userActivity", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setUserActivity:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSUserActivity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesUbiquitousStorage">
      <MemberSignature Language="C#" Value="public static bool UsesUbiquitousStorage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UsesUbiquitousStorage" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.UsesUbiquitousStorage" />
      <MemberSignature Language="F#" Value="member this.UsesUbiquitousStorage : bool" Usage="AppKit.NSDocument.UsesUbiquitousStorage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("usesUbiquitousStorage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateMenuItem">
      <MemberSignature Language="C#" Value="public virtual bool ValidateMenuItem (AppKit.NSMenuItem menuItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ValidateMenuItem(class AppKit.NSMenuItem menuItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.ValidateMenuItem(AppKit.NSMenuItem)" />
      <MemberSignature Language="F#" Value="abstract member ValidateMenuItem : AppKit.NSMenuItem -&gt; bool&#xA;override this.ValidateMenuItem : AppKit.NSMenuItem -&gt; bool" Usage="nSDocument.ValidateMenuItem menuItem" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AppKit.INSMenuItemValidation.ValidateMenuItem(AppKit.NSMenuItem)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("validateMenuItem:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuItem" Type="AppKit.NSMenuItem" />
      </Parameters>
      <Docs>
        <param name="menuItem">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateUserInterfaceItem">
      <MemberSignature Language="C#" Value="public bool ValidateUserInterfaceItem (AppKit.INSValidatedUserInterfaceItem anItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateUserInterfaceItem(class AppKit.INSValidatedUserInterfaceItem anItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.ValidateUserInterfaceItem(AppKit.INSValidatedUserInterfaceItem)" />
      <MemberSignature Language="F#" Value="member this.ValidateUserInterfaceItem : AppKit.INSValidatedUserInterfaceItem -&gt; bool" Usage="nSDocument.ValidateUserInterfaceItem anItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anItem" Type="AppKit.INSValidatedUserInterfaceItem" />
      </Parameters>
      <Docs>
        <param name="anItem">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateUserInterfaceItem">
      <MemberSignature Language="C#" Value="public virtual bool ValidateUserInterfaceItem (Foundation.NSObject anItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ValidateUserInterfaceItem(class Foundation.NSObject anItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.ValidateUserInterfaceItem(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ValidateUserInterfaceItem : Foundation.NSObject -&gt; bool&#xA;override this.ValidateUserInterfaceItem : Foundation.NSObject -&gt; bool" Usage="nSDocument.ValidateUserInterfaceItem anItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("validateUserInterfaceItem:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anItem" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="anItem">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillNotPresentError">
      <MemberSignature Language="C#" Value="public virtual void WillNotPresentError (Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillNotPresentError(class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.WillNotPresentError(Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member WillNotPresentError : Foundation.NSError -&gt; unit&#xA;override this.WillNotPresentError : Foundation.NSError -&gt; unit" Usage="nSDocument.WillNotPresentError error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("willNotPresentError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillPresentError">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSError WillPresentError (Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSError WillPresentError(class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.WillPresentError(Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member WillPresentError : Foundation.NSError -&gt; Foundation.NSError&#xA;override this.WillPresentError : Foundation.NSError -&gt; Foundation.NSError" Usage="nSDocument.WillPresentError error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("willPresentError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowControllerDidLoadNib">
      <MemberSignature Language="C#" Value="public virtual void WindowControllerDidLoadNib (AppKit.NSWindowController windowController);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WindowControllerDidLoadNib(class AppKit.NSWindowController windowController) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.WindowControllerDidLoadNib(AppKit.NSWindowController)" />
      <MemberSignature Language="F#" Value="abstract member WindowControllerDidLoadNib : AppKit.NSWindowController -&gt; unit&#xA;override this.WindowControllerDidLoadNib : AppKit.NSWindowController -&gt; unit" Usage="nSDocument.WindowControllerDidLoadNib windowController" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowControllerDidLoadNib:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowController" Type="AppKit.NSWindowController" />
      </Parameters>
      <Docs>
        <param name="windowController">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowControllers">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSWindowController[] WindowControllers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSWindowController[] WindowControllers" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.WindowControllers" />
      <MemberSignature Language="F#" Value="member this.WindowControllers : AppKit.NSWindowController[]" Usage="AppKit.NSDocument.WindowControllers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("windowControllers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSWindowController[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowControllerWillLoadNib">
      <MemberSignature Language="C#" Value="public virtual void WindowControllerWillLoadNib (AppKit.NSWindowController windowController);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WindowControllerWillLoadNib(class AppKit.NSWindowController windowController) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.WindowControllerWillLoadNib(AppKit.NSWindowController)" />
      <MemberSignature Language="F#" Value="abstract member WindowControllerWillLoadNib : AppKit.NSWindowController -&gt; unit&#xA;override this.WindowControllerWillLoadNib : AppKit.NSWindowController -&gt; unit" Usage="nSDocument.WindowControllerWillLoadNib windowController" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("windowControllerWillLoadNib:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowController" Type="AppKit.NSWindowController" />
      </Parameters>
      <Docs>
        <param name="windowController">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowForSheet">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSWindow WindowForSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSWindow WindowForSheet" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.WindowForSheet" />
      <MemberSignature Language="F#" Value="member this.WindowForSheet : AppKit.NSWindow" Usage="AppKit.NSDocument.WindowForSheet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("windowForSheet")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowNibName">
      <MemberSignature Language="C#" Value="public virtual string WindowNibName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WindowNibName" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSDocument.WindowNibName" />
      <MemberSignature Language="F#" Value="member this.WindowNibName : string" Usage="AppKit.NSDocument.WindowNibName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("windowNibName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritableTypes">
      <MemberSignature Language="C#" Value="public static string[] WritableTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] WritableTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.WritableTypes" />
      <MemberSignature Language="F#" Value="static member WritableTypes : unit -&gt; string[]" Usage="AppKit.NSDocument.WritableTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("writableTypes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritableTypesForSaveOperation">
      <MemberSignature Language="C#" Value="public virtual string[] WritableTypesForSaveOperation (AppKit.NSSaveOperationType saveOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] WritableTypesForSaveOperation(valuetype AppKit.NSSaveOperationType saveOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.WritableTypesForSaveOperation(AppKit.NSSaveOperationType)" />
      <MemberSignature Language="F#" Value="abstract member WritableTypesForSaveOperation : AppKit.NSSaveOperationType -&gt; string[]&#xA;override this.WritableTypesForSaveOperation : AppKit.NSSaveOperationType -&gt; string[]" Usage="nSDocument.WritableTypesForSaveOperation saveOperation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("writableTypesForSaveOperation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="saveOperation" Type="AppKit.NSSaveOperationType" />
      </Parameters>
      <Docs>
        <param name="saveOperation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteSafelyToUrl">
      <MemberSignature Language="C#" Value="public virtual bool WriteSafelyToUrl (Foundation.NSUrl url, string typeName, AppKit.NSSaveOperationType saveOperation, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WriteSafelyToUrl(class Foundation.NSUrl url, string typeName, valuetype AppKit.NSSaveOperationType saveOperation, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.WriteSafelyToUrl(Foundation.NSUrl,System.String,AppKit.NSSaveOperationType,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member WriteSafelyToUrl : Foundation.NSUrl * string * AppKit.NSSaveOperationType *  -&gt; bool&#xA;override this.WriteSafelyToUrl : Foundation.NSUrl * string * AppKit.NSSaveOperationType *  -&gt; bool" Usage="nSDocument.WriteSafelyToUrl (url, typeName, saveOperation, outError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("writeSafelyToURL:ofType:forSaveOperation:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="saveOperation" Type="AppKit.NSSaveOperationType" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="typeName">To be added.</param>
        <param name="saveOperation">To be added.</param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToUrl">
      <MemberSignature Language="C#" Value="public virtual bool WriteToUrl (Foundation.NSUrl url, string typeName, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WriteToUrl(class Foundation.NSUrl url, string typeName, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.WriteToUrl(Foundation.NSUrl,System.String,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member WriteToUrl : Foundation.NSUrl * string *  -&gt; bool&#xA;override this.WriteToUrl : Foundation.NSUrl * string *  -&gt; bool" Usage="nSDocument.WriteToUrl (url, typeName, outError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("writeToURL:ofType:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="typeName">To be added.</param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToUrl">
      <MemberSignature Language="C#" Value="public virtual bool WriteToUrl (Foundation.NSUrl url, string typeName, AppKit.NSSaveOperationType saveOperation, Foundation.NSUrl absoluteOriginalContentsUrl, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WriteToUrl(class Foundation.NSUrl url, string typeName, valuetype AppKit.NSSaveOperationType saveOperation, class Foundation.NSUrl absoluteOriginalContentsUrl, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSDocument.WriteToUrl(Foundation.NSUrl,System.String,AppKit.NSSaveOperationType,Foundation.NSUrl,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member WriteToUrl : Foundation.NSUrl * string * AppKit.NSSaveOperationType * Foundation.NSUrl *  -&gt; bool&#xA;override this.WriteToUrl : Foundation.NSUrl * string * AppKit.NSSaveOperationType * Foundation.NSUrl *  -&gt; bool" Usage="nSDocument.WriteToUrl (url, typeName, saveOperation, absoluteOriginalContentsUrl, outError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("writeToURL:ofType:forSaveOperation:originalContentsURL:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="saveOperation" Type="AppKit.NSSaveOperationType" />
        <Parameter Name="absoluteOriginalContentsUrl" Type="Foundation.NSUrl" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="typeName">To be added.</param>
        <param name="saveOperation">To be added.</param>
        <param name="absoluteOriginalContentsUrl">To be added.</param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
