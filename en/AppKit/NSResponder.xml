<Type Name="NSResponder" FullName="AppKit.NSResponder">
  <TypeSignature Language="C#" Value="public class NSResponder : Foundation.NSObject, AppKit.INSTouchBarProvider, Foundation.INSCoding, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSResponder extends Foundation.NSObject implements class AppKit.INSTouchBarProvider, class Foundation.INSCoding, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSResponder" />
  <TypeSignature Language="F#" Value="type NSResponder = class&#xA;    inherit NSObject&#xA;    interface INSCoding&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSTouchBarProvider" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>AppKit.INSTouchBarProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSResponder", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSResponder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSResponder (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new AppKit.NSResponder : Foundation.NSCoder -&gt; AppKit.NSResponder" Usage="new AppKit.NSResponder coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSResponder (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSResponder : Foundation.NSObjectFlag -&gt; AppKit.NSResponder" Usage="new AppKit.NSResponder t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSResponder (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSResponder : nativeint -&gt; AppKit.NSResponder" Usage="new AppKit.NSResponder handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsFirstResponder">
      <MemberSignature Language="C#" Value="public virtual bool AcceptsFirstResponder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AcceptsFirstResponder() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.AcceptsFirstResponder" />
      <MemberSignature Language="F#" Value="abstract member AcceptsFirstResponder : unit -&gt; bool&#xA;override this.AcceptsFirstResponder : unit -&gt; bool" Usage="nSResponder.AcceptsFirstResponder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("acceptsFirstResponder")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BecomeFirstResponder">
      <MemberSignature Language="C#" Value="public virtual bool BecomeFirstResponder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BecomeFirstResponder() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.BecomeFirstResponder" />
      <MemberSignature Language="F#" Value="abstract member BecomeFirstResponder : unit -&gt; bool&#xA;override this.BecomeFirstResponder : unit -&gt; bool" Usage="nSResponder.BecomeFirstResponder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("becomeFirstResponder")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGestureWithEvent">
      <MemberSignature Language="C#" Value="public virtual void BeginGestureWithEvent (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginGestureWithEvent(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.BeginGestureWithEvent(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member BeginGestureWithEvent : AppKit.NSEvent -&gt; unit&#xA;override this.BeginGestureWithEvent : AppKit.NSEvent -&gt; unit" Usage="nSResponder.BeginGestureWithEvent theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("beginGestureWithEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSResponder.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AppKit.NSResponder.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorUpdate">
      <MemberSignature Language="C#" Value="public virtual void CursorUpdate (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CursorUpdate(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.CursorUpdate(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member CursorUpdate : AppKit.NSEvent -&gt; unit&#xA;override this.CursorUpdate : AppKit.NSEvent -&gt; unit" Usage="nSResponder.CursorUpdate theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("cursorUpdate:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeRestorableState">
      <MemberSignature Language="C#" Value="public virtual void EncodeRestorableState (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeRestorableState(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.EncodeRestorableState(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member EncodeRestorableState : Foundation.NSCoder -&gt; unit&#xA;override this.EncodeRestorableState : Foundation.NSCoder -&gt; unit" Usage="nSResponder.EncodeRestorableState coder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeRestorableStateWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeRestorableState">
      <MemberSignature Language="C#" Value="public virtual void EncodeRestorableState (Foundation.NSCoder coder, Foundation.NSOperationQueue queue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeRestorableState(class Foundation.NSCoder coder, class Foundation.NSOperationQueue queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.EncodeRestorableState(Foundation.NSCoder,Foundation.NSOperationQueue)" />
      <MemberSignature Language="F#" Value="abstract member EncodeRestorableState : Foundation.NSCoder * Foundation.NSOperationQueue -&gt; unit&#xA;override this.EncodeRestorableState : Foundation.NSCoder * Foundation.NSOperationQueue -&gt; unit" Usage="nSResponder.EncodeRestorableState (coder, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeRestorableStateWithCoder:backgroundQueue:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
        <Parameter Name="queue" Type="Foundation.NSOperationQueue" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <param name="queue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeTo">
      <MemberSignature Language="C#" Value="public virtual void EncodeTo (Foundation.NSCoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeTo(class Foundation.NSCoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.EncodeTo(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member EncodeTo : Foundation.NSCoder -&gt; unit&#xA;override this.EncodeTo : Foundation.NSCoder -&gt; unit" Usage="nSResponder.EncodeTo encoder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCoding.EncodeTo(Foundation.NSCoder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="encoder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGestureWithEvent">
      <MemberSignature Language="C#" Value="public virtual void EndGestureWithEvent (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndGestureWithEvent(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.EndGestureWithEvent(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member EndGestureWithEvent : AppKit.NSEvent -&gt; unit&#xA;override this.EndGestureWithEvent : AppKit.NSEvent -&gt; unit" Usage="nSResponder.EndGestureWithEvent theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("endGestureWithEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlagsChanged">
      <MemberSignature Language="C#" Value="public virtual void FlagsChanged (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FlagsChanged(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.FlagsChanged(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member FlagsChanged : AppKit.NSEvent -&gt; unit&#xA;override this.FlagsChanged : AppKit.NSEvent -&gt; unit" Usage="nSResponder.FlagsChanged theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("flagsChanged:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushBufferedKeyEvents">
      <MemberSignature Language="C#" Value="public virtual void FlushBufferedKeyEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FlushBufferedKeyEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.FlushBufferedKeyEvents" />
      <MemberSignature Language="F#" Value="abstract member FlushBufferedKeyEvents : unit -&gt; unit&#xA;override this.FlushBufferedKeyEvents : unit -&gt; unit" Usage="nSResponder.FlushBufferedKeyEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("flushBufferedKeyEvents")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNewWindowForTab">
      <MemberSignature Language="C#" Value="public virtual void GetNewWindowForTab (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetNewWindowForTab(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.GetNewWindowForTab(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member GetNewWindowForTab : Foundation.NSObject -&gt; unit&#xA;override this.GetNewWindowForTab : Foundation.NSObject -&gt; unit" Usage="nSResponder.GetNewWindowForTab sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("newWindowForTab:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpRequested">
      <MemberSignature Language="C#" Value="public virtual void HelpRequested (AppKit.NSEvent theEventPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HelpRequested(class AppKit.NSEvent theEventPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.HelpRequested(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member HelpRequested : AppKit.NSEvent -&gt; unit&#xA;override this.HelpRequested : AppKit.NSEvent -&gt; unit" Usage="nSResponder.HelpRequested theEventPtr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("helpRequested:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEventPtr" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEventPtr">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpretKeyEvents">
      <MemberSignature Language="C#" Value="public virtual void InterpretKeyEvents (AppKit.NSEvent[] eventArray);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InterpretKeyEvents(class AppKit.NSEvent[] eventArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.InterpretKeyEvents(AppKit.NSEvent[])" />
      <MemberSignature Language="F#" Value="abstract member InterpretKeyEvents : AppKit.NSEvent[] -&gt; unit&#xA;override this.InterpretKeyEvents : AppKit.NSEvent[] -&gt; unit" Usage="nSResponder.InterpretKeyEvents eventArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("interpretKeyEvents:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArray" Type="AppKit.NSEvent[]" />
      </Parameters>
      <Docs>
        <param name="eventArray">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateRestorableState">
      <MemberSignature Language="C#" Value="public virtual void InvalidateRestorableState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateRestorableState() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.InvalidateRestorableState" />
      <MemberSignature Language="F#" Value="abstract member InvalidateRestorableState : unit -&gt; unit&#xA;override this.InvalidateRestorableState : unit -&gt; unit" Usage="nSResponder.InvalidateRestorableState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("invalidateRestorableState")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public virtual void KeyDown (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void KeyDown(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.KeyDown(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member KeyDown : AppKit.NSEvent -&gt; unit&#xA;override this.KeyDown : AppKit.NSEvent -&gt; unit" Usage="nSResponder.KeyDown theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("keyDown:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public virtual void KeyUp (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void KeyUp(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.KeyUp(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member KeyUp : AppKit.NSEvent -&gt; unit&#xA;override this.KeyUp : AppKit.NSEvent -&gt; unit" Usage="nSResponder.KeyUp theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("keyUp:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MagnifyWithEvent">
      <MemberSignature Language="C#" Value="public virtual void MagnifyWithEvent (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MagnifyWithEvent(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.MagnifyWithEvent(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member MagnifyWithEvent : AppKit.NSEvent -&gt; unit&#xA;override this.MagnifyWithEvent : AppKit.NSEvent -&gt; unit" Usage="nSResponder.MagnifyWithEvent theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("magnifyWithEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Menu">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSMenu Menu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSMenu Menu" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSResponder.Menu" />
      <MemberSignature Language="F#" Value="member this.Menu : AppKit.NSMenu with get, set" Usage="AppKit.NSResponder.Menu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("menu", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMenu:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public virtual void MouseDown (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseDown(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.MouseDown(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member MouseDown : AppKit.NSEvent -&gt; unit&#xA;override this.MouseDown : AppKit.NSEvent -&gt; unit" Usage="nSResponder.MouseDown theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("mouseDown:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDragged">
      <MemberSignature Language="C#" Value="public virtual void MouseDragged (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseDragged(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.MouseDragged(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member MouseDragged : AppKit.NSEvent -&gt; unit&#xA;override this.MouseDragged : AppKit.NSEvent -&gt; unit" Usage="nSResponder.MouseDragged theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("mouseDragged:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEntered">
      <MemberSignature Language="C#" Value="public virtual void MouseEntered (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseEntered(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.MouseEntered(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member MouseEntered : AppKit.NSEvent -&gt; unit&#xA;override this.MouseEntered : AppKit.NSEvent -&gt; unit" Usage="nSResponder.MouseEntered theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("mouseEntered:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseExited">
      <MemberSignature Language="C#" Value="public virtual void MouseExited (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseExited(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.MouseExited(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member MouseExited : AppKit.NSEvent -&gt; unit&#xA;override this.MouseExited : AppKit.NSEvent -&gt; unit" Usage="nSResponder.MouseExited theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("mouseExited:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMoved">
      <MemberSignature Language="C#" Value="public virtual void MouseMoved (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseMoved(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.MouseMoved(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member MouseMoved : AppKit.NSEvent -&gt; unit&#xA;override this.MouseMoved : AppKit.NSEvent -&gt; unit" Usage="nSResponder.MouseMoved theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("mouseMoved:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public virtual void MouseUp (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseUp(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.MouseUp(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member MouseUp : AppKit.NSEvent -&gt; unit&#xA;override this.MouseUp : AppKit.NSEvent -&gt; unit" Usage="nSResponder.MouseUp theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("mouseUp:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextResponder">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSResponder NextResponder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSResponder NextResponder" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSResponder.NextResponder" />
      <MemberSignature Language="F#" Value="member this.NextResponder : AppKit.NSResponder with get, set" Usage="AppKit.NSResponder.NextResponder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("nextResponder")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setNextResponder:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSResponder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoResponderFor">
      <MemberSignature Language="C#" Value="public virtual void NoResponderFor (ObjCRuntime.Selector eventSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NoResponderFor(class ObjCRuntime.Selector eventSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.NoResponderFor(ObjCRuntime.Selector)" />
      <MemberSignature Language="F#" Value="abstract member NoResponderFor : ObjCRuntime.Selector -&gt; unit&#xA;override this.NoResponderFor : ObjCRuntime.Selector -&gt; unit" Usage="nSResponder.NoResponderFor eventSelector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("noResponderFor:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSelector" Type="ObjCRuntime.Selector" />
      </Parameters>
      <Docs>
        <param name="eventSelector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherMouseDown">
      <MemberSignature Language="C#" Value="public virtual void OtherMouseDown (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OtherMouseDown(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.OtherMouseDown(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member OtherMouseDown : AppKit.NSEvent -&gt; unit&#xA;override this.OtherMouseDown : AppKit.NSEvent -&gt; unit" Usage="nSResponder.OtherMouseDown theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("otherMouseDown:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherMouseDragged">
      <MemberSignature Language="C#" Value="public virtual void OtherMouseDragged (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OtherMouseDragged(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.OtherMouseDragged(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member OtherMouseDragged : AppKit.NSEvent -&gt; unit&#xA;override this.OtherMouseDragged : AppKit.NSEvent -&gt; unit" Usage="nSResponder.OtherMouseDragged theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("otherMouseDragged:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherMouseUp">
      <MemberSignature Language="C#" Value="public virtual void OtherMouseUp (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OtherMouseUp(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.OtherMouseUp(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member OtherMouseUp : AppKit.NSEvent -&gt; unit&#xA;override this.OtherMouseUp : AppKit.NSEvent -&gt; unit" Usage="nSResponder.OtherMouseUp theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("otherMouseUp:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformKeyEquivalent">
      <MemberSignature Language="C#" Value="public virtual bool PerformKeyEquivalent (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformKeyEquivalent(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.PerformKeyEquivalent(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member PerformKeyEquivalent : AppKit.NSEvent -&gt; bool&#xA;override this.PerformKeyEquivalent : AppKit.NSEvent -&gt; bool" Usage="nSResponder.PerformKeyEquivalent theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("performKeyEquivalent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentError">
      <MemberSignature Language="C#" Value="public virtual bool PresentError (Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PresentError(class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.PresentError(Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member PresentError : Foundation.NSError -&gt; bool&#xA;override this.PresentError : Foundation.NSError -&gt; bool" Usage="nSResponder.PresentError error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("presentError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentError">
      <MemberSignature Language="C#" Value="public void PresentError (Foundation.NSError error, AppKit.NSWindow window, Foundation.NSObject delegate, ObjCRuntime.Selector didPresentSelector, IntPtr contextInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PresentError(class Foundation.NSError error, class AppKit.NSWindow window, class Foundation.NSObject delegate, class ObjCRuntime.Selector didPresentSelector, native int contextInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.PresentError(Foundation.NSError,AppKit.NSWindow,Foundation.NSObject,ObjCRuntime.Selector,System.IntPtr)" />
      <MemberSignature Language="F#" Value="member this.PresentError : Foundation.NSError * AppKit.NSWindow * Foundation.NSObject * ObjCRuntime.Selector * nativeint -&gt; unit" Usage="nSResponder.PresentError (error, window, delegate, didPresentSelector, contextInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="Foundation.NSError" />
        <Parameter Name="window" Type="AppKit.NSWindow" />
        <Parameter Name="delegate" Type="Foundation.NSObject" />
        <Parameter Name="didPresentSelector" Type="ObjCRuntime.Selector" />
        <Parameter Name="contextInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <param name="window">To be added.</param>
        <param name="delegate">To be added.</param>
        <param name="didPresentSelector">To be added.</param>
        <param name="contextInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PressureChange">
      <MemberSignature Language="C#" Value="public virtual void PressureChange (AppKit.NSEvent pressureChangeEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PressureChange(class AppKit.NSEvent pressureChangeEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.PressureChange(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member PressureChange : AppKit.NSEvent -&gt; unit&#xA;override this.PressureChange : AppKit.NSEvent -&gt; unit" Usage="nSResponder.PressureChange pressureChangeEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pressureChangeWithEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, 3, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pressureChangeEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="pressureChangeEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickLook">
      <MemberSignature Language="C#" Value="public virtual void QuickLook (AppKit.NSEvent withEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QuickLook(class AppKit.NSEvent withEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.QuickLook(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member QuickLook : AppKit.NSEvent -&gt; unit&#xA;override this.QuickLook : AppKit.NSEvent -&gt; unit" Usage="nSResponder.QuickLook withEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("quickLookWithEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="withEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="withEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResignFirstResponder">
      <MemberSignature Language="C#" Value="public virtual bool ResignFirstResponder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ResignFirstResponder() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.ResignFirstResponder" />
      <MemberSignature Language="F#" Value="abstract member ResignFirstResponder : unit -&gt; bool&#xA;override this.ResignFirstResponder : unit -&gt; bool" Usage="nSResponder.ResignFirstResponder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("resignFirstResponder")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestorableStateKeyPaths">
      <MemberSignature Language="C#" Value="public static string[] RestorableStateKeyPaths ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] RestorableStateKeyPaths() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.RestorableStateKeyPaths" />
      <MemberSignature Language="F#" Value="static member RestorableStateKeyPaths : unit -&gt; string[]" Usage="AppKit.NSResponder.RestorableStateKeyPaths " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("restorableStateKeyPaths")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreState">
      <MemberSignature Language="C#" Value="public virtual void RestoreState (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RestoreState(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.RestoreState(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member RestoreState : Foundation.NSCoder -&gt; unit&#xA;override this.RestoreState : Foundation.NSCoder -&gt; unit" Usage="nSResponder.RestoreState coder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("restoreStateWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreUserActivityState">
      <MemberSignature Language="C#" Value="public virtual void RestoreUserActivityState (Foundation.NSUserActivity userActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RestoreUserActivityState(class Foundation.NSUserActivity userActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.RestoreUserActivityState(Foundation.NSUserActivity)" />
      <MemberSignature Language="F#" Value="abstract member RestoreUserActivityState : Foundation.NSUserActivity -&gt; unit&#xA;override this.RestoreUserActivityState : Foundation.NSUserActivity -&gt; unit" Usage="nSResponder.RestoreUserActivityState userActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("restoreUserActivityState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userActivity" Type="Foundation.NSUserActivity" />
      </Parameters>
      <Docs>
        <param name="userActivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightMouseDown">
      <MemberSignature Language="C#" Value="public virtual void RightMouseDown (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RightMouseDown(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.RightMouseDown(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member RightMouseDown : AppKit.NSEvent -&gt; unit&#xA;override this.RightMouseDown : AppKit.NSEvent -&gt; unit" Usage="nSResponder.RightMouseDown theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rightMouseDown:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightMouseDragged">
      <MemberSignature Language="C#" Value="public virtual void RightMouseDragged (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RightMouseDragged(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.RightMouseDragged(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member RightMouseDragged : AppKit.NSEvent -&gt; unit&#xA;override this.RightMouseDragged : AppKit.NSEvent -&gt; unit" Usage="nSResponder.RightMouseDragged theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rightMouseDragged:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightMouseUp">
      <MemberSignature Language="C#" Value="public virtual void RightMouseUp (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RightMouseUp(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.RightMouseUp(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member RightMouseUp : AppKit.NSEvent -&gt; unit&#xA;override this.RightMouseUp : AppKit.NSEvent -&gt; unit" Usage="nSResponder.RightMouseUp theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rightMouseUp:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateWithEvent">
      <MemberSignature Language="C#" Value="public virtual void RotateWithEvent (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RotateWithEvent(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.RotateWithEvent(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member RotateWithEvent : AppKit.NSEvent -&gt; unit&#xA;override this.RotateWithEvent : AppKit.NSEvent -&gt; unit" Usage="nSResponder.RotateWithEvent theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rotateWithEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollWheel">
      <MemberSignature Language="C#" Value="public virtual void ScrollWheel (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollWheel(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.ScrollWheel(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member ScrollWheel : AppKit.NSEvent -&gt; unit&#xA;override this.ScrollWheel : AppKit.NSEvent -&gt; unit" Usage="nSResponder.ScrollWheel theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("scrollWheel:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldBeTreatedAsInkEvent">
      <MemberSignature Language="C#" Value="public virtual bool ShouldBeTreatedAsInkEvent (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldBeTreatedAsInkEvent(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.ShouldBeTreatedAsInkEvent(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member ShouldBeTreatedAsInkEvent : AppKit.NSEvent -&gt; bool&#xA;override this.ShouldBeTreatedAsInkEvent : AppKit.NSEvent -&gt; bool" Usage="nSResponder.ShouldBeTreatedAsInkEvent theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("shouldBeTreatedAsInkEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowContextHelp">
      <MemberSignature Language="C#" Value="public virtual void ShowContextHelp (Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowContextHelp(class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.ShowContextHelp(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member ShowContextHelp : Foundation.NSObject -&gt; unit&#xA;override this.ShowContextHelp : Foundation.NSObject -&gt; unit" Usage="nSResponder.ShowContextHelp sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("showContextHelp:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartMagnify">
      <MemberSignature Language="C#" Value="public virtual void SmartMagnify (AppKit.NSEvent withEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SmartMagnify(class AppKit.NSEvent withEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.SmartMagnify(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member SmartMagnify : AppKit.NSEvent -&gt; unit&#xA;override this.SmartMagnify : AppKit.NSEvent -&gt; unit" Usage="nSResponder.SmartMagnify withEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("smartMagnifyWithEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="withEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="withEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupplementalTargetForAction">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject SupplementalTargetForAction (ObjCRuntime.Selector action, Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject SupplementalTargetForAction(class ObjCRuntime.Selector action, class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.SupplementalTargetForAction(ObjCRuntime.Selector,Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member SupplementalTargetForAction : ObjCRuntime.Selector * Foundation.NSObject -&gt; Foundation.NSObject&#xA;override this.SupplementalTargetForAction : ObjCRuntime.Selector * Foundation.NSObject -&gt; Foundation.NSObject" Usage="nSResponder.SupplementalTargetForAction (action, sender)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("supplementalTargetForAction:sender:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="ObjCRuntime.Selector" />
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SwipeWithEvent">
      <MemberSignature Language="C#" Value="public virtual void SwipeWithEvent (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SwipeWithEvent(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.SwipeWithEvent(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member SwipeWithEvent : AppKit.NSEvent -&gt; unit&#xA;override this.SwipeWithEvent : AppKit.NSEvent -&gt; unit" Usage="nSResponder.SwipeWithEvent theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("swipeWithEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabletPoint">
      <MemberSignature Language="C#" Value="public virtual void TabletPoint (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TabletPoint(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.TabletPoint(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member TabletPoint : AppKit.NSEvent -&gt; unit&#xA;override this.TabletPoint : AppKit.NSEvent -&gt; unit" Usage="nSResponder.TabletPoint theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("tabletPoint:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabletProximity">
      <MemberSignature Language="C#" Value="public virtual void TabletProximity (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TabletProximity(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.TabletProximity(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member TabletProximity : AppKit.NSEvent -&gt; unit&#xA;override this.TabletProximity : AppKit.NSEvent -&gt; unit" Usage="nSResponder.TabletProximity theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("tabletProximity:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchBar">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSTouchBar TouchBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSTouchBar TouchBar" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSResponder.TouchBar" />
      <MemberSignature Language="F#" Value="member this.TouchBar : AppKit.NSTouchBar" Usage="AppKit.NSResponder.TouchBar" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:AppKit.INSTouchBarProvider.TouchBar</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("touchBar", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSTouchBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesBeganWithEvent">
      <MemberSignature Language="C#" Value="public virtual void TouchesBeganWithEvent (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TouchesBeganWithEvent(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.TouchesBeganWithEvent(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member TouchesBeganWithEvent : AppKit.NSEvent -&gt; unit&#xA;override this.TouchesBeganWithEvent : AppKit.NSEvent -&gt; unit" Usage="nSResponder.TouchesBeganWithEvent theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("touchesBeganWithEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCancelledWithEvent">
      <MemberSignature Language="C#" Value="public virtual void TouchesCancelledWithEvent (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TouchesCancelledWithEvent(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.TouchesCancelledWithEvent(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member TouchesCancelledWithEvent : AppKit.NSEvent -&gt; unit&#xA;override this.TouchesCancelledWithEvent : AppKit.NSEvent -&gt; unit" Usage="nSResponder.TouchesCancelledWithEvent theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("touchesCancelledWithEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesEndedWithEvent">
      <MemberSignature Language="C#" Value="public virtual void TouchesEndedWithEvent (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TouchesEndedWithEvent(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.TouchesEndedWithEvent(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member TouchesEndedWithEvent : AppKit.NSEvent -&gt; unit&#xA;override this.TouchesEndedWithEvent : AppKit.NSEvent -&gt; unit" Usage="nSResponder.TouchesEndedWithEvent theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("touchesEndedWithEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesMovedWithEvent">
      <MemberSignature Language="C#" Value="public virtual void TouchesMovedWithEvent (AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TouchesMovedWithEvent(class AppKit.NSEvent theEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.TouchesMovedWithEvent(AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member TouchesMovedWithEvent : AppKit.NSEvent -&gt; unit&#xA;override this.TouchesMovedWithEvent : AppKit.NSEvent -&gt; unit" Usage="nSResponder.TouchesMovedWithEvent theEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("touchesMovedWithEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryToPerformwith">
      <MemberSignature Language="C#" Value="public virtual bool TryToPerformwith (ObjCRuntime.Selector anAction, Foundation.NSObject anObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryToPerformwith(class ObjCRuntime.Selector anAction, class Foundation.NSObject anObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.TryToPerformwith(ObjCRuntime.Selector,Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member TryToPerformwith : ObjCRuntime.Selector * Foundation.NSObject -&gt; bool&#xA;override this.TryToPerformwith : ObjCRuntime.Selector * Foundation.NSObject -&gt; bool" Usage="nSResponder.TryToPerformwith (anAction, anObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("tryToPerform:with:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anAction" Type="ObjCRuntime.Selector" />
        <Parameter Name="anObject" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="anAction">To be added.</param>
        <param name="anObject">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUserActivityState">
      <MemberSignature Language="C#" Value="public virtual void UpdateUserActivityState (Foundation.NSUserActivity userActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateUserActivityState(class Foundation.NSUserActivity userActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.UpdateUserActivityState(Foundation.NSUserActivity)" />
      <MemberSignature Language="F#" Value="abstract member UpdateUserActivityState : Foundation.NSUserActivity -&gt; unit&#xA;override this.UpdateUserActivityState : Foundation.NSUserActivity -&gt; unit" Usage="nSResponder.UpdateUserActivityState userActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("updateUserActivityState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userActivity" Type="Foundation.NSUserActivity" />
      </Parameters>
      <Docs>
        <param name="userActivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserActivity">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSUserActivity UserActivity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSUserActivity UserActivity" />
      <MemberSignature Language="DocId" Value="P:AppKit.NSResponder.UserActivity" />
      <MemberSignature Language="F#" Value="member this.UserActivity : Foundation.NSUserActivity with get, set" Usage="AppKit.NSResponder.UserActivity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("userActivity", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setUserActivity:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSUserActivity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateProposedFirstResponder">
      <MemberSignature Language="C#" Value="public virtual bool ValidateProposedFirstResponder (AppKit.NSResponder responder, AppKit.NSEvent forEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ValidateProposedFirstResponder(class AppKit.NSResponder responder, class AppKit.NSEvent forEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.ValidateProposedFirstResponder(AppKit.NSResponder,AppKit.NSEvent)" />
      <MemberSignature Language="F#" Value="abstract member ValidateProposedFirstResponder : AppKit.NSResponder * AppKit.NSEvent -&gt; bool&#xA;override this.ValidateProposedFirstResponder : AppKit.NSResponder * AppKit.NSEvent -&gt; bool" Usage="nSResponder.ValidateProposedFirstResponder (responder, forEvent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("validateProposedFirstResponder:forEvent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responder" Type="AppKit.NSResponder" />
        <Parameter Name="forEvent" Type="AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="responder">To be added.</param>
        <param name="forEvent">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidRequestorForSendType">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject ValidRequestorForSendType (string sendType, string returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject ValidRequestorForSendType(string sendType, string returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.ValidRequestorForSendType(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ValidRequestorForSendType : string * string -&gt; Foundation.NSObject&#xA;override this.ValidRequestorForSendType : string * string -&gt; Foundation.NSObject" Usage="nSResponder.ValidRequestorForSendType (sendType, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("validRequestorForSendType:returnType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sendType" Type="System.String" />
        <Parameter Name="returnType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sendType">To be added.</param>
        <param name="returnType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WantsForwardedScrollEventsForAxis">
      <MemberSignature Language="C#" Value="public virtual bool WantsForwardedScrollEventsForAxis (AppKit.NSEventGestureAxis axis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WantsForwardedScrollEventsForAxis(valuetype AppKit.NSEventGestureAxis axis) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.WantsForwardedScrollEventsForAxis(AppKit.NSEventGestureAxis)" />
      <MemberSignature Language="F#" Value="abstract member WantsForwardedScrollEventsForAxis : AppKit.NSEventGestureAxis -&gt; bool&#xA;override this.WantsForwardedScrollEventsForAxis : AppKit.NSEventGestureAxis -&gt; bool" Usage="nSResponder.WantsForwardedScrollEventsForAxis axis" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("wantsForwardedScrollEventsForAxis:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="AppKit.NSEventGestureAxis" />
      </Parameters>
      <Docs>
        <param name="axis">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WantsScrollEventsForSwipeTrackingOnAxis">
      <MemberSignature Language="C#" Value="public virtual bool WantsScrollEventsForSwipeTrackingOnAxis (AppKit.NSEventGestureAxis axis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WantsScrollEventsForSwipeTrackingOnAxis(valuetype AppKit.NSEventGestureAxis axis) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.WantsScrollEventsForSwipeTrackingOnAxis(AppKit.NSEventGestureAxis)" />
      <MemberSignature Language="F#" Value="abstract member WantsScrollEventsForSwipeTrackingOnAxis : AppKit.NSEventGestureAxis -&gt; bool&#xA;override this.WantsScrollEventsForSwipeTrackingOnAxis : AppKit.NSEventGestureAxis -&gt; bool" Usage="nSResponder.WantsScrollEventsForSwipeTrackingOnAxis axis" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("wantsScrollEventsForSwipeTrackingOnAxis:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="AppKit.NSEventGestureAxis" />
      </Parameters>
      <Docs>
        <param name="axis">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillPresentError">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSError WillPresentError (Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSError WillPresentError(class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSResponder.WillPresentError(Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member WillPresentError : Foundation.NSError -&gt; Foundation.NSError&#xA;override this.WillPresentError : Foundation.NSError -&gt; Foundation.NSError" Usage="nSResponder.WillPresentError error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("willPresentError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
