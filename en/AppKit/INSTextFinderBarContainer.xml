<Type Name="INSTextFinderBarContainer" FullName="AppKit.INSTextFinderBarContainer">
  <TypeSignature Language="C#" Value="public interface INSTextFinderBarContainer : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INSTextFinderBarContainer implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.INSTextFinderBarContainer" />
  <TypeSignature Language="F#" Value="type INSTextFinderBarContainer = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="NSTextFinderBarContainer", WrapperType=typeof(AppKit.NSTextFinderBarContainerWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="FindBarViewDidChangeHeight", Selector="findBarViewDidChangeHeight")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="isFindBarVisible", IsProperty=true, IsRequired=true, IsStatic=false, Name="FindBarVisible", PropertyType=typeof(System.Boolean), Selector="findBarVisible", SetterSelector="setFindBarVisible:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.Strong, GetterSelector="findBarView", IsProperty=true, IsRequired=true, IsStatic=false, Name="FindBarView", PropertyType=typeof(AppKit.NSView), Selector="findBarView", SetterSelector="setFindBarView:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="contentView", IsProperty=true, IsRequired=false, IsStatic=false, Name="ContentView", PropertyType=typeof(AppKit.NSView), Selector="contentView")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FindBarView">
      <MemberSignature Language="C#" Value="public AppKit.NSView FindBarView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSView FindBarView" />
      <MemberSignature Language="DocId" Value="P:AppKit.INSTextFinderBarContainer.FindBarView" />
      <MemberSignature Language="F#" Value="member this.FindBarView : AppKit.NSView with get, set" Usage="AppKit.INSTextFinderBarContainer.FindBarView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("findBarView", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setFindBarView:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindBarViewDidChangeHeight">
      <MemberSignature Language="C#" Value="public void FindBarViewDidChangeHeight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FindBarViewDidChangeHeight() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.INSTextFinderBarContainer.FindBarViewDidChangeHeight" />
      <MemberSignature Language="F#" Value="abstract member FindBarViewDidChangeHeight : unit -&gt; unit" Usage="iNSTextFinderBarContainer.FindBarViewDidChangeHeight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("findBarViewDidChangeHeight")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindBarVisible">
      <MemberSignature Language="C#" Value="public bool FindBarVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FindBarVisible" />
      <MemberSignature Language="DocId" Value="P:AppKit.INSTextFinderBarContainer.FindBarVisible" />
      <MemberSignature Language="F#" Value="member this.FindBarVisible : bool with get, set" Usage="AppKit.INSTextFinderBarContainer.FindBarVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isFindBarVisible")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setFindBarVisible:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
