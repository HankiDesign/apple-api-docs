<Type Name="NSLayoutManagerDelegate" FullName="AppKit.NSLayoutManagerDelegate">
  <TypeSignature Language="C#" Value="public class NSLayoutManagerDelegate : Foundation.NSObject, AppKit.INSLayoutManagerDelegate, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSLayoutManagerDelegate extends Foundation.NSObject implements class AppKit.INSLayoutManagerDelegate, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSLayoutManagerDelegate" />
  <TypeSignature Language="F#" Value="type NSLayoutManagerDelegate = class&#xA;    inherit NSObject&#xA;    interface INSLayoutManagerDelegate&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>AppKit.INSLayoutManagerDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Register("NSLayoutManagerDelegate", false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSLayoutManagerDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManagerDelegate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSLayoutManagerDelegate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManagerDelegate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AppKit.NSLayoutManagerDelegate : Foundation.NSObjectFlag -&gt; AppKit.NSLayoutManagerDelegate" Usage="new AppKit.NSLayoutManagerDelegate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSLayoutManagerDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManagerDelegate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AppKit.NSLayoutManagerDelegate : nativeint -&gt; AppKit.NSLayoutManagerDelegate" Usage="new AppKit.NSLayoutManagerDelegate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeGeometry">
      <MemberSignature Language="C#" Value="public virtual void DidChangeGeometry (AppKit.NSLayoutManager layoutManager, AppKit.NSTextContainer textContainer, CoreGraphics.CGSize oldSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidChangeGeometry(class AppKit.NSLayoutManager layoutManager, class AppKit.NSTextContainer textContainer, valuetype CoreGraphics.CGSize oldSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManagerDelegate.DidChangeGeometry(AppKit.NSLayoutManager,AppKit.NSTextContainer,CoreGraphics.CGSize)" />
      <MemberSignature Language="F#" Value="abstract member DidChangeGeometry : AppKit.NSLayoutManager * AppKit.NSTextContainer * CoreGraphics.CGSize -&gt; unit&#xA;override this.DidChangeGeometry : AppKit.NSLayoutManager * AppKit.NSTextContainer * CoreGraphics.CGSize -&gt; unit" Usage="nSLayoutManagerDelegate.DidChangeGeometry (layoutManager, textContainer, oldSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("layoutManager:textContainer:didChangeGeometryFromSize:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="AppKit.NSLayoutManager" />
        <Parameter Name="textContainer" Type="AppKit.NSTextContainer" />
        <Parameter Name="oldSize" Type="CoreGraphics.CGSize" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="oldSize">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoundingBox">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect GetBoundingBox (AppKit.NSLayoutManager layoutManager, nuint glyphIndex, AppKit.NSTextContainer textContainer, CoreGraphics.CGRect proposedRect, CoreGraphics.CGPoint glyphPosition, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGRect GetBoundingBox(class AppKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, class AppKit.NSTextContainer textContainer, valuetype CoreGraphics.CGRect proposedRect, valuetype CoreGraphics.CGPoint glyphPosition, valuetype System.nuint charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManagerDelegate.GetBoundingBox(AppKit.NSLayoutManager,System.nuint,AppKit.NSTextContainer,CoreGraphics.CGRect,CoreGraphics.CGPoint,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member GetBoundingBox : AppKit.NSLayoutManager * nuint * AppKit.NSTextContainer * CoreGraphics.CGRect * CoreGraphics.CGPoint * nuint -&gt; CoreGraphics.CGRect&#xA;override this.GetBoundingBox : AppKit.NSLayoutManager * nuint * AppKit.NSTextContainer * CoreGraphics.CGRect * CoreGraphics.CGPoint * nuint -&gt; CoreGraphics.CGRect" Usage="nSLayoutManagerDelegate.GetBoundingBox (layoutManager, glyphIndex, textContainer, proposedRect, glyphPosition, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="AppKit.NSLayoutManager" />
        <Parameter Name="glyphIndex" Type="System.nuint" />
        <Parameter Name="textContainer" Type="AppKit.NSTextContainer" />
        <Parameter Name="proposedRect" Type="CoreGraphics.CGRect" />
        <Parameter Name="glyphPosition" Type="CoreGraphics.CGPoint" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="proposedRect">To be added.</param>
        <param name="glyphPosition">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineSpacingAfterGlyph">
      <MemberSignature Language="C#" Value="public virtual nfloat GetLineSpacingAfterGlyph (AppKit.NSLayoutManager layoutManager, nuint glyphIndex, CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetLineSpacingAfterGlyph(class AppKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManagerDelegate.GetLineSpacingAfterGlyph(AppKit.NSLayoutManager,System.nuint,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member GetLineSpacingAfterGlyph : AppKit.NSLayoutManager * nuint * CoreGraphics.CGRect -&gt; nfloat&#xA;override this.GetLineSpacingAfterGlyph : AppKit.NSLayoutManager * nuint * CoreGraphics.CGRect -&gt; nfloat" Usage="nSLayoutManagerDelegate.GetLineSpacingAfterGlyph (layoutManager, glyphIndex, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="AppKit.NSLayoutManager" />
        <Parameter Name="glyphIndex" Type="System.nuint" />
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParagraphSpacingAfterGlyph">
      <MemberSignature Language="C#" Value="public virtual nfloat GetParagraphSpacingAfterGlyph (AppKit.NSLayoutManager layoutManager, nuint glyphIndex, CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetParagraphSpacingAfterGlyph(class AppKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManagerDelegate.GetParagraphSpacingAfterGlyph(AppKit.NSLayoutManager,System.nuint,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member GetParagraphSpacingAfterGlyph : AppKit.NSLayoutManager * nuint * CoreGraphics.CGRect -&gt; nfloat&#xA;override this.GetParagraphSpacingAfterGlyph : AppKit.NSLayoutManager * nuint * CoreGraphics.CGRect -&gt; nfloat" Usage="nSLayoutManagerDelegate.GetParagraphSpacingAfterGlyph (layoutManager, glyphIndex, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="AppKit.NSLayoutManager" />
        <Parameter Name="glyphIndex" Type="System.nuint" />
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParagraphSpacingBeforeGlyph">
      <MemberSignature Language="C#" Value="public virtual nfloat GetParagraphSpacingBeforeGlyph (AppKit.NSLayoutManager layoutManager, nuint glyphIndex, CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetParagraphSpacingBeforeGlyph(class AppKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManagerDelegate.GetParagraphSpacingBeforeGlyph(AppKit.NSLayoutManager,System.nuint,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member GetParagraphSpacingBeforeGlyph : AppKit.NSLayoutManager * nuint * CoreGraphics.CGRect -&gt; nfloat&#xA;override this.GetParagraphSpacingBeforeGlyph : AppKit.NSLayoutManager * nuint * CoreGraphics.CGRect -&gt; nfloat" Usage="nSLayoutManagerDelegate.GetParagraphSpacingBeforeGlyph (layoutManager, glyphIndex, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="AppKit.NSLayoutManager" />
        <Parameter Name="glyphIndex" Type="System.nuint" />
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutCompleted">
      <MemberSignature Language="C#" Value="public virtual void LayoutCompleted (AppKit.NSLayoutManager layoutManager, AppKit.NSTextContainer textContainer, bool layoutFinishedFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LayoutCompleted(class AppKit.NSLayoutManager layoutManager, class AppKit.NSTextContainer textContainer, bool layoutFinishedFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManagerDelegate.LayoutCompleted(AppKit.NSLayoutManager,AppKit.NSTextContainer,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member LayoutCompleted : AppKit.NSLayoutManager * AppKit.NSTextContainer * bool -&gt; unit&#xA;override this.LayoutCompleted : AppKit.NSLayoutManager * AppKit.NSTextContainer * bool -&gt; unit" Usage="nSLayoutManagerDelegate.LayoutCompleted (layoutManager, textContainer, layoutFinishedFlag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("layoutManager:didCompleteLayoutForTextContainer:atEnd:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="AppKit.NSLayoutManager" />
        <Parameter Name="textContainer" Type="AppKit.NSTextContainer" />
        <Parameter Name="layoutFinishedFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="layoutFinishedFlag">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutInvalidated">
      <MemberSignature Language="C#" Value="public virtual void LayoutInvalidated (AppKit.NSLayoutManager sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LayoutInvalidated(class AppKit.NSLayoutManager sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManagerDelegate.LayoutInvalidated(AppKit.NSLayoutManager)" />
      <MemberSignature Language="F#" Value="abstract member LayoutInvalidated : AppKit.NSLayoutManager -&gt; unit&#xA;override this.LayoutInvalidated : AppKit.NSLayoutManager -&gt; unit" Usage="nSLayoutManagerDelegate.LayoutInvalidated sender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("layoutManagerDidInvalidateLayout:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="AppKit.NSLayoutManager" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldBreakLineByHyphenatingBeforeCharacter">
      <MemberSignature Language="C#" Value="public virtual bool ShouldBreakLineByHyphenatingBeforeCharacter (AppKit.NSLayoutManager layoutManager, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldBreakLineByHyphenatingBeforeCharacter(class AppKit.NSLayoutManager layoutManager, valuetype System.nuint charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManagerDelegate.ShouldBreakLineByHyphenatingBeforeCharacter(AppKit.NSLayoutManager,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member ShouldBreakLineByHyphenatingBeforeCharacter : AppKit.NSLayoutManager * nuint -&gt; bool&#xA;override this.ShouldBreakLineByHyphenatingBeforeCharacter : AppKit.NSLayoutManager * nuint -&gt; bool" Usage="nSLayoutManagerDelegate.ShouldBreakLineByHyphenatingBeforeCharacter (layoutManager, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="AppKit.NSLayoutManager" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldBreakLineByWordBeforeCharacter">
      <MemberSignature Language="C#" Value="public virtual bool ShouldBreakLineByWordBeforeCharacter (AppKit.NSLayoutManager layoutManager, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldBreakLineByWordBeforeCharacter(class AppKit.NSLayoutManager layoutManager, valuetype System.nuint charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManagerDelegate.ShouldBreakLineByWordBeforeCharacter(AppKit.NSLayoutManager,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member ShouldBreakLineByWordBeforeCharacter : AppKit.NSLayoutManager * nuint -&gt; bool&#xA;override this.ShouldBreakLineByWordBeforeCharacter : AppKit.NSLayoutManager * nuint -&gt; bool" Usage="nSLayoutManagerDelegate.ShouldBreakLineByWordBeforeCharacter (layoutManager, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="AppKit.NSLayoutManager" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldGenerateGlyphs">
      <MemberSignature Language="C#" Value="public virtual nuint ShouldGenerateGlyphs (AppKit.NSLayoutManager layoutManager, IntPtr glyphBuffer, IntPtr props, IntPtr charIndexes, AppKit.NSFont aFont, Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nuint ShouldGenerateGlyphs(class AppKit.NSLayoutManager layoutManager, native int glyphBuffer, native int props, native int charIndexes, class AppKit.NSFont aFont, valuetype Foundation.NSRange glyphRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManagerDelegate.ShouldGenerateGlyphs(AppKit.NSLayoutManager,System.IntPtr,System.IntPtr,System.IntPtr,AppKit.NSFont,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member ShouldGenerateGlyphs : AppKit.NSLayoutManager * nativeint * nativeint * nativeint * AppKit.NSFont * Foundation.NSRange -&gt; nuint&#xA;override this.ShouldGenerateGlyphs : AppKit.NSLayoutManager * nativeint * nativeint * nativeint * AppKit.NSFont * Foundation.NSRange -&gt; nuint" Usage="nSLayoutManagerDelegate.ShouldGenerateGlyphs (layoutManager, glyphBuffer, props, charIndexes, aFont, glyphRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="AppKit.NSLayoutManager" />
        <Parameter Name="glyphBuffer" Type="System.IntPtr" />
        <Parameter Name="props" Type="System.IntPtr" />
        <Parameter Name="charIndexes" Type="System.IntPtr" />
        <Parameter Name="aFont" Type="AppKit.NSFont" />
        <Parameter Name="glyphRange" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="glyphBuffer">To be added.</param>
        <param name="props">To be added.</param>
        <param name="charIndexes">To be added.</param>
        <param name="aFont">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSetLineFragmentRect">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSetLineFragmentRect (AppKit.NSLayoutManager layoutManager, ref CoreGraphics.CGRect lineFragmentRect, ref CoreGraphics.CGRect lineFragmentUsedRect, ref nfloat baselineOffset, AppKit.NSTextContainer textContainer, Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSetLineFragmentRect(class AppKit.NSLayoutManager layoutManager, valuetype CoreGraphics.CGRect&amp; lineFragmentRect, valuetype CoreGraphics.CGRect&amp; lineFragmentUsedRect, valuetype System.nfloat&amp; baselineOffset, class AppKit.NSTextContainer textContainer, valuetype Foundation.NSRange glyphRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManagerDelegate.ShouldSetLineFragmentRect(AppKit.NSLayoutManager,CoreGraphics.CGRect@,CoreGraphics.CGRect@,System.nfloat@,AppKit.NSTextContainer,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member ShouldSetLineFragmentRect : AppKit.NSLayoutManager *  *  *  * AppKit.NSTextContainer * Foundation.NSRange -&gt; bool&#xA;override this.ShouldSetLineFragmentRect : AppKit.NSLayoutManager *  *  *  * AppKit.NSTextContainer * Foundation.NSRange -&gt; bool" Usage="nSLayoutManagerDelegate.ShouldSetLineFragmentRect (layoutManager, lineFragmentRect, lineFragmentUsedRect, baselineOffset, textContainer, glyphRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("layoutManager:shouldSetLineFragmentRect:lineFragmentUsedRect:baselineOffset:inTextContainer:forGlyphRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="AppKit.NSLayoutManager" />
        <Parameter Name="lineFragmentRect" Type="CoreGraphics.CGRect" RefType="ref" />
        <Parameter Name="lineFragmentUsedRect" Type="CoreGraphics.CGRect" RefType="ref" />
        <Parameter Name="baselineOffset" Type="System.nfloat" RefType="ref" />
        <Parameter Name="textContainer" Type="AppKit.NSTextContainer" />
        <Parameter Name="glyphRange" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="lineFragmentRect">To be added.</param>
        <param name="lineFragmentUsedRect">To be added.</param>
        <param name="baselineOffset">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldUseAction">
      <MemberSignature Language="C#" Value="public virtual AppKit.NSControlCharacterAction ShouldUseAction (AppKit.NSLayoutManager layoutManager, AppKit.NSControlCharacterAction action, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AppKit.NSControlCharacterAction ShouldUseAction(class AppKit.NSLayoutManager layoutManager, valuetype AppKit.NSControlCharacterAction action, valuetype System.nuint charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManagerDelegate.ShouldUseAction(AppKit.NSLayoutManager,AppKit.NSControlCharacterAction,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member ShouldUseAction : AppKit.NSLayoutManager * AppKit.NSControlCharacterAction * nuint -&gt; AppKit.NSControlCharacterAction&#xA;override this.ShouldUseAction : AppKit.NSLayoutManager * AppKit.NSControlCharacterAction * nuint -&gt; AppKit.NSControlCharacterAction" Usage="nSLayoutManagerDelegate.ShouldUseAction (layoutManager, action, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("layoutManager:shouldUseAction:forControlCharacterAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSControlCharacterAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="AppKit.NSLayoutManager" />
        <Parameter Name="action" Type="AppKit.NSControlCharacterAction" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="action">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldUseTemporaryAttributes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary ShouldUseTemporaryAttributes (AppKit.NSLayoutManager layoutManager, Foundation.NSDictionary temporaryAttributes, bool drawingToScreen, nint charIndex, IntPtr effectiveCharRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSDictionary ShouldUseTemporaryAttributes(class AppKit.NSLayoutManager layoutManager, class Foundation.NSDictionary temporaryAttributes, bool drawingToScreen, valuetype System.nint charIndex, native int effectiveCharRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManagerDelegate.ShouldUseTemporaryAttributes(AppKit.NSLayoutManager,Foundation.NSDictionary,System.Boolean,System.nint,System.IntPtr)" />
      <MemberSignature Language="F#" Value="abstract member ShouldUseTemporaryAttributes : AppKit.NSLayoutManager * Foundation.NSDictionary * bool * nint * nativeint -&gt; Foundation.NSDictionary&#xA;override this.ShouldUseTemporaryAttributes : AppKit.NSLayoutManager * Foundation.NSDictionary * bool * nint * nativeint -&gt; Foundation.NSDictionary" Usage="nSLayoutManagerDelegate.ShouldUseTemporaryAttributes (layoutManager, temporaryAttributes, drawingToScreen, charIndex, effectiveCharRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.iOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="AppKit.NSLayoutManager" />
        <Parameter Name="temporaryAttributes" Type="Foundation.NSDictionary" />
        <Parameter Name="drawingToScreen" Type="System.Boolean" />
        <Parameter Name="charIndex" Type="System.nint" />
        <Parameter Name="effectiveCharRange" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="temporaryAttributes">To be added.</param>
        <param name="drawingToScreen">To be added.</param>
        <param name="charIndex">To be added.</param>
        <param name="effectiveCharRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
