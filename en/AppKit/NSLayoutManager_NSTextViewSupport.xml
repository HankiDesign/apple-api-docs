<Type Name="NSLayoutManager_NSTextViewSupport" FullName="AppKit.NSLayoutManager_NSTextViewSupport">
  <TypeSignature Language="C#" Value="public static class NSLayoutManager_NSTextViewSupport" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NSLayoutManager_NSTextViewSupport extends System.Object" />
  <TypeSignature Language="DocId" Value="T:AppKit.NSLayoutManager_NSTextViewSupport" />
  <TypeSignature Language="F#" Value="type NSLayoutManager_NSTextViewSupport = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.iOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetFirstTextView">
      <MemberSignature Language="C#" Value="public static AppKit.NSTextView GetFirstTextView (this AppKit.NSLayoutManager This);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSTextView GetFirstTextView(class AppKit.NSLayoutManager This) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManager_NSTextViewSupport.GetFirstTextView(AppKit.NSLayoutManager)" />
      <MemberSignature Language="F#" Value="static member GetFirstTextView : AppKit.NSLayoutManager -&gt; AppKit.NSTextView" Usage="AppKit.NSLayoutManager_NSTextViewSupport.GetFirstTextView This" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("firstTextView")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSTextView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="AppKit.NSLayoutManager" RefType="this" />
      </Parameters>
      <Docs>
        <param name="This">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRulerAccessoryView">
      <MemberSignature Language="C#" Value="public static AppKit.NSView GetRulerAccessoryView (this AppKit.NSLayoutManager This, AppKit.NSTextView textView, AppKit.NSParagraphStyle paragraphStyle, AppKit.NSRulerView ruler, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSView GetRulerAccessoryView(class AppKit.NSLayoutManager This, class AppKit.NSTextView textView, class AppKit.NSParagraphStyle paragraphStyle, class AppKit.NSRulerView ruler, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManager_NSTextViewSupport.GetRulerAccessoryView(AppKit.NSLayoutManager,AppKit.NSTextView,AppKit.NSParagraphStyle,AppKit.NSRulerView,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member GetRulerAccessoryView : AppKit.NSLayoutManager * AppKit.NSTextView * AppKit.NSParagraphStyle * AppKit.NSRulerView * bool -&gt; AppKit.NSView" Usage="AppKit.NSLayoutManager_NSTextViewSupport.GetRulerAccessoryView (This, textView, paragraphStyle, ruler, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="AppKit.NSLayoutManager" RefType="this" />
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="paragraphStyle" Type="AppKit.NSParagraphStyle" />
        <Parameter Name="ruler" Type="AppKit.NSRulerView" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="This">To be added.</param>
        <param name="textView">To be added.</param>
        <param name="paragraphStyle">To be added.</param>
        <param name="ruler">To be added.</param>
        <param name="enabled">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRulerMarkers">
      <MemberSignature Language="C#" Value="public static AppKit.NSRulerMarker[] GetRulerMarkers (this AppKit.NSLayoutManager This, AppKit.NSTextView textView, AppKit.NSParagraphStyle paragraphStyle, AppKit.NSRulerView ruler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSRulerMarker[] GetRulerMarkers(class AppKit.NSLayoutManager This, class AppKit.NSTextView textView, class AppKit.NSParagraphStyle paragraphStyle, class AppKit.NSRulerView ruler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManager_NSTextViewSupport.GetRulerMarkers(AppKit.NSLayoutManager,AppKit.NSTextView,AppKit.NSParagraphStyle,AppKit.NSRulerView)" />
      <MemberSignature Language="F#" Value="static member GetRulerMarkers : AppKit.NSLayoutManager * AppKit.NSTextView * AppKit.NSParagraphStyle * AppKit.NSRulerView -&gt; AppKit.NSRulerMarker[]" Usage="AppKit.NSLayoutManager_NSTextViewSupport.GetRulerMarkers (This, textView, paragraphStyle, ruler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rulerMarkersForTextView:paragraphStyle:ruler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSRulerMarker[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="AppKit.NSLayoutManager" RefType="this" />
        <Parameter Name="textView" Type="AppKit.NSTextView" />
        <Parameter Name="paragraphStyle" Type="AppKit.NSParagraphStyle" />
        <Parameter Name="ruler" Type="AppKit.NSRulerView" />
      </Parameters>
      <Docs>
        <param name="This">To be added.</param>
        <param name="textView">To be added.</param>
        <param name="paragraphStyle">To be added.</param>
        <param name="ruler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextViewForBeginningOfSelection">
      <MemberSignature Language="C#" Value="public static AppKit.NSTextView GetTextViewForBeginningOfSelection (this AppKit.NSLayoutManager This);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSTextView GetTextViewForBeginningOfSelection(class AppKit.NSLayoutManager This) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManager_NSTextViewSupport.GetTextViewForBeginningOfSelection(AppKit.NSLayoutManager)" />
      <MemberSignature Language="F#" Value="static member GetTextViewForBeginningOfSelection : AppKit.NSLayoutManager -&gt; AppKit.NSTextView" Usage="AppKit.NSLayoutManager_NSTextViewSupport.GetTextViewForBeginningOfSelection This" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("textViewForBeginningOfSelection")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AppKit.NSTextView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="AppKit.NSLayoutManager" RefType="this" />
      </Parameters>
      <Docs>
        <param name="This">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutManagerOwnsFirstResponder">
      <MemberSignature Language="C#" Value="public static bool LayoutManagerOwnsFirstResponder (this AppKit.NSLayoutManager This, AppKit.NSWindow window);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool LayoutManagerOwnsFirstResponder(class AppKit.NSLayoutManager This, class AppKit.NSWindow window) cil managed" />
      <MemberSignature Language="DocId" Value="M:AppKit.NSLayoutManager_NSTextViewSupport.LayoutManagerOwnsFirstResponder(AppKit.NSLayoutManager,AppKit.NSWindow)" />
      <MemberSignature Language="F#" Value="static member LayoutManagerOwnsFirstResponder : AppKit.NSLayoutManager * AppKit.NSWindow -&gt; bool" Usage="AppKit.NSLayoutManager_NSTextViewSupport.LayoutManagerOwnsFirstResponder (This, window)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("layoutManagerOwnsFirstResponderInWindow:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="AppKit.NSLayoutManager" RefType="this" />
        <Parameter Name="window" Type="AppKit.NSWindow" />
      </Parameters>
      <Docs>
        <param name="This">To be added.</param>
        <param name="window">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
